{
	"id": "2970f59de1c98c41f0783c43b732a70e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"StonersTown Contract/STW.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2022-06-19\n*/\n\n/**\n *Submitted for verification at Etherscan.io on 2022-05-08\n*/\n\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n// @@@@@@    @@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@  @@            @@@          @@@\n// @@@@  @@@@  @@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@@  @@@@@@@@  @@@@@@@@  @@@@@@@@@@@\n// @@@@@  @@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@  @@@@@@@@@  @@@@@@@@  @@@@@@@@@@@\n// @@@@@@@  @@@@@@        @@@@@@      @@@  @    @@@@@@     @@@@ @@   @@@   @@@@@@@@@  @@@@@@      @@@@  @@@@@@@@@@@@  @@ @    @@@@@@@@@@@@  @@@@@@   @@@@@@  @@@@@@@@@@  @@@@@@@@      @@@@@@@\n// @@@@@@@@@@@  @@@@  @@@@@@@@@  @@@@  @@@  @@@  @@@     @@@@@@  @@@@@@    @@@@@@@@@  @@@@@  @@@@   @@@  @@@@  @@@@  @@@  @@@  @@@@@@@@@@@@  @@@@  @  @@@@  @@@@@@@@@@@  @@@@@@@@  @@@@@@@@@@@\n// @@@@@  @@@  @@@@@  @@@@  @@@  @@@@  @@@  @@@  @@@@  @@@@  @@  @@@@@@@@@  @@@@@@@@  @@@@@  @@@@  @@@@@  @  @@  @  @@@@  @@@  @@@@@@@@@@@@@  @@  @@@  @@  @@@@@@@@@@@@  @@@@@@@@  @@@@@@@@@@@\n// @@@@@@     @@@@@@@     @@@@@@     @@@@@  @@@  @@@@@@    @@@@  @@@@@@    @@@@@@@@@  @@@@@@@    @@@@@@@@   @@@@   @@@@@  @@@  @@@  @@@@@@@@@   @@@@@@   @@@@@@@@@@@@@@  @@@@@@@@  @@@@@@@@@@@\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n\n/**\n *Submitted for verification at Etherscan.io on 2022-05-03\n*/\n\n// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: erc721a/contracts/ERC721A.sol\n\n\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n\n\n\n\n\n\n\n\nerror ApprovalCallerNotOwnerNorApproved();\nerror ApprovalQueryForNonexistentToken();\nerror ApproveToCaller();\nerror ApprovalToCurrentOwner();\nerror BalanceQueryForZeroAddress();\nerror MintedQueryForZeroAddress();\nerror BurnedQueryForZeroAddress();\nerror AuxQueryForZeroAddress();\nerror MintToZeroAddress();\nerror MintZeroQuantity();\nerror OwnerIndexOutOfBounds();\nerror OwnerQueryForNonexistentToken();\nerror TokenIndexOutOfBounds();\nerror TransferCallerNotOwnerNorApproved();\nerror TransferFromIncorrectOwner();\nerror TransferToNonERC721ReceiverImplementer();\nerror TransferToZeroAddress();\nerror URIQueryForNonexistentToken();\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Compiler will pack this into a single 256bit word.\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n    }\n\n    // Compiler will pack this into a single 256bit word.\n    struct AddressData {\n        // Realistically, 2**64-1 is more than enough.\n        uint64 balance;\n        // Keeps track of mint count with minimal overhead for tokenomics.\n        uint64 numberMinted;\n        // Keeps track of burn count with minimal overhead for tokenomics.\n        uint64 numberBurned;\n        // For miscellaneous variable(s) pertaining to the address\n        // (e.g. number of whitelist mint slots used).\n        // If there are multiple variables, please pack them into a uint64.\n        uint64 aux;\n    }\n\n    // The tokenId of the next token to be minted.\n    uint256 internal _currentIndex;\n\n    // The number of tokens burned.\n    uint256 internal _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\n    mapping(uint256 => TokenOwnership) internal _ownerships;\n\n    // Mapping owner address to address data\n    mapping(address => AddressData) private _addressData;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * To change the starting tokenId, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\n     */\n    function totalSupply() public view returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than _currentIndex - _startTokenId() times\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to _startTokenId()\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return uint256(_addressData[owner].balance);\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        if (owner == address(0)) revert MintedQueryForZeroAddress();\n        return uint256(_addressData[owner].numberMinted);\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        if (owner == address(0)) revert BurnedQueryForZeroAddress();\n        return uint256(_addressData[owner].numberBurned);\n    }\n\n    /**\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        if (owner == address(0)) revert AuxQueryForZeroAddress();\n        return _addressData[owner].aux;\n    }\n\n    /**\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        if (owner == address(0)) revert AuxQueryForZeroAddress();\n        _addressData[owner].aux = aux;\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr && curr < _currentIndex) {\n                TokenOwnership memory ownership = _ownerships[curr];\n                if (!ownership.burned) {\n                    if (ownership.addr != address(0)) {\n                        return ownership;\n                    }\n                    // Invariant:\n                    // There will always be an ownership that has an address and is not burned\n                    // before an ownership that does not have an address and is not burned.\n                    // Hence, curr will not underflow.\n                    while (true) {\n                        curr--;\n                        ownership = _ownerships[curr];\n                        if (ownership.addr != address(0)) {\n                            return ownership;\n                        }\n                    }\n                }\n            }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return ownershipOf(tokenId).addr;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ERC721A.ownerOf(tokenId);\n        if (to == owner) revert ApprovalToCurrentOwner();\n\n        if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {\n            revert ApprovalCallerNotOwnerNorApproved();\n        }\n\n        _approve(to, tokenId, owner);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public override {\n        if (operator == _msgSender()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n        if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {\n            revert TransferToNonERC721ReceiverImplementer();\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _startTokenId() <= tokenId && tokenId < _currentIndex &&\n            !_ownerships[tokenId].burned;\n    }\n\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity, _data, true);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(\n        address to,\n        uint256 quantity,\n        bytes memory _data,\n        bool safe\n    ) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\n        unchecked {\n            _addressData[to].balance += uint64(quantity);\n            _addressData[to].numberMinted += uint64(quantity);\n\n            _ownerships[startTokenId].addr = to;\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\n\n            uint256 updatedIndex = startTokenId;\n            uint256 end = updatedIndex + quantity;\n\n            if (safe && to.isContract()) {\n                do {\n                    emit Transfer(address(0), to, updatedIndex);\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (updatedIndex != end);\n                // Reentrancy protection\n                if (_currentIndex != startTokenId) revert();\n            } else {\n                do {\n                    emit Transfer(address(0), to, updatedIndex++);\n                } while (updatedIndex != end);\n            }\n            _currentIndex = updatedIndex;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) private {\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n        bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\n            isApprovedForAll(prevOwnership.addr, _msgSender()) ||\n            getApproved(tokenId) == _msgSender());\n\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, prevOwnership.addr);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            _addressData[from].balance -= 1;\n            _addressData[to].balance += 1;\n\n            _ownerships[tokenId].addr = to;\n            _ownerships[tokenId].startTimestamp = uint64(block.timestamp);\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            if (_ownerships[nextTokenId].addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId < _currentIndex) {\n                    _ownerships[nextTokenId].addr = prevOwnership.addr;\n                    _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n        _beforeTokenTransfers(prevOwnership.addr, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, prevOwnership.addr);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            _addressData[prevOwnership.addr].balance -= 1;\n            _addressData[prevOwnership.addr].numberBurned += 1;\n\n            // Keep track of who burned the token, and the timestamp of burning.\n            _ownerships[tokenId].addr = prevOwnership.addr;\n            _ownerships[tokenId].startTimestamp = uint64(block.timestamp);\n            _ownerships[tokenId].burned = true;\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            if (_ownerships[nextTokenId].addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId < _currentIndex) {\n                    _ownerships[nextTokenId].addr = prevOwnership.addr;\n                    _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(prevOwnership.addr, address(0), tokenId);\n        _afterTokenTransfers(prevOwnership.addr, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        address owner\n    ) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n            return retval == IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n     * minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n}\n\n// File: contracts/Twit2Mars.sol\n\n\n\npragma solidity ^0.8.4;\n\n\n\n\ncontract StonersTownWtf is ERC721A, Ownable, ReentrancyGuard {\n    using Strings for uint256;\n\n    uint256 public budPrice;\n    uint256 public maxbuds;\n    string private weedStore;\n    uint256 public freeBudPerWallet;\n    uint256 public maxBudPerTrans;\n    bool public IS_SALE_ACTIVE;\n    uint256 public freeBudAllowedUntil;\n    bool public METADATA_FROZEN;\n\n    mapping(address => uint256) private freeMintCountMap;\n\n    constructor(\n        uint256 price,\n        uint256 maxSupply,\n        string memory baseUri,\n        uint256 freeMintAllowance,\n        uint256 maxMintPerTx,\n        bool isSaleActive,\n        uint256 freeMintIsAllowedUntil\n    ) ERC721A(\"StonersTownWtf\", \"STW\") {\n        budPrice = price;\n        maxbuds = maxSupply;\n        weedStore = baseUri;\n        freeBudPerWallet = freeMintAllowance;\n        maxBudPerTrans = maxMintPerTx;\n        IS_SALE_ACTIVE = isSaleActive;\n        freeBudAllowedUntil = freeMintIsAllowedUntil;\n    }\n\n    /** FREE MINT **/\n\n    function updateFreeMintCount(address minter, uint256 count) private {\n        freeMintCountMap[minter] += count;\n    }\n\n    /** GETTERS **/\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return weedStore;\n    }\n\n    /** SETTERS **/\n\n    function setPrice(uint256 customPrice) external onlyOwner {\n        budPrice = customPrice;\n    }\n\n    function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {\n        require(newMaxSupply < maxbuds, \"Invalid new max supply\");\n        require(newMaxSupply >= _currentIndex, \"Invalid new max supply\");\n        maxbuds = newMaxSupply;\n    }\n\n    function setBaseURI(string memory customBaseURI_) external onlyOwner {\n        require(!METADATA_FROZEN, \"Metadata frozen!\");\n        weedStore = customBaseURI_;\n    }\n\n    function setFreeMintAllowance(uint256 freeMintAllowance)\n        external\n        onlyOwner\n    {\n        freeBudPerWallet = freeMintAllowance;\n    }\n\n    function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {\n        maxBudPerTrans = maxMintPerTx;\n    }\n\n    function setSaleActive(bool saleIsActive) external onlyOwner {\n        IS_SALE_ACTIVE = saleIsActive;\n    }\n\n    function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil)\n        external\n        onlyOwner\n    {\n        freeBudAllowedUntil = freeMintIsAllowedUntil;\n    }\n\n    function freezeMetadata() external onlyOwner {\n        METADATA_FROZEN = true;\n    }\n\n    /** MINT **/\n\n    modifier mintCompliance(uint256 _mintAmount) {\n        require(\n            _mintAmount > 0 && _mintAmount <= maxBudPerTrans,\n            \"Invalid mint amount!\"\n        );\n        require(\n            _currentIndex + _mintAmount <= maxbuds,\n            \"Max supply exceeded!\"\n        );\n        _;\n    }\n\n    function mint(uint256 _mintAmount)\n        public\n        payable\n        mintCompliance(_mintAmount)\n    {\n        require(IS_SALE_ACTIVE, \"Sale is not active!\");\n\n        uint256 price = budPrice * _mintAmount;\n\n        if (_currentIndex < freeBudAllowedUntil) {\n            uint256 remainingFreeMint = freeBudPerWallet -\n                freeMintCountMap[msg.sender];\n            if (remainingFreeMint > 0) {\n                if (_mintAmount >= remainingFreeMint) {\n                    price -= remainingFreeMint * budPrice;\n                    updateFreeMintCount(msg.sender, remainingFreeMint);\n                } else {\n                    price -= _mintAmount * budPrice;\n                    updateFreeMintCount(msg.sender, _mintAmount);\n                }\n            }\n        }\n\n        require(msg.value >= price, \"Insufficient funds!\");\n\n        _safeMint(msg.sender, _mintAmount);\n    }\n\n    function mintOwner(address _to, uint256 _mintAmount)\n        public\n        mintCompliance(_mintAmount)\n        onlyOwner\n    {\n        _safeMint(_to, _mintAmount);\n    }\n\n    /** PAYOUT **/\n\n    address private constant payoutAddress1 =\n        0x2e45A3053639CE97f43b4761CA9332Ea7B5aDB8a;\n\n\n    function withdraw() public onlyOwner nonReentrant {\n        uint256 balance = address(this).balance;\n        Address.sendValue(payable(payoutAddress1), balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"StonersTown Contract/STW.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StonersTown Contract/STW.sol\":10425:18486  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"StonersTown Contract/STW.sol\":10425:18486  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bc5b9eada2170595b6c4f444283347165557ab42390ce74baee8227a527e6d7f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc5b9eada2170595b6c4f444283347165557ab42390ce74baee8227a527e6d7f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC JUMPDEST SWAP15 0xAD LOG2 OR SDIV SWAP6 0xB6 0xC4 DELEGATECALL DIFFICULTY 0x28 CALLER SELFBALANCE AND SSTORE JUMPI 0xAB TIMESTAMP CODECOPY 0xC 0xE7 0x4B 0xAE 0xE8 0x22 PUSH27 0x527E6D7F64736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "10425:8061:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;10425:8061:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc5b9eada2170595b6c4f444283347165557ab42390ce74baee8227a527e6d7f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC JUMPDEST SWAP15 0xAD LOG2 OR SDIV SWAP6 0xB6 0xC4 DELEGATECALL DIFFICULTY 0x28 CALLER SELFBALANCE AND SSTORE JUMPI 0xAB TIMESTAMP CODECOPY 0xC 0xE7 0x4B 0xAE 0xE8 0x22 PUSH27 0x527E6D7F64736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "10425:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10425,
									"end": 18486,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc5b9eada2170595b6c4f444283347165557ab42390ce74baee8227a527e6d7f64736f6c63430008070033",
									".code": [
										{
											"begin": 10425,
											"end": 18486,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 18486,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}.Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StonersTown Contract/STW.sol\":29145:49269  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"StonersTown Contract/STW.sol\":31037:31191  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"StonersTown Contract/STW.sol\":31103:31116  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"StonersTown Contract/STW.sol\":31103:31108  _name */\n  0x02\n  swap1\n    /* \"StonersTown Contract/STW.sol\":31103:31116  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"StonersTown Contract/STW.sol\":31126:31143  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"StonersTown Contract/STW.sol\":31126:31133  _symbol */\n  0x03\n  swap1\n    /* \"StonersTown Contract/STW.sol\":31126:31143  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n  0x01\n    /* \"StonersTown Contract/STW.sol\":31153:31166  _currentIndex */\n  0x00\n    /* \"StonersTown Contract/STW.sol\":31153:31184  _currentIndex = _startTokenId() */\n  sstore\n  pop\n    /* \"StonersTown Contract/STW.sol\":29145:49269  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_24)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_19)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\n    /* \"#utility.yul\":14:899   */\ntag_25:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_27:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_33:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_34:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_37:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_39:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_40:\n    /* \"#utility.yul\":1222:1283   */\n  tag_41\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_42:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_43\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_14:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_45:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_30:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_24:\n    /* \"StonersTown Contract/STW.sol\":29145:49269  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"StonersTown Contract/STW.sol\":29145:49269  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":5194:5208   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5187:5209   */\n      iszero\n        /* \"#utility.yul\":5169:5210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5157:5159   */\n      0x20\n        /* \"#utility.yul\":5142:5160   */\n      add\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StonersTown Contract/STW.sol\":35576:35674  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4492:4524   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4474:4525   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4462:4464   */\n      0x20\n        /* \"#utility.yul\":4447:4465   */\n      add\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":4328:4531   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":36618:36980  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"StonersTown Contract/STW.sol\":31551:31848  function totalSupply() public view returns (uint256) {... */\n    tag_7:\n        /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":31801:31813  _burnCounter */\n      sload\n        /* \"StonersTown Contract/STW.sol\":31595:31602  uint256 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":31785:31798  _currentIndex */\n      sload\n        /* \"StonersTown Contract/STW.sol\":31785:31813  _currentIndex - _burnCounter */\n      sub\n      not(0x00)\n        /* \"StonersTown Contract/STW.sol\":31785:31831  _currentIndex - _burnCounter - _startTokenId() */\n      add\n        /* \"StonersTown Contract/STW.sol\":31551:31848  function totalSupply() public view returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":5591:5616   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5579:5581   */\n      0x20\n        /* \"#utility.yul\":5564:5582   */\n      add\n        /* \"StonersTown Contract/STW.sol\":31551:31848  function totalSupply() public view returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":5445:5622   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":37872:38036  function transferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":38102:38281  function safeTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":35392:35514  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":32639:32842  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":35738:35840  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":37308:37582  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":38347:38706  function safeTransferFrom(... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":35906:36228  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":37768:37793  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"StonersTown Contract/STW.sol\":37745:37749  bool */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":37768:37793  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37768:37786  _operatorApprovals */\n      0x07\n        /* \"StonersTown Contract/STW.sol\":37768:37793  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":37768:37803  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"StonersTown Contract/STW.sol\":32382:32386  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":32417:32457  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"StonersTown Contract/STW.sol\":32417:32521  interfaceId == type(IERC721).interfaceId ||... */\n      tag_81\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":32473:32521  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"StonersTown Contract/STW.sol\":32417:32521  interfaceId == type(IERC721).interfaceId ||... */\n    tag_81:\n        /* \"StonersTown Contract/STW.sol\":32417:32573  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_83\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":21325:21365  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":32537:32573  super.supportsInterface(interfaceId) */\n    tag_83:\n        /* \"StonersTown Contract/STW.sol\":32398:32573  return... */\n      swap3\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35576:35674  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"StonersTown Contract/STW.sol\":35630:35643  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":35662:35667  _name */\n      0x02\n        /* \"StonersTown Contract/STW.sol\":35655:35667  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":35576:35674  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"StonersTown Contract/STW.sol\":37109:37116  address */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":37133:37149  _exists(tokenId) */\n      tag_93\n        /* \"StonersTown Contract/STW.sol\":37141:37148  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":37133:37140  _exists */\n      tag_94\n        /* \"StonersTown Contract/STW.sol\":37133:37149  _exists(tokenId) */\n      jump\t// in\n    tag_93:\n        /* \"StonersTown Contract/STW.sol\":37128:37192  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_95\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":37158:37192  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":37128:37192  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_95:\n      pop\n        /* \"StonersTown Contract/STW.sol\":37210:37234  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37210:37225  _tokenApprovals */\n      0x06\n        /* \"StonersTown Contract/STW.sol\":37210:37234  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":36618:36980  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"StonersTown Contract/STW.sol\":36690:36703  address owner */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":36706:36730  ERC721A.ownerOf(tokenId) */\n      tag_97\n        /* \"StonersTown Contract/STW.sol\":36722:36729  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":36706:36721  ERC721A.ownerOf */\n      tag_53\n        /* \"StonersTown Contract/STW.sol\":36706:36730  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_97:\n        /* \"StonersTown Contract/STW.sol\":36690:36730  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":36750:36755  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":36744:36755  to == owner */\n      and\n        /* \"StonersTown Contract/STW.sol\":36744:36746  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":36744:36755  to == owner */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":36740:36788  if (to == owner) revert ApprovalToCurrentOwner() */\n      iszero\n      tag_98\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":36764:36788  ApprovalToCurrentOwner() */\n      mload(0x40)\n      shl(0xe2, 0x250fdee3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":36740:36788  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_98:\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":36803:36824  _msgSender() != owner */\n      dup3\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"StonersTown Contract/STW.sol\":36803:36866  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":36829:36866  isApprovedForAll(owner, _msgSender()) */\n      tag_102\n        /* \"StonersTown Contract/STW.sol\":36846:36851  owner */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":36829:36866  isApprovedForAll(owner, _msgSender()) */\n    tag_102:\n        /* \"StonersTown Contract/STW.sol\":36828:36866  !isApprovedForAll(owner, _msgSender()) */\n      iszero\n        /* \"StonersTown Contract/STW.sol\":36803:36866  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"StonersTown Contract/STW.sol\":36799:36935  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":36889:36924  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":36799:36935  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {... */\n    tag_104:\n        /* \"StonersTown Contract/STW.sol\":36945:36973  _approve(to, tokenId, owner) */\n      tag_105\n        /* \"StonersTown Contract/STW.sol\":36954:36956  to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":36958:36965  tokenId */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":36967:36972  owner */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":36945:36953  _approve */\n      tag_106\n        /* \"StonersTown Contract/STW.sol\":36945:36973  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_105:\n        /* \"StonersTown Contract/STW.sol\":36680:36980  {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":36618:36980  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":37872:38036  function transferFrom(... */\n    tag_47:\n        /* \"StonersTown Contract/STW.sol\":38001:38029  _transfer(from, to, tokenId) */\n      tag_105\n        /* \"StonersTown Contract/STW.sol\":38011:38015  from */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38017:38019  to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38021:38028  tokenId */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38001:38010  _transfer */\n      tag_112\n        /* \"StonersTown Contract/STW.sol\":38001:38029  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":38102:38281  function safeTransferFrom(... */\n    tag_50:\n        /* \"StonersTown Contract/STW.sol\":38235:38274  safeTransferFrom(from, to, tokenId, '') */\n      tag_105\n        /* \"StonersTown Contract/STW.sol\":38252:38256  from */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38258:38260  to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38262:38269  tokenId */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38235:38274  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"StonersTown Contract/STW.sol\":38235:38251  safeTransferFrom */\n      tag_70\n        /* \"StonersTown Contract/STW.sol\":38235:38274  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":35392:35514  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"StonersTown Contract/STW.sol\":35456:35463  address */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":35482:35502  ownershipOf(tokenId) */\n      tag_116\n        /* \"StonersTown Contract/STW.sol\":35494:35501  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":35482:35493  ownershipOf */\n      tag_117\n        /* \"StonersTown Contract/STW.sol\":35482:35502  ownershipOf(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"StonersTown Contract/STW.sol\":35482:35507  ownershipOf(tokenId).addr */\n      mload\n      swap3\n        /* \"StonersTown Contract/STW.sol\":35392:35514  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":32639:32842  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"StonersTown Contract/STW.sol\":32703:32710  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":32726:32745  owner == address(0) */\n      dup3\n      and\n        /* \"StonersTown Contract/STW.sol\":32722:32782  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_119\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":32754:32782  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":32722:32782  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_119:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":32807:32826  _addressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":32807:32819  _addressData */\n      0x05\n        /* \"StonersTown Contract/STW.sol\":32807:32826  _addressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":32807:32834  _addressData[owner].balance */\n      sload\n      0xffffffffffffffff\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":32639:32842  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35738:35840  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"StonersTown Contract/STW.sol\":35794:35807  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":35826:35833  _symbol */\n      0x03\n        /* \"StonersTown Contract/STW.sol\":35819:35833  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":37308:37582  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":37398:37422  operator == _msgSender() */\n      dup3\n      and\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37398:37422  operator == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":37394:37448  if (operator == _msgSender()) revert ApproveToCaller() */\n      iszero\n      tag_128\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":37431:37448  ApproveToCaller() */\n      mload(0x40)\n      shl(0xe0, 0xb06307db)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":37394:37448  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_128:\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37459:37491  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37459:37477  _operatorApprovals */\n      0x07\n        /* \"StonersTown Contract/STW.sol\":37459:37491  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":37459:37501  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":37459:37512  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"StonersTown Contract/STW.sol\":37527:37575  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":5169:5210   */\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37459:37501  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      swap2\n        /* \"StonersTown Contract/STW.sol\":37527:37575  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":5142:5160   */\n      add\n        /* \"StonersTown Contract/STW.sol\":37527:37575  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"StonersTown Contract/STW.sol\":37308:37582  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":38347:38706  function safeTransferFrom(... */\n    tag_70:\n        /* \"StonersTown Contract/STW.sol\":38508:38536  _transfer(from, to, tokenId) */\n      tag_133\n        /* \"StonersTown Contract/STW.sol\":38518:38522  from */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38524:38526  to */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38528:38535  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38508:38517  _transfer */\n      tag_112\n        /* \"StonersTown Contract/STW.sol\":38508:38536  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":38550:38563  to.isContract */\n      dup4\n      and\n        /* \"StonersTown Contract/STW.sol\":11696:11715  account.code.length */\n      extcodesize\n        /* \"StonersTown Contract/STW.sol\":11696:11719  account.code.length > 0 */\n      iszero\n      iszero\n        /* \"StonersTown Contract/STW.sol\":38550:38626  to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data) */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":38570:38626  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_137\n        /* \"StonersTown Contract/STW.sol\":38601:38605  from */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38607:38609  to */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38611:38618  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38620:38625  _data */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38570:38600  _checkContractOnERC721Received */\n      tag_138\n        /* \"StonersTown Contract/STW.sol\":38570:38626  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_137:\n        /* \"StonersTown Contract/STW.sol\":38569:38626  !_checkContractOnERC721Received(from, to, tokenId, _data) */\n      iszero\n        /* \"StonersTown Contract/STW.sol\":38550:38626  to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data) */\n    tag_136:\n        /* \"StonersTown Contract/STW.sol\":38546:38700  if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":38649:38689  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":38546:38700  if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_139:\n        /* \"StonersTown Contract/STW.sol\":38347:38706  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35906:36228  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"StonersTown Contract/STW.sol\":35979:35992  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":36009:36025  _exists(tokenId) */\n      tag_141\n        /* \"StonersTown Contract/STW.sol\":36017:36024  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":36009:36016  _exists */\n      tag_94\n        /* \"StonersTown Contract/STW.sol\":36009:36025  _exists(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"StonersTown Contract/STW.sol\":36004:36063  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_142\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":36034:36063  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":36004:36063  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_142:\n        /* \"StonersTown Contract/STW.sol\":36074:36095  string memory baseURI */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":36098:36108  _baseURI() */\n      tag_143\n        /* \"StonersTown Contract/STW.sol\":36545:36554  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"StonersTown Contract/STW.sol\":36469:36561  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"StonersTown Contract/STW.sol\":36098:36108  _baseURI() */\n    tag_143:\n        /* \"StonersTown Contract/STW.sol\":36074:36108  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":36131:36138  baseURI */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":36125:36146  bytes(baseURI).length */\n      mload\n        /* \"StonersTown Contract/STW.sol\":36150:36151  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":36125:36151  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"StonersTown Contract/STW.sol\":36125:36221  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : '' */\n      tag_145\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_146)\n    tag_145:\n        /* \"StonersTown Contract/STW.sol\":36178:36185  baseURI */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":36187:36205  tokenId.toString() */\n      tag_147\n        /* \"StonersTown Contract/STW.sol\":36187:36194  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":36187:36203  tokenId.toString */\n      tag_148\n        /* \"StonersTown Contract/STW.sol\":36187:36205  tokenId.toString() */\n      jump\t// in\n    tag_147:\n        /* \"StonersTown Contract/STW.sol\":36161:36215  abi.encodePacked(baseURI, tokenId.toString(), \".json\") */\n      add(0x20, mload(0x40))\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"StonersTown Contract/STW.sol\":36125:36221  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : '' */\n    tag_146:\n        /* \"StonersTown Contract/STW.sol\":36118:36221  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : '' */\n      swap4\n        /* \"StonersTown Contract/STW.sol\":35906:36228  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":38952:39136  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_94:\n        /* \"StonersTown Contract/STW.sol\":39009:39013  bool */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":39051:39058  tokenId */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":39032:39058  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":39032:39085  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":39072:39085  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":39062:39069  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":39062:39085  tokenId < _currentIndex */\n      lt\n        /* \"StonersTown Contract/STW.sol\":39032:39085  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_155:\n        /* \"StonersTown Contract/STW.sol\":39032:39129  _startTokenId() <= tokenId && tokenId < _currentIndex &&... */\n      dup1\n      iszero\n      tag_83\n      jumpi\n      pop\n      pop\n        /* \"StonersTown Contract/STW.sol\":39102:39122  _ownerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":39102:39113  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":39102:39122  _ownerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":39102:39129  _ownerships[tokenId].burned */\n      sload\n      shl(0xe0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"StonersTown Contract/STW.sol\":39101:39129  !_ownerships[tokenId].burned */\n      iszero\n      swap1\n        /* \"StonersTown Contract/STW.sol\":38952:39136  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":46368:46557  function _approve(... */\n    tag_106:\n        /* \"StonersTown Contract/STW.sol\":46478:46502  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":46478:46493  _tokenApprovals */\n      0x06\n        /* \"StonersTown Contract/STW.sol\":46478:46502  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":46478:46507  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"StonersTown Contract/STW.sol\":46522:46550  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"StonersTown Contract/STW.sol\":46478:46502  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"StonersTown Contract/STW.sol\":46522:46550  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"StonersTown Contract/STW.sol\":46368:46557  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":41974:44041  function _transfer(... */\n    tag_112:\n        /* \"StonersTown Contract/STW.sol\":42084:42119  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":42122:42142  ownershipOf(tokenId) */\n      tag_161\n        /* \"StonersTown Contract/STW.sol\":42134:42141  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":42122:42133  ownershipOf */\n      tag_117\n        /* \"StonersTown Contract/STW.sol\":42122:42142  ownershipOf(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"StonersTown Contract/STW.sol\":42195:42213  prevOwnership.addr */\n      dup1\n      mload\n        /* \"StonersTown Contract/STW.sol\":42084:42142  TokenOwnership memory prevOwnership = ownershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":42153:42175  bool isApprovedOrOwner */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42179:42213  _msgSender() == prevOwnership.addr */\n      and\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42179:42213  _msgSender() == prevOwnership.addr */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":42179:42279  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":42246:42264  prevOwnership.addr */\n      dup2\n      mload\n        /* \"StonersTown Contract/STW.sol\":42229:42279  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      tag_164\n      swap1\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":42229:42279  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n    tag_164:\n        /* \"StonersTown Contract/STW.sol\":42179:42331  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_166\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":42295:42315  getApproved(tokenId) */\n      tag_168\n        /* \"StonersTown Contract/STW.sol\":42307:42314  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":42295:42306  getApproved */\n      tag_33\n        /* \"StonersTown Contract/STW.sol\":42295:42315  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42295:42331  getApproved(tokenId) == _msgSender() */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":42179:42331  _msgSender() == prevOwnership.addr ||... */\n    tag_166:\n        /* \"StonersTown Contract/STW.sol\":42153:42332  bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||... */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":42348:42365  isApprovedOrOwner */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":42343:42409  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_169\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":42374:42409  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":42343:42409  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_169:\n        /* \"StonersTown Contract/STW.sol\":42445:42449  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42423:42449  prevOwnership.addr != from */\n      and\n        /* \"StonersTown Contract/STW.sol\":42423:42436  prevOwnership */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":42423:42441  prevOwnership.addr */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42423:42449  prevOwnership.addr != from */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":42419:42486  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_170\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":42458:42486  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":42419:42486  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42500:42516  to == address(0) */\n      dup5\n      and\n        /* \"StonersTown Contract/STW.sol\":42496:42548  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_171\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":42525:42548  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":42496:42548  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_171:\n        /* \"StonersTown Contract/STW.sol\":42664:42713  _approve(address(0), tokenId, prevOwnership.addr) */\n      tag_174\n        /* \"StonersTown Contract/STW.sol\":42681:42682  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":42685:42692  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":42694:42707  prevOwnership */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":42694:42712  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"StonersTown Contract/STW.sol\":42664:42672  _approve */\n      tag_106\n        /* \"StonersTown Contract/STW.sol\":42664:42713  _approve(address(0), tokenId, prevOwnership.addr) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43003:43021  _addressData[from] */\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":43003:43015  _addressData */\n      0x05\n        /* \"StonersTown Contract/STW.sol\":43003:43021  _addressData[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43003:43034  _addressData[from].balance -= 1 */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      dup1\n      dup3\n      and\n      0xffffffffffffffff\n      swap3\n      dup4\n      and\n      not(0x00)\n      add\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43048:43064  _addressData[to] */\n      dup10\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43048:43077  _addressData[to].balance += 1 */\n      dup1\n      sload\n      swap4\n      dup5\n      and\n      swap4\n      dup4\n      and\n      0x01\n      swap1\n      dup2\n      add\n      dup5\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43092:43112  _ownerships[tokenId] */\n      dup10\n      dup7\n      mstore\n        /* \"StonersTown Contract/STW.sol\":43092:43103  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":43092:43112  _ownerships[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43092:43122  _ownerships[tokenId].addr = to */\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":43136:43197  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      and\n      swap1\n      swap5\n      or\n      shl(0xa0, 0x01)\n        /* \"StonersTown Contract/STW.sol\":43181:43196  block.timestamp */\n      timestamp\n        /* \"StonersTown Contract/STW.sol\":43136:43197  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      swap3\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43467:43478  tokenId + 1 */\n      swap1\n      dup7\n      add\n        /* \"StonersTown Contract/STW.sol\":43496:43520  _ownerships[nextTokenId] */\n      dup1\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43496:43525  _ownerships[nextTokenId].addr */\n      sload\n        /* \"StonersTown Contract/STW.sol\":43467:43478  tokenId + 1 */\n      swap1\n      swap2\n        /* \"StonersTown Contract/STW.sol\":43496:43525  _ownerships[nextTokenId].addr */\n      and\n        /* \"StonersTown Contract/STW.sol\":43492:43930  if (_ownerships[nextTokenId].addr == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":43718:43731  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":43704:43715  nextTokenId */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":43704:43731  nextTokenId < _currentIndex */\n      lt\n        /* \"StonersTown Contract/STW.sol\":43700:43916  if (nextTokenId < _currentIndex) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":43787:43805  prevOwnership.addr */\n      dup3\n      mload\n      0x00\n        /* \"StonersTown Contract/STW.sol\":43755:43779  _ownerships[nextTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":43755:43766  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":43755:43779  _ownerships[nextTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43755:43805  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      dup1\n      sload\n        /* \"StonersTown Contract/STW.sol\":43869:43897  prevOwnership.startTimestamp */\n      swap2\n      dup7\n      add\n      mload\n        /* \"StonersTown Contract/STW.sol\":43827:43897  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      0xffffffffffffffff\n      and\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43755:43805  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      swap1\n      swap4\n      and\n        /* \"StonersTown Contract/STW.sol\":43827:43897  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      swap3\n      swap1\n      swap3\n      or\n      or\n      swap1\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43700:43916  if (nextTokenId < _currentIndex) {... */\n    tag_176:\n        /* \"StonersTown Contract/STW.sol\":42979:43940  unchecked {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":43974:43981  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":43970:43972  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43955:43982  Transfer(from, to, tokenId) */\n      and\n        /* \"StonersTown Contract/STW.sol\":43964:43968  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43955:43982  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"StonersTown Contract/STW.sol\":42074:44041  {... */\n      pop\n      pop\n        /* \"StonersTown Contract/STW.sol\":41974:44041  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":34252:35335  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_117:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":34361:34368  tokenId */\n      dup2\n      dup1\n        /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":34407:34430  _startTokenId() <= curr */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":34407:34454  _startTokenId() <= curr && curr < _currentIndex */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":34441:34454  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":34434:34438  curr */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":34434:34454  curr < _currentIndex */\n      lt\n        /* \"StonersTown Contract/STW.sol\":34407:34454  _startTokenId() <= curr && curr < _currentIndex */\n    tag_183:\n        /* \"StonersTown Contract/STW.sol\":34403:35271  if (_startTokenId() <= curr && curr < _currentIndex) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":34474:34505  TokenOwnership memory ownership */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":34508:34525  _ownerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":34508:34519  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":34508:34525  _ownerships[curr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":34474:34525  TokenOwnership memory ownership = _ownerships[curr] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xa0, 0x01)\n      dup2\n      div\n      0xffffffffffffffff\n      and\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      shl(0xe0, 0x01)\n      swap1\n      swap2\n      div\n      0xff\n      and\n      iszero\n      iszero\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"StonersTown Contract/STW.sol\":34543:35257  if (!ownership.burned) {... */\n      tag_188\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":34592:34606  ownership.addr */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":34592:34620  ownership.addr != address(0) */\n      and\n      iszero\n        /* \"StonersTown Contract/STW.sol\":34588:34687  if (ownership.addr != address(0)) {... */\n      tag_186\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":34655:34664  ownership */\n      swap4\n        /* \"StonersTown Contract/STW.sol\":34252:35335  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":34588:34687  if (ownership.addr != address(0)) {... */\n    tag_186:\n      pop\n      not(0x00)\n        /* \"StonersTown Contract/STW.sol\":35023:35029  curr-- */\n      add\n        /* \"StonersTown Contract/STW.sol\":35067:35084  _ownerships[curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":35067:35078  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":35067:35084  _ownerships[curr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":35055:35084  ownership = _ownerships[curr] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      shl(0xa0, 0x01)\n      dup3\n      div\n      0xffffffffffffffff\n      and\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      shl(0xe0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"StonersTown Contract/STW.sol\":35114:35142  ownership.addr != address(0) */\n      iszero\n        /* \"StonersTown Contract/STW.sol\":35110:35217  if (ownership.addr != address(0)) {... */\n      tag_189\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":35181:35190  ownership */\n      swap4\n        /* \"StonersTown Contract/STW.sol\":34252:35335  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35110:35217  if (ownership.addr != address(0)) {... */\n    tag_189:\n        /* \"StonersTown Contract/STW.sol\":34984:35239  while (true) {... */\n      jump(tag_186)\n    tag_188:\n        /* \"StonersTown Contract/STW.sol\":34456:35271  {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":34403:35271  if (_startTokenId() <= curr && curr < _currentIndex) {... */\n    tag_184:\n        /* \"StonersTown Contract/STW.sol\":35297:35328  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":47038:47688  function _checkContractOnERC721Received(... */\n    tag_138:\n        /* \"StonersTown Contract/STW.sol\":47216:47288  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":47196:47200  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":47216:47252  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47216:47288  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_193\n      swap1\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47267:47271  from */\n      dup10\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47273:47280  tokenId */\n      dup9\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47282:47287  _data */\n      dup9\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47216:47288  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_197\n      swap2\n      dup2\n      add\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x01\n    tag_196:\n        /* \"StonersTown Contract/STW.sol\":47212:47682  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_199\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_204\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_203)\n    tag_204:\n      0x60\n      swap2\n      pop\n    tag_203:\n      pop\n        /* \"StonersTown Contract/STW.sol\":47447:47460  reason.length */\n      dup1\n      mload\n        /* \"StonersTown Contract/STW.sol\":47443:47672  if (reason.length == 0) {... */\n      tag_205\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":47492:47532  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":47443:47672  if (reason.length == 0) {... */\n    tag_205:\n        /* \"StonersTown Contract/STW.sol\":47632:47638  reason */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":47626:47639  mload(reason) */\n      mload\n        /* \"StonersTown Contract/STW.sol\":47617:47623  reason */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":47613:47615  32 */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":47609:47624  add(32, reason) */\n      add\n        /* \"StonersTown Contract/STW.sol\":47602:47640  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"StonersTown Contract/STW.sol\":47212:47682  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_199:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":47334:47389  retval == IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":47212:47682  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_207:\n        /* \"StonersTown Contract/STW.sol\":47038:47688  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":5187:5890  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_148:\n        /* \"StonersTown Contract/STW.sol\":5243:5256  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":5460:5470  value == 0 */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5456:5507  if (value == 0) {... */\n      tag_210\n      jumpi\n      pop\n      pop\n        /* \"StonersTown Contract/STW.sol\":5486:5496  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"StonersTown Contract/STW.sol\":5187:5890  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":5456:5507  if (value == 0) {... */\n    tag_210:\n        /* \"StonersTown Contract/STW.sol\":5531:5536  value */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5516:5528  uint256 temp */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":5570:5645  while (temp != 0) {... */\n    tag_211:\n        /* \"StonersTown Contract/STW.sol\":5577:5586  temp != 0 */\n      dup2\n      iszero\n        /* \"StonersTown Contract/STW.sol\":5570:5645  while (temp != 0) {... */\n      tag_212\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":5602:5610  digits++ */\n      dup1\n      tag_213\n      dup2\n      tag_214\n      jump\t// in\n    tag_213:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":5624:5634  temp /= 10 */\n      tag_215\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":5632:5634  10 */\n      0x0a\n        /* \"StonersTown Contract/STW.sol\":5624:5634  temp /= 10 */\n      dup4\n      tag_216\n      jump\t// in\n    tag_215:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":5570:5645  while (temp != 0) {... */\n      jump(tag_211)\n    tag_212:\n        /* \"StonersTown Contract/STW.sol\":5654:5673  bytes memory buffer */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":5686:5692  digits */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5676:5693  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_218\n      jumpi\n      tag_218\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_220:\n      pop\n        /* \"StonersTown Contract/STW.sol\":5654:5693  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":5703:5853  while (value != 0) {... */\n    tag_221:\n        /* \"StonersTown Contract/STW.sol\":5710:5720  value != 0 */\n      dup5\n      iszero\n        /* \"StonersTown Contract/STW.sol\":5703:5853  while (value != 0) {... */\n      tag_207\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":5736:5747  digits -= 1 */\n      tag_223\n        /* \"StonersTown Contract/STW.sol\":5746:5747  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":5736:5747  digits -= 1 */\n      dup4\n      tag_224\n      jump\t// in\n    tag_223:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":5804:5814  value % 10 */\n      tag_225\n        /* \"StonersTown Contract/STW.sol\":5812:5814  10 */\n      0x0a\n        /* \"StonersTown Contract/STW.sol\":5804:5809  value */\n      dup7\n        /* \"StonersTown Contract/STW.sol\":5804:5814  value % 10 */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"StonersTown Contract/STW.sol\":5791:5815  48 + uint256(value % 10) */\n      tag_227\n      swap1\n        /* \"StonersTown Contract/STW.sol\":5791:5793  48 */\n      0x30\n        /* \"StonersTown Contract/STW.sol\":5791:5815  48 + uint256(value % 10) */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"StonersTown Contract/STW.sol\":5778:5817  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"StonersTown Contract/STW.sol\":5761:5767  buffer */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5768:5774  digits */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":5761:5775  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n      0x20\n      add\n      add\n        /* \"StonersTown Contract/STW.sol\":5761:5817  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"StonersTown Contract/STW.sol\":5831:5842  value /= 10 */\n      tag_232\n        /* \"StonersTown Contract/STW.sol\":5840:5842  10 */\n      0x0a\n        /* \"StonersTown Contract/STW.sol\":5831:5842  value /= 10 */\n      dup7\n      tag_216\n      jump\t// in\n    tag_232:\n      swap5\n      pop\n        /* \"StonersTown Contract/STW.sol\":5703:5853  while (value != 0) {... */\n      jump(tag_221)\n        /* \"#utility.yul\":14:187   */\n    tag_236:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_238:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_57:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_240:\n        /* \"#utility.yul\":343:372   */\n      tag_146\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_236\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_77:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_243:\n        /* \"#utility.yul\":551:580   */\n      tag_244\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_236\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_245\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_236\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_46:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_247:\n        /* \"#utility.yul\":833:862   */\n      tag_248\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_236\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_249\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_236\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:2119   */\n    tag_69:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1084:1090   */\n      dup1\n        /* \"#utility.yul\":1092:1098   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup1\n        /* \"#utility.yul\":1153:1156   */\n      0x80\n        /* \"#utility.yul\":1141:1150   */\n      dup6\n        /* \"#utility.yul\":1132:1139   */\n      dup8\n        /* \"#utility.yul\":1128:1151   */\n      sub\n        /* \"#utility.yul\":1124:1157   */\n      slt\n        /* \"#utility.yul\":1121:1174   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":1170:1171   */\n      0x00\n        /* \"#utility.yul\":1167:1168   */\n      dup1\n        /* \"#utility.yul\":1160:1172   */\n      revert\n        /* \"#utility.yul\":1121:1174   */\n    tag_251:\n        /* \"#utility.yul\":1193:1222   */\n      tag_252\n        /* \"#utility.yul\":1212:1221   */\n      dup6\n        /* \"#utility.yul\":1193:1222   */\n      tag_236\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1183:1222   */\n      swap4\n      pop\n        /* \"#utility.yul\":1241:1279   */\n      tag_253\n        /* \"#utility.yul\":1275:1277   */\n      0x20\n        /* \"#utility.yul\":1264:1273   */\n      dup7\n        /* \"#utility.yul\":1260:1278   */\n      add\n        /* \"#utility.yul\":1241:1279   */\n      tag_236\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1231:1279   */\n      swap3\n      pop\n        /* \"#utility.yul\":1326:1328   */\n      0x40\n        /* \"#utility.yul\":1315:1324   */\n      dup6\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"#utility.yul\":1298:1330   */\n      calldataload\n        /* \"#utility.yul\":1288:1330   */\n      swap2\n      pop\n        /* \"#utility.yul\":1381:1383   */\n      0x60\n        /* \"#utility.yul\":1370:1379   */\n      dup6\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"#utility.yul\":1353:1385   */\n      calldataload\n        /* \"#utility.yul\":1404:1422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1445:1447   */\n      dup1\n        /* \"#utility.yul\":1437:1443   */\n      dup3\n        /* \"#utility.yul\":1434:1448   */\n      gt\n        /* \"#utility.yul\":1431:1465   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1431:1465   */\n    tag_254:\n        /* \"#utility.yul\":1499:1505   */\n      dup2\n        /* \"#utility.yul\":1488:1497   */\n      dup8\n        /* \"#utility.yul\":1484:1506   */\n      add\n        /* \"#utility.yul\":1474:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1544:1551   */\n      dup8\n        /* \"#utility.yul\":1537:1541   */\n      0x1f\n        /* \"#utility.yul\":1533:1535   */\n      dup4\n        /* \"#utility.yul\":1529:1542   */\n      add\n        /* \"#utility.yul\":1525:1552   */\n      slt\n        /* \"#utility.yul\":1515:1570   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":1566:1567   */\n      0x00\n        /* \"#utility.yul\":1563:1564   */\n      dup1\n        /* \"#utility.yul\":1556:1568   */\n      revert\n        /* \"#utility.yul\":1515:1570   */\n    tag_255:\n        /* \"#utility.yul\":1602:1604   */\n      dup2\n        /* \"#utility.yul\":1589:1605   */\n      calldataload\n        /* \"#utility.yul\":1624:1626   */\n      dup2\n        /* \"#utility.yul\":1620:1622   */\n      dup2\n        /* \"#utility.yul\":1617:1627   */\n      gt\n        /* \"#utility.yul\":1614:1650   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":1630:1648   */\n      tag_257\n      tag_219\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1705:1707   */\n      0x40\n        /* \"#utility.yul\":1699:1708   */\n      mload\n        /* \"#utility.yul\":1673:1675   */\n      0x1f\n        /* \"#utility.yul\":1759:1772   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1755:1777   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1779:1781   */\n      0x3f\n        /* \"#utility.yul\":1751:1782   */\n      add\n        /* \"#utility.yul\":1747:1787   */\n      and\n        /* \"#utility.yul\":1735:1788   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1803:1821   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1823:1845   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1800:1846   */\n      or\n        /* \"#utility.yul\":1797:1869   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":1849:1867   */\n      tag_259\n      tag_219\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1889:1899   */\n      dup2\n        /* \"#utility.yul\":1885:1887   */\n      0x40\n        /* \"#utility.yul\":1878:1900   */\n      mstore\n        /* \"#utility.yul\":1924:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1922   */\n      dup2\n        /* \"#utility.yul\":1909:1927   */\n      mstore\n        /* \"#utility.yul\":1964:1971   */\n      dup11\n        /* \"#utility.yul\":1959:1961   */\n      0x20\n        /* \"#utility.yul\":1954:1956   */\n      dup5\n        /* \"#utility.yul\":1950:1952   */\n      dup8\n        /* \"#utility.yul\":1946:1957   */\n      add\n        /* \"#utility.yul\":1942:1962   */\n      add\n        /* \"#utility.yul\":1939:1972   */\n      gt\n        /* \"#utility.yul\":1936:1989   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1982:1983   */\n      dup1\n        /* \"#utility.yul\":1975:1987   */\n      revert\n        /* \"#utility.yul\":1936:1989   */\n    tag_260:\n        /* \"#utility.yul\":2041:2043   */\n      dup3\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"#utility.yul\":2032:2034   */\n      dup7\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2015:2021   */\n      dup4\n        /* \"#utility.yul\":2011:2026   */\n      add\n        /* \"#utility.yul\":1998:2044   */\n      calldatacopy\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2076:2078   */\n      dup5\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2064:2079   */\n      add\n        /* \"#utility.yul\":2060:2084   */\n      add\n        /* \"#utility.yul\":2053:2088   */\n      mstore\n        /* \"#utility.yul\":2107:2113   */\n      dup1\n        /* \"#utility.yul\":2097:2113   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:2119   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2124:2471   */\n    tag_65:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_262:\n        /* \"#utility.yul\":2289:2318   */\n      tag_263\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_236\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2279:2318   */\n      swap2\n      pop\n        /* \"#utility.yul\":2368:2370   */\n      0x20\n        /* \"#utility.yul\":2357:2366   */\n      dup4\n        /* \"#utility.yul\":2353:2371   */\n      add\n        /* \"#utility.yul\":2340:2372   */\n      calldataload\n        /* \"#utility.yul\":2415:2420   */\n      dup1\n        /* \"#utility.yul\":2408:2421   */\n      iszero\n        /* \"#utility.yul\":2401:2422   */\n      iszero\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2391:2423   */\n      eq\n        /* \"#utility.yul\":2381:2441   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2434:2435   */\n      dup1\n        /* \"#utility.yul\":2427:2439   */\n      revert\n        /* \"#utility.yul\":2381:2441   */\n    tag_264:\n        /* \"#utility.yul\":2460:2465   */\n      dup1\n        /* \"#utility.yul\":2450:2465   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2124:2471   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2730   */\n    tag_38:\n        /* \"#utility.yul\":2544:2550   */\n      0x00\n        /* \"#utility.yul\":2552:2558   */\n      dup1\n        /* \"#utility.yul\":2605:2607   */\n      0x40\n        /* \"#utility.yul\":2593:2602   */\n      dup4\n        /* \"#utility.yul\":2584:2591   */\n      dup6\n        /* \"#utility.yul\":2580:2603   */\n      sub\n        /* \"#utility.yul\":2576:2608   */\n      slt\n        /* \"#utility.yul\":2573:2625   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":2621:2622   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      dup1\n        /* \"#utility.yul\":2611:2623   */\n      revert\n        /* \"#utility.yul\":2573:2625   */\n    tag_266:\n        /* \"#utility.yul\":2644:2673   */\n      tag_267\n        /* \"#utility.yul\":2663:2672   */\n      dup4\n        /* \"#utility.yul\":2644:2673   */\n      tag_236\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2634:2673   */\n      swap5\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2692:2724   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2476:2730   */\n      jump\t// out\n        /* \"#utility.yul\":2735:2980   */\n    tag_22:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2866   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2859:2860   */\n      dup1\n        /* \"#utility.yul\":2852:2864   */\n      revert\n        /* \"#utility.yul\":2814:2866   */\n    tag_269:\n        /* \"#utility.yul\":2901:2910   */\n      dup2\n        /* \"#utility.yul\":2888:2911   */\n      calldataload\n        /* \"#utility.yul\":2920:2950   */\n      tag_146\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2920:2950   */\n      tag_271\n      jump\t// in\n        /* \"#utility.yul\":2985:3234   */\n    tag_198:\n        /* \"#utility.yul\":3054:3060   */\n      0x00\n        /* \"#utility.yul\":3107:3109   */\n      0x20\n        /* \"#utility.yul\":3095:3104   */\n      dup3\n        /* \"#utility.yul\":3086:3093   */\n      dup5\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3110   */\n      slt\n        /* \"#utility.yul\":3075:3127   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":3123:3124   */\n      0x00\n        /* \"#utility.yul\":3120:3121   */\n      dup1\n        /* \"#utility.yul\":3113:3125   */\n      revert\n        /* \"#utility.yul\":3075:3127   */\n    tag_273:\n        /* \"#utility.yul\":3155:3164   */\n      dup2\n        /* \"#utility.yul\":3149:3165   */\n      mload\n        /* \"#utility.yul\":3174:3204   */\n      tag_146\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3174:3204   */\n      tag_271\n      jump\t// in\n        /* \"#utility.yul\":3239:3419   */\n    tag_32:\n        /* \"#utility.yul\":3298:3304   */\n      0x00\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3339:3348   */\n      dup3\n        /* \"#utility.yul\":3330:3337   */\n      dup5\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3371   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3364:3365   */\n      dup1\n        /* \"#utility.yul\":3357:3369   */\n      revert\n        /* \"#utility.yul\":3319:3371   */\n    tag_276:\n      pop\n        /* \"#utility.yul\":3390:3413   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3239:3419   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3424:3681   */\n    tag_277:\n        /* \"#utility.yul\":3465:3468   */\n      0x00\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3497:3509   */\n      mload\n        /* \"#utility.yul\":3530:3536   */\n      dup1\n        /* \"#utility.yul\":3525:3528   */\n      dup5\n        /* \"#utility.yul\":3518:3537   */\n      mstore\n        /* \"#utility.yul\":3546:3609   */\n      tag_279\n        /* \"#utility.yul\":3602:3608   */\n      dup2\n        /* \"#utility.yul\":3595:3599   */\n      0x20\n        /* \"#utility.yul\":3590:3593   */\n      dup7\n        /* \"#utility.yul\":3586:3600   */\n      add\n        /* \"#utility.yul\":3579:3583   */\n      0x20\n        /* \"#utility.yul\":3572:3577   */\n      dup7\n        /* \"#utility.yul\":3568:3584   */\n      add\n        /* \"#utility.yul\":3546:3609   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3663:3665   */\n      0x1f\n        /* \"#utility.yul\":3642:3657   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3638:3667   */\n      and\n        /* \"#utility.yul\":3629:3668   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3670:3674   */\n      0x20\n        /* \"#utility.yul\":3625:3675   */\n      add\n      swap3\n        /* \"#utility.yul\":3424:3681   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:4323   */\n    tag_150:\n        /* \"#utility.yul\":3966:3969   */\n      0x00\n        /* \"#utility.yul\":4004:4010   */\n      dup4\n        /* \"#utility.yul\":3998:4011   */\n      mload\n        /* \"#utility.yul\":4020:4073   */\n      tag_282\n        /* \"#utility.yul\":4066:4072   */\n      dup2\n        /* \"#utility.yul\":4061:4064   */\n      dup5\n        /* \"#utility.yul\":4054:4058   */\n      0x20\n        /* \"#utility.yul\":4046:4052   */\n      dup9\n        /* \"#utility.yul\":4042:4059   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_280\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4136:4149   */\n      dup4\n      mload\n        /* \"#utility.yul\":4095:4111   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4158:4215   */\n      tag_283\n        /* \"#utility.yul\":4136:4149   */\n      dup2\n        /* \"#utility.yul\":4095:4111   */\n      dup4\n        /* \"#utility.yul\":4192:4196   */\n      0x20\n        /* \"#utility.yul\":4180:4197   */\n      dup9\n      add\n        /* \"#utility.yul\":4158:4215   */\n      tag_280\n      jump\t// in\n    tag_283:\n      shl(0xd9, 0x173539b7b7)\n        /* \"#utility.yul\":4237:4257   */\n      swap2\n      add\n        /* \"#utility.yul\":4266:4288   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4315:4316   */\n      0x05\n        /* \"#utility.yul\":4304:4317   */\n      add\n      swap5\n        /* \"#utility.yul\":3686:4323   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4536:5024   */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4805:4820   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":4787:4821   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4857:4872   */\n      dup5\n      and\n        /* \"#utility.yul\":4852:4854   */\n      0x20\n        /* \"#utility.yul\":4837:4855   */\n      dup3\n      add\n        /* \"#utility.yul\":4830:4873   */\n      mstore\n        /* \"#utility.yul\":4904:4906   */\n      0x40\n        /* \"#utility.yul\":4889:4907   */\n      dup2\n      add\n        /* \"#utility.yul\":4882:4916   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4952:4955   */\n      0x80\n        /* \"#utility.yul\":4947:4949   */\n      0x60\n        /* \"#utility.yul\":4932:4950   */\n      dup3\n      add\n        /* \"#utility.yul\":4925:4956   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4730:4734   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4973:5018   */\n      tag_286\n      swap1\n        /* \"#utility.yul\":4998:5017   */\n      dup4\n      add\n        /* \"#utility.yul\":4990:4996   */\n      dup5\n        /* \"#utility.yul\":4973:5018   */\n      tag_277\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4965:5018   */\n      swap7\n        /* \"#utility.yul\":4536:5024   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5221:5440   */\n    tag_29:\n        /* \"#utility.yul\":5370:5372   */\n      0x20\n        /* \"#utility.yul\":5359:5368   */\n      dup2\n        /* \"#utility.yul\":5352:5373   */\n      mstore\n        /* \"#utility.yul\":5333:5337   */\n      0x00\n        /* \"#utility.yul\":5390:5434   */\n      tag_146\n        /* \"#utility.yul\":5430:5432   */\n      0x20\n        /* \"#utility.yul\":5419:5428   */\n      dup4\n        /* \"#utility.yul\":5415:5433   */\n      add\n        /* \"#utility.yul\":5407:5413   */\n      dup5\n        /* \"#utility.yul\":5390:5434   */\n      tag_277\n      jump\t// in\n        /* \"#utility.yul\":5627:5755   */\n    tag_228:\n        /* \"#utility.yul\":5667:5670   */\n      0x00\n        /* \"#utility.yul\":5698:5699   */\n      dup3\n        /* \"#utility.yul\":5694:5700   */\n      not\n        /* \"#utility.yul\":5691:5692   */\n      dup3\n        /* \"#utility.yul\":5688:5701   */\n      gt\n        /* \"#utility.yul\":5685:5724   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5704:5722   */\n      tag_293\n      tag_294\n      jump\t// in\n    tag_293:\n      pop\n        /* \"#utility.yul\":5740:5749   */\n      add\n      swap1\n        /* \"#utility.yul\":5627:5755   */\n      jump\t// out\n        /* \"#utility.yul\":5760:5880   */\n    tag_216:\n        /* \"#utility.yul\":5800:5801   */\n      0x00\n        /* \"#utility.yul\":5826:5827   */\n      dup3\n        /* \"#utility.yul\":5816:5851   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":5831:5849   */\n      tag_297\n      tag_298\n      jump\t// in\n    tag_297:\n      pop\n        /* \"#utility.yul\":5865:5874   */\n      div\n      swap1\n        /* \"#utility.yul\":5760:5880   */\n      jump\t// out\n        /* \"#utility.yul\":5885:6010   */\n    tag_224:\n        /* \"#utility.yul\":5925:5929   */\n      0x00\n        /* \"#utility.yul\":5953:5954   */\n      dup3\n        /* \"#utility.yul\":5950:5951   */\n      dup3\n        /* \"#utility.yul\":5947:5955   */\n      lt\n        /* \"#utility.yul\":5944:5978   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":5958:5976   */\n      tag_301\n      tag_294\n      jump\t// in\n    tag_301:\n      pop\n        /* \"#utility.yul\":5995:6004   */\n      sub\n      swap1\n        /* \"#utility.yul\":5885:6010   */\n      jump\t// out\n        /* \"#utility.yul\":6015:6273   */\n    tag_280:\n        /* \"#utility.yul\":6087:6088   */\n      0x00\n        /* \"#utility.yul\":6097:6210   */\n    tag_303:\n        /* \"#utility.yul\":6111:6117   */\n      dup4\n        /* \"#utility.yul\":6108:6109   */\n      dup2\n        /* \"#utility.yul\":6105:6118   */\n      lt\n        /* \"#utility.yul\":6097:6210   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":6187:6198   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6181:6199   */\n      mload\n        /* \"#utility.yul\":6168:6179   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":6161:6200   */\n      mstore\n        /* \"#utility.yul\":6133:6135   */\n      0x20\n        /* \"#utility.yul\":6126:6136   */\n      add\n        /* \"#utility.yul\":6097:6210   */\n      jump(tag_303)\n    tag_305:\n        /* \"#utility.yul\":6228:6234   */\n      dup4\n        /* \"#utility.yul\":6225:6226   */\n      dup2\n        /* \"#utility.yul\":6222:6235   */\n      gt\n        /* \"#utility.yul\":6219:6267   */\n      iszero\n      tag_139\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":6263:6264   */\n      0x00\n        /* \"#utility.yul\":6245:6261   */\n      swap2\n      add\n        /* \"#utility.yul\":6238:6265   */\n      mstore\n        /* \"#utility.yul\":6015:6273   */\n      jump\t// out\n        /* \"#utility.yul\":6278:6658   */\n    tag_87:\n        /* \"#utility.yul\":6357:6358   */\n      0x01\n        /* \"#utility.yul\":6353:6365   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6400:6412   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6421:6482   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6475:6479   */\n      0x7f\n        /* \"#utility.yul\":6467:6473   */\n      dup3\n        /* \"#utility.yul\":6463:6480   */\n      and\n        /* \"#utility.yul\":6453:6480   */\n      swap2\n      pop\n        /* \"#utility.yul\":6421:6482   */\n    tag_308:\n        /* \"#utility.yul\":6528:6530   */\n      0x20\n        /* \"#utility.yul\":6520:6526   */\n      dup3\n        /* \"#utility.yul\":6517:6531   */\n      lt\n        /* \"#utility.yul\":6497:6515   */\n      dup2\n        /* \"#utility.yul\":6494:6532   */\n      eq\n        /* \"#utility.yul\":6491:6652   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":6574:6584   */\n      0x4e487b71\n        /* \"#utility.yul\":6569:6572   */\n      0xe0\n        /* \"#utility.yul\":6565:6585   */\n      shl\n        /* \"#utility.yul\":6562:6563   */\n      0x00\n        /* \"#utility.yul\":6555:6586   */\n      mstore\n        /* \"#utility.yul\":6609:6613   */\n      0x22\n        /* \"#utility.yul\":6606:6607   */\n      0x04\n        /* \"#utility.yul\":6599:6614   */\n      mstore\n        /* \"#utility.yul\":6637:6641   */\n      0x24\n        /* \"#utility.yul\":6634:6635   */\n      0x00\n        /* \"#utility.yul\":6627:6642   */\n      revert\n        /* \"#utility.yul\":6491:6652   */\n    tag_309:\n      pop\n        /* \"#utility.yul\":6278:6658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6663:6798   */\n    tag_214:\n        /* \"#utility.yul\":6702:6705   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":6723:6740   */\n      dup3\n      eq\n        /* \"#utility.yul\":6720:6763   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6743:6761   */\n      tag_312\n      tag_294\n      jump\t// in\n    tag_312:\n      pop\n        /* \"#utility.yul\":6790:6791   */\n      0x01\n        /* \"#utility.yul\":6779:6792   */\n      add\n      swap1\n        /* \"#utility.yul\":6663:6798   */\n      jump\t// out\n        /* \"#utility.yul\":6803:6915   */\n    tag_226:\n        /* \"#utility.yul\":6835:6836   */\n      0x00\n        /* \"#utility.yul\":6861:6862   */\n      dup3\n        /* \"#utility.yul\":6851:6886   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":6866:6884   */\n      tag_315\n      tag_298\n      jump\t// in\n    tag_315:\n      pop\n        /* \"#utility.yul\":6900:6909   */\n      mod\n      swap1\n        /* \"#utility.yul\":6803:6915   */\n      jump\t// out\n        /* \"#utility.yul\":6920:7047   */\n    tag_294:\n        /* \"#utility.yul\":6981:6991   */\n      0x4e487b71\n        /* \"#utility.yul\":6976:6979   */\n      0xe0\n        /* \"#utility.yul\":6972:6992   */\n      shl\n        /* \"#utility.yul\":6969:6970   */\n      0x00\n        /* \"#utility.yul\":6962:6993   */\n      mstore\n        /* \"#utility.yul\":7012:7016   */\n      0x11\n        /* \"#utility.yul\":7009:7010   */\n      0x04\n        /* \"#utility.yul\":7002:7017   */\n      mstore\n        /* \"#utility.yul\":7036:7040   */\n      0x24\n        /* \"#utility.yul\":7033:7034   */\n      0x00\n        /* \"#utility.yul\":7026:7041   */\n      revert\n        /* \"#utility.yul\":7052:7179   */\n    tag_298:\n        /* \"#utility.yul\":7113:7123   */\n      0x4e487b71\n        /* \"#utility.yul\":7108:7111   */\n      0xe0\n        /* \"#utility.yul\":7104:7124   */\n      shl\n        /* \"#utility.yul\":7101:7102   */\n      0x00\n        /* \"#utility.yul\":7094:7125   */\n      mstore\n        /* \"#utility.yul\":7144:7148   */\n      0x12\n        /* \"#utility.yul\":7141:7142   */\n      0x04\n        /* \"#utility.yul\":7134:7149   */\n      mstore\n        /* \"#utility.yul\":7168:7172   */\n      0x24\n        /* \"#utility.yul\":7165:7166   */\n      0x00\n        /* \"#utility.yul\":7158:7173   */\n      revert\n        /* \"#utility.yul\":7184:7311   */\n    tag_231:\n        /* \"#utility.yul\":7245:7255   */\n      0x4e487b71\n        /* \"#utility.yul\":7240:7243   */\n      0xe0\n        /* \"#utility.yul\":7236:7256   */\n      shl\n        /* \"#utility.yul\":7233:7234   */\n      0x00\n        /* \"#utility.yul\":7226:7257   */\n      mstore\n        /* \"#utility.yul\":7276:7280   */\n      0x32\n        /* \"#utility.yul\":7273:7274   */\n      0x04\n        /* \"#utility.yul\":7266:7281   */\n      mstore\n        /* \"#utility.yul\":7300:7304   */\n      0x24\n        /* \"#utility.yul\":7297:7298   */\n      0x00\n        /* \"#utility.yul\":7290:7305   */\n      revert\n        /* \"#utility.yul\":7316:7443   */\n    tag_219:\n        /* \"#utility.yul\":7377:7387   */\n      0x4e487b71\n        /* \"#utility.yul\":7372:7375   */\n      0xe0\n        /* \"#utility.yul\":7368:7388   */\n      shl\n        /* \"#utility.yul\":7365:7366   */\n      0x00\n        /* \"#utility.yul\":7358:7389   */\n      mstore\n        /* \"#utility.yul\":7408:7412   */\n      0x41\n        /* \"#utility.yul\":7405:7406   */\n      0x04\n        /* \"#utility.yul\":7398:7413   */\n      mstore\n        /* \"#utility.yul\":7432:7436   */\n      0x24\n        /* \"#utility.yul\":7429:7430   */\n      0x00\n        /* \"#utility.yul\":7422:7437   */\n      revert\n        /* \"#utility.yul\":7448:7579   */\n    tag_271:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":7522:7554   */\n      dup2\n      and\n        /* \"#utility.yul\":7512:7555   */\n      dup2\n      eq\n        /* \"#utility.yul\":7502:7573   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":7569:7570   */\n      0x00\n        /* \"#utility.yul\":7566:7567   */\n      dup1\n        /* \"#utility.yul\":7559:7571   */\n      revert\n        /* \"#utility.yul\":7502:7573   */\n    tag_321:\n        /* \"#utility.yul\":7448:7579   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220972d10adbed34a707878f9563de03fc21667463430b4429c6e4336d4fe5e475864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_1003": {
									"entryPoint": null,
									"id": 1003,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620012ea380380620012ea8339810160408190526200003491620001ca565b8151620000499060029060208501906200006d565b5080516200005f9060039060208401906200006d565b505060016000555062000287565b8280546200007b9062000234565b90600052602060002090601f0160209004810192826200009f5760008555620000ea565b82601f10620000ba57805160ff1916838001178555620000ea565b82800160010185558215620000ea579182015b82811115620000ea578251825591602001919060010190620000cd565b50620000f8929150620000fc565b5090565b5b80821115620000f85760008155600101620000fd565b600082601f8301126200012557600080fd5b81516001600160401b038082111562000142576200014262000271565b604051601f8301601f19908116603f011681019082821181831017156200016d576200016d62000271565b816040528381526020925086838588010111156200018a57600080fd5b600091505b83821015620001ae57858201830151818301840152908201906200018f565b83821115620001c05760008385830101525b9695505050505050565b60008060408385031215620001de57600080fd5b82516001600160401b0380821115620001f657600080fd5b620002048683870162000113565b935060208501519150808211156200021b57600080fd5b506200022a8582860162000113565b9150509250929050565b600181811c908216806200024957607f821691505b602082108114156200026b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61105380620002976000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101da578063b88d4fde146101ed578063c87b56dd14610200578063e985e9c51461021357600080fd5b80636352211e146101ac57806370a08231146101bf57806395d89b41146101d257600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018657806342842e0e1461019957600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610dc5565b61024f565b60405190151581526020015b60405180910390f35b61011f6102a1565b60405161010e9190610ec0565b61013f61013a366004610dff565b610333565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610d9b565b610377565b005b60015460005403600019015b60405190815260200161010e565b61016a610194366004610c47565b610405565b61016a6101a7366004610c47565b610410565b61013f6101ba366004610dff565b61042b565b6101786101cd366004610bf9565b61043d565b61011f61048c565b61016a6101e8366004610d5f565b61049b565b61016a6101fb366004610c83565b610531565b61011f61020e366004610dff565b610582565b610102610221366004610c14565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028057506001600160e01b03198216635b5e139f60e01b145b8061029b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102b090610f42565b80601f01602080910402602001604051908101604052809291908181526020018280546102dc90610f42565b80156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b5050505050905090565b600061033e82610614565b61035b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006103828261042b565b9050806001600160a01b0316836001600160a01b031614156103b75760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906103d757506103d58133610221565b155b156103f5576040516367d9dca160e11b815260040160405180910390fd5b61040083838361064d565b505050565b6104008383836106a9565b61040083838360405180602001604052806000815250610531565b6000610436826108be565b5192915050565b60006001600160a01b038216610466576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102b090610f42565b6001600160a01b0382163314156104c55760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61053c8484846106a9565b6001600160a01b0383163b1515801561055e575061055c848484846109e7565b155b1561057c576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061058d82610614565b6105aa57604051630a14c4b560e41b815260040160405180910390fd5b60006105c160408051602081019091526000815290565b90508051600014156105e2576040518060200160405280600081525061060d565b806105ec84610adf565b6040516020016105fd929190610e44565b6040516020818303038152906040525b9392505050565b600081600111158015610628575060005482105b801561029b575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006106b4826108be565b80519091506000906001600160a01b0316336001600160a01b031614806106e2575081516106e29033610221565b806106fd5750336106f284610333565b6001600160a01b0316145b90508061071d57604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b0316146107525760405162a1148160e81b815260040160405180910390fd5b6001600160a01b03841661077957604051633a954ecd60e21b815260040160405180910390fd5b610789600084846000015161064d565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021790925590860180835291205490911661087557600054811015610875578251600082815260046020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b604080516060810182526000808252602082018190529181019190915281806001111580156108ee575060005481105b156109ce57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906109cc5780516001600160a01b031615610962579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156109c7579392505050565b610962565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610a1c903390899088908890600401610e83565b602060405180830381600087803b158015610a3657600080fd5b505af1925050508015610a66575060408051601f3d908101601f19168201909252610a6391810190610de2565b60015b610ac1573d808015610a94576040519150601f19603f3d011682016040523d82523d6000602084013e610a99565b606091505b508051610ab9576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606081610b035750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b2d5780610b1781610f7d565b9150610b269050600a83610eeb565b9150610b07565b60008167ffffffffffffffff811115610b4857610b48610fee565b6040519080825280601f01601f191660200182016040528015610b72576020820181803683370190505b5090505b8415610ad757610b87600183610eff565b9150610b94600a86610f98565b610b9f906030610ed3565b60f81b818381518110610bb457610bb4610fd8565b60200101906001600160f81b031916908160001a905350610bd6600a86610eeb565b9450610b76565b80356001600160a01b0381168114610bf457600080fd5b919050565b600060208284031215610c0b57600080fd5b61060d82610bdd565b60008060408385031215610c2757600080fd5b610c3083610bdd565b9150610c3e60208401610bdd565b90509250929050565b600080600060608486031215610c5c57600080fd5b610c6584610bdd565b9250610c7360208501610bdd565b9150604084013590509250925092565b60008060008060808587031215610c9957600080fd5b610ca285610bdd565b9350610cb060208601610bdd565b925060408501359150606085013567ffffffffffffffff80821115610cd457600080fd5b818701915087601f830112610ce857600080fd5b813581811115610cfa57610cfa610fee565b604051601f8201601f19908116603f01168101908382118183101715610d2257610d22610fee565b816040528281528a6020848701011115610d3b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610d7257600080fd5b610d7b83610bdd565b915060208301358015158114610d9057600080fd5b809150509250929050565b60008060408385031215610dae57600080fd5b610db783610bdd565b946020939093013593505050565b600060208284031215610dd757600080fd5b813561060d81611004565b600060208284031215610df457600080fd5b815161060d81611004565b600060208284031215610e1157600080fd5b5035919050565b60008151808452610e30816020860160208601610f16565b601f01601f19169290920160200192915050565b60008351610e56818460208801610f16565b835190830190610e6a818360208801610f16565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610eb690830184610e18565b9695505050505050565b60208152600061060d6020830184610e18565b60008219821115610ee657610ee6610fac565b500190565b600082610efa57610efa610fc2565b500490565b600082821015610f1157610f11610fac565b500390565b60005b83811015610f31578181015183820152602001610f19565b8381111561057c5750506000910152565b600181811c90821680610f5657607f821691505b60208210811415610f7757634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610f9157610f91610fac565b5060010190565b600082610fa757610fa7610fc2565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461101a57600080fd5b5056fea2646970667358221220972d10adbed34a707878f9563de03fc21667463430b4429c6e4336d4fe5e475864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12EA CODESIZE SUB DUP1 PUSH3 0x12EA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1CA JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x6D JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x6D JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP PUSH3 0x287 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7B SWAP1 PUSH3 0x234 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEA JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCD JUMP JUMPDEST POP PUSH3 0xF8 SWAP3 SWAP2 POP PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x142 JUMPI PUSH3 0x142 PUSH3 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x16D JUMPI PUSH3 0x16D PUSH3 0x271 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1AE JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18F JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1C0 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x204 DUP7 DUP4 DUP8 ADD PUSH3 0x113 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22A DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x249 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x26B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1053 DUP1 PUSH3 0x297 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x11F PUSH2 0x48C JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x280 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x29B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DC SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x329 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x329 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 DUP3 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x250FDEE3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D5 DUP2 CALLER PUSH2 0x221 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x400 DUP4 DUP4 DUP4 PUSH2 0x64D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 DUP4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x531 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 DUP3 PUSH2 0x8BE JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x53C DUP5 DUP5 DUP5 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO ISZERO DUP1 ISZERO PUSH2 0x55E JUMPI POP PUSH2 0x55C DUP5 DUP5 DUP5 DUP5 PUSH2 0x9E7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x58D DUP3 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x60D JUMP JUMPDEST DUP1 PUSH2 0x5EC DUP5 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5FD SWAP3 SWAP2 SWAP1 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x29B JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 DUP3 PUSH2 0x8BE JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6E2 JUMPI POP DUP2 MLOAD PUSH2 0x6E2 SWAP1 CALLER PUSH2 0x221 JUMP JUMPDEST DUP1 PUSH2 0x6FD JUMPI POP CALLER PUSH2 0x6F2 DUP5 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x789 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x64D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE DUP10 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP3 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x875 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x875 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP1 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x8EE JUMPI POP PUSH1 0x0 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x9CC JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x962 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO PUSH2 0x9C7 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xA1C SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA66 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA63 SWAP2 DUP2 ADD SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAC1 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB03 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB2D JUMPI DUP1 PUSH2 0xB17 DUP2 PUSH2 0xF7D JUMP JUMPDEST SWAP2 POP PUSH2 0xB26 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xB87 PUSH1 0x1 DUP4 PUSH2 0xEFF JUMP JUMPDEST SWAP2 POP PUSH2 0xB94 PUSH1 0xA DUP7 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0xB9F SWAP1 PUSH1 0x30 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBD6 PUSH1 0xA DUP7 PUSH2 0xEEB JUMP JUMPDEST SWAP5 POP PUSH2 0xB76 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60D DUP3 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC30 DUP4 PUSH2 0xBDD JUMP JUMPDEST SWAP2 POP PUSH2 0xC3E PUSH1 0x20 DUP5 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC65 DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP3 POP PUSH2 0xC73 PUSH1 0x20 DUP6 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA2 DUP6 PUSH2 0xBDD JUMP JUMPDEST SWAP4 POP PUSH2 0xCB0 PUSH1 0x20 DUP7 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCFA JUMPI PUSH2 0xCFA PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD22 PUSH2 0xFEE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7B DUP4 PUSH2 0xBDD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB7 DUP4 PUSH2 0xBDD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60D DUP2 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x60D DUP2 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE30 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xE56 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF16 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xE6A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF16 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xEB6 SWAP1 DUP4 ADD DUP5 PUSH2 0xE18 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x60D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE6 PUSH2 0xFAC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEFA JUMPI PUSH2 0xEFA PUSH2 0xFC2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF11 PUSH2 0xFAC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF19 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x57C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF77 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF91 PUSH2 0xFAC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFA7 JUMPI PUSH2 0xFA7 PUSH2 0xFC2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x101A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x2D LT 0xAD 0xBE 0xD3 0x4A PUSH17 0x7878F9563DE03FC21667463430B4429C6E NUMBER CALLDATASIZE 0xD4 INVALID 0x5E SELFBALANCE PC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "29145:20124:0:-:0;;;31037:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31103:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;31126:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;31365:1:0;31153:13;:31;-1:-1:-1;29145:20124:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29145:20124:0;;;-1:-1:-1;29145:20124:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;29145:20124:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_2183": {
									"entryPoint": null,
									"id": 2183,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2102": {
									"entryPoint": 1613,
									"id": 2102,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1356": {
									"entryPoint": null,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2170": {
									"entryPoint": null,
									"id": 2170,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2157": {
									"entryPoint": 2535,
									"id": 2157,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1573": {
									"entryPoint": 1556,
									"id": 1573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_1003": {
									"entryPoint": null,
									"id": 1003,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1938": {
									"entryPoint": 1705,
									"id": 1938,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1402": {
									"entryPoint": 887,
									"id": 1402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1090": {
									"entryPoint": 1085,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1424": {
									"entryPoint": 819,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1476": {
									"entryPoint": null,
									"id": 1476,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_382": {
									"entryPoint": null,
									"id": 382,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1293": {
									"entryPoint": 673,
									"id": 1293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1283": {
									"entryPoint": 1067,
									"id": 1283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownershipOf_1268": {
									"entryPoint": 2238,
									"id": 1268,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1513": {
									"entryPoint": 1040,
									"id": 1513,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1549": {
									"entryPoint": 1329,
									"id": 1549,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1458": {
									"entryPoint": 1179,
									"id": 1458,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1062": {
									"entryPoint": 591,
									"id": 1062,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_708": {
									"entryPoint": null,
									"id": 708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1303": {
									"entryPoint": 1164,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_123": {
									"entryPoint": 2783,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1347": {
									"entryPoint": 1410,
									"id": 1347,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1494": {
									"entryPoint": 1029,
									"id": 1494,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3652,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7581:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:1008:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1132:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:1"
															},
															"nodeType": "YulIf",
															"src": "1121:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1183:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1193:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1231:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1241:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1288:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1298:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1339:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1353:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1343:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1404:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1398:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1437:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1434:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:14:1"
															},
															"nodeType": "YulIf",
															"src": "1431:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1478:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1554:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1556:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1556:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1556:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1533:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1537:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:35:1"
															},
															"nodeType": "YulIf",
															"src": "1515:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1579:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1583:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1630:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1620:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:10:1"
															},
															"nodeType": "YulIf",
															"src": "1614:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1659:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1663:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1717:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1739:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1763:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1767:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1759:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1759:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1774:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1755:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1779:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1751:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1784:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1721:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1847:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1849:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1806:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1803:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1826:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1823:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1823:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1800:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:46:1"
															},
															"nodeType": "YulIf",
															"src": "1797:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1889:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1924:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1973:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1975:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1950:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1954:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1946:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1946:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1959:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1964:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1939:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:33:1"
															},
															"nodeType": "YulIf",
															"src": "1936:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2023:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2032:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2041:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1998:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2076:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2064:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2081:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2053:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2107:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1064:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1084:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1092:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1100:6:1",
														"type": ""
													}
												],
												"src": "981:1138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:1"
															},
															"nodeType": "YulIf",
															"src": "2218:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2368:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2394:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2415:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2408:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2408:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2401:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2401:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2391:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:40:1"
															},
															"nodeType": "YulIf",
															"src": "2381:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2450:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2460:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:1",
														"type": ""
													}
												],
												"src": "2124:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2563:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2618:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2584:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:32:1"
															},
															"nodeType": "YulIf",
															"src": "2573:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2634:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2644:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2682:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2692:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2521:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2532:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2552:6:1",
														"type": ""
													}
												],
												"src": "2476:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:1"
															},
															"nodeType": "YulIf",
															"src": "2814:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2888:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2879:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2944:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2920:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2959:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2969:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2781:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:1",
														"type": ""
													}
												],
												"src": "2735:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3113:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:32:1"
															},
															"nodeType": "YulIf",
															"src": "3075:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3136:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3140:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3213:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3223:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3042:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3054:6:1",
														"type": ""
													}
												],
												"src": "2985:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3355:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3364:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3357:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3357:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:32:1"
															},
															"nodeType": "YulIf",
															"src": "3319:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3390:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3275:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3286:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3298:6:1",
														"type": ""
													}
												],
												"src": "3239:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3503:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3487:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3590:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3595:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3546:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3633:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3646:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3642:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3642:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3663:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3659:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3659:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3450:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3457:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3465:3:1",
														"type": ""
													}
												],
												"src": "3424:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3974:349:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3984:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4004:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3998:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3988:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4046:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4042:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4061:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4066:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4020:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4082:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4099:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "4086:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4120:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4142:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4136:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4124:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4184:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4192:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4180:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4199:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4206:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4158:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4158:57:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4224:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4241:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4248:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4237:20:1"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "4228:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "4273:5:1"
																	},
																	{
																		"hexValue": "2e6a736f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4280:7:1",
																		"type": "",
																		"value": ".json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4266:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4297:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "4308:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4315:1:1",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4304:13:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4297:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3942:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3947:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3955:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3966:3:1",
														"type": ""
													}
												],
												"src": "3686:637:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4429:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4439:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4451:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4462:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4439:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4481:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4496:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4512:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4517:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4508:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4508:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4521:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4504:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4504:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4492:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4474:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4474:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4398:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4420:4:1",
														"type": ""
													}
												],
												"src": "4328:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4749:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4767:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4772:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4776:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4759:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4753:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4794:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4809:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4817:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4805:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4841:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4852:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4837:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4837:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4861:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4869:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4857:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4857:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4830:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4830:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4893:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4904:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4889:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4909:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4882:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4936:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4947:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4932:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4952:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4965:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4990:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5002:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5013:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4998:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4973:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4684:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4695:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4703:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4719:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4730:4:1",
														"type": ""
													}
												],
												"src": "4536:488:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5124:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5134:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5146:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5157:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5142:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5134:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5176:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5201:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5194:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5194:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5187:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5187:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5169:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5169:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5093:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5104:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5115:4:1",
														"type": ""
													}
												],
												"src": "5029:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5359:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5370:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5352:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5352:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5382:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5407:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5430:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5390:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5382:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5311:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5322:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5333:4:1",
														"type": ""
													}
												],
												"src": "5221:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5546:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5556:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5568:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5579:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5556:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5598:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5609:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5591:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5515:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5526:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5537:4:1",
														"type": ""
													}
												],
												"src": "5445:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5675:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5702:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5704:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5704:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5691:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5698:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5694:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5694:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5688:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:13:1"
															},
															"nodeType": "YulIf",
															"src": "5685:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5733:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5744:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5747:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5740:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5740:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5733:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5658:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5661:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5667:3:1",
														"type": ""
													}
												],
												"src": "5627:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5806:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5829:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5831:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5831:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5831:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5826:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5819:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5819:9:1"
															},
															"nodeType": "YulIf",
															"src": "5816:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5860:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5869:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5872:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5860:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5791:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5794:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5800:1:1",
														"type": ""
													}
												],
												"src": "5760:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5934:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5956:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5958:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5958:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5958:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5950:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5953:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5947:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5947:8:1"
															},
															"nodeType": "YulIf",
															"src": "5944:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5987:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6002:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5995:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5987:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5916:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5919:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5925:4:1",
														"type": ""
													}
												],
												"src": "5885:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6068:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6078:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6087:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6082:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6147:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6172:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6177:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6168:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6168:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6191:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6196:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6187:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6187:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6181:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6181:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6161:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6161:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6161:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6108:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6111:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6105:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6119:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6121:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6130:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6133:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6126:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6126:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6121:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6101:3:1",
																"statements": []
															},
															"src": "6097:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6236:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6249:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6254:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6245:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6245:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6263:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6238:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6238:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6238:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6225:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6228:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6222:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:13:1"
															},
															"nodeType": "YulIf",
															"src": "6219:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6046:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6051:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6056:6:1",
														"type": ""
													}
												],
												"src": "6015:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6333:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6343:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6357:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6360:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6343:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6374:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6404:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6410:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6378:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6451:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6453:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6467:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6475:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6463:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6463:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6453:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6431:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6424:26:1"
															},
															"nodeType": "YulIf",
															"src": "6421:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6541:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6562:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6569:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6574:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6565:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6565:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6555:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6555:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6555:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6606:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6609:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6599:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6599:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6599:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6634:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6637:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6627:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6627:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6627:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6497:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6520:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6528:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6517:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6517:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6494:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6494:38:1"
															},
															"nodeType": "YulIf",
															"src": "6491:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6313:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6322:6:1",
														"type": ""
													}
												],
												"src": "6278:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6710:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6741:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6743:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6743:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6743:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6726:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6737:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6733:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6723:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:17:1"
															},
															"nodeType": "YulIf",
															"src": "6720:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6772:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6783:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6790:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6772:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6692:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6702:3:1",
														"type": ""
													}
												],
												"src": "6663:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6841:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6864:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6866:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6866:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6866:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6861:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6854:9:1"
															},
															"nodeType": "YulIf",
															"src": "6851:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6895:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6904:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6907:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "6900:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6900:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6895:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6826:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6829:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6835:1:1",
														"type": ""
													}
												],
												"src": "6803:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6952:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6976:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6981:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6962:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6962:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7012:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7002:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7033:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7036:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7026:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6920:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7084:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7101:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7108:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7113:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7104:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7094:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7094:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7141:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7144:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7134:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7134:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7165:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7168:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7158:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7158:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7158:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7052:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7216:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7233:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7240:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7245:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7236:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7226:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7226:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7273:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7266:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7297:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7300:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7290:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7290:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7184:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7348:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7365:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7372:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7377:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7368:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7358:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7358:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7405:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7408:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7398:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7422:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7422:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7316:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7492:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7557:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7566:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7569:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7559:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7559:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7559:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7515:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7526:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7537:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7542:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7533:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7533:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7522:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7522:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7512:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:51:1"
															},
															"nodeType": "YulIf",
															"src": "7502:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7481:5:1",
														"type": ""
													}
												],
												"src": "7448:131:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        mstore(end_2, \".json\")\n        end := add(end_2, 5)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x11F PUSH2 0x48C JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x280 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x29B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DC SWAP1 PUSH2 0xF42 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x329 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x329 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 DUP3 PUSH2 0x42B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x250FDEE3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D5 DUP2 CALLER PUSH2 0x221 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x400 DUP4 DUP4 DUP4 PUSH2 0x64D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 DUP4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x400 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x531 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 DUP3 PUSH2 0x8BE JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x53C DUP5 DUP5 DUP5 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO ISZERO DUP1 ISZERO PUSH2 0x55E JUMPI POP PUSH2 0x55C DUP5 DUP5 DUP5 DUP5 PUSH2 0x9E7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x58D DUP3 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x60D JUMP JUMPDEST DUP1 PUSH2 0x5EC DUP5 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5FD SWAP3 SWAP2 SWAP1 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x29B JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B4 DUP3 PUSH2 0x8BE JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6E2 JUMPI POP DUP2 MLOAD PUSH2 0x6E2 SWAP1 CALLER PUSH2 0x221 JUMP JUMPDEST DUP1 PUSH2 0x6FD JUMPI POP CALLER PUSH2 0x6F2 DUP5 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x789 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x64D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE DUP10 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP3 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x875 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x875 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP1 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x8EE JUMPI POP PUSH1 0x0 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x9CC JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x962 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO PUSH2 0x9C7 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xA1C SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA66 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA63 SWAP2 DUP2 ADD SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAC1 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB03 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB2D JUMPI DUP1 PUSH2 0xB17 DUP2 PUSH2 0xF7D JUMP JUMPDEST SWAP2 POP PUSH2 0xB26 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xB87 PUSH1 0x1 DUP4 PUSH2 0xEFF JUMP JUMPDEST SWAP2 POP PUSH2 0xB94 PUSH1 0xA DUP7 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0xB9F SWAP1 PUSH1 0x30 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBD6 PUSH1 0xA DUP7 PUSH2 0xEEB JUMP JUMPDEST SWAP5 POP PUSH2 0xB76 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60D DUP3 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC30 DUP4 PUSH2 0xBDD JUMP JUMPDEST SWAP2 POP PUSH2 0xC3E PUSH1 0x20 DUP5 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC65 DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP3 POP PUSH2 0xC73 PUSH1 0x20 DUP6 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA2 DUP6 PUSH2 0xBDD JUMP JUMPDEST SWAP4 POP PUSH2 0xCB0 PUSH1 0x20 DUP7 ADD PUSH2 0xBDD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCFA JUMPI PUSH2 0xCFA PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD22 PUSH2 0xFEE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7B DUP4 PUSH2 0xBDD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB7 DUP4 PUSH2 0xBDD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60D DUP2 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x60D DUP2 PUSH2 0x1004 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE30 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xE56 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF16 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xE6A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF16 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xEB6 SWAP1 DUP4 ADD DUP5 PUSH2 0xE18 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x60D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEE6 PUSH2 0xFAC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEFA JUMPI PUSH2 0xEFA PUSH2 0xFC2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF11 PUSH2 0xFAC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF19 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x57C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF77 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF91 PUSH2 0xFAC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFA7 JUMPI PUSH2 0xFA7 PUSH2 0xFC2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x101A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x2D LT 0xAD 0xBE 0xD3 0x4A PUSH17 0x7878F9563DE03FC21667463430B4429C6E NUMBER CALLDATASIZE 0xD4 INVALID 0x5E SELFBALANCE PC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "29145:20124:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32280:300;;;;;;:::i;:::-;;:::i;:::-;;;5194:14:1;;5187:22;5169:41;;5157:2;5142:18;32280:300:0;;;;;;;;35576:98;;;:::i;:::-;;;;;;;:::i;37041:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4492:32:1;;;4474:51;;4462:2;4447:18;37041:200:0;4328:203:1;36618:362:0;;;;;;:::i;:::-;;:::i;:::-;;31551:297;31365:1;31801:12;31595:7;31785:13;:28;-1:-1:-1;;31785:46:0;31551:297;;;5591:25:1;;;5579:2;5564:18;31551:297:0;5445:177:1;37872:164:0;;;;;;:::i;:::-;;:::i;38102:179::-;;;;;;:::i;:::-;;:::i;35392:122::-;;;;;;:::i;:::-;;:::i;32639:203::-;;;;;;:::i;:::-;;:::i;35738:102::-;;;:::i;37308:274::-;;;;;;:::i;:::-;;:::i;38347:359::-;;;;;;:::i;:::-;;:::i;35906:322::-;;;;;;:::i;:::-;;:::i;37648:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;37768:25:0;;;37745:4;37768:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;37648:162;32280:300;32382:4;-1:-1:-1;;;;;;32417:40:0;;-1:-1:-1;;;32417:40:0;;:104;;-1:-1:-1;;;;;;;32473:48:0;;-1:-1:-1;;;32473:48:0;32417:104;:156;;;-1:-1:-1;;;;;;;;;;21325:40:0;;;32537:36;32398:175;32280:300;-1:-1:-1;;32280:300:0:o;35576:98::-;35630:13;35662:5;35655:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35576:98;:::o;37041:200::-;37109:7;37133:16;37141:7;37133;:16::i;:::-;37128:64;;37158:34;;-1:-1:-1;;;37158:34:0;;;;;;;;;;;37128:64;-1:-1:-1;37210:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;37210:24:0;;37041:200::o;36618:362::-;36690:13;36706:24;36722:7;36706:15;:24::i;:::-;36690:40;;36750:5;-1:-1:-1;;;;;36744:11:0;:2;-1:-1:-1;;;;;36744:11:0;;36740:48;;;36764:24;;-1:-1:-1;;;36764:24:0;;;;;;;;;;;36740:48;7632:10;-1:-1:-1;;;;;36803:21:0;;;;;;:63;;-1:-1:-1;36829:37:0;36846:5;7632:10;37648:162;:::i;36829:37::-;36828:38;36803:63;36799:136;;;36889:35;;-1:-1:-1;;;36889:35:0;;;;;;;;;;;36799:136;36945:28;36954:2;36958:7;36967:5;36945:8;:28::i;:::-;36680:300;36618:362;;:::o;37872:164::-;38001:28;38011:4;38017:2;38021:7;38001:9;:28::i;38102:179::-;38235:39;38252:4;38258:2;38262:7;38235:39;;;;;;;;;;;;:16;:39::i;35392:122::-;35456:7;35482:20;35494:7;35482:11;:20::i;:::-;:25;;35392:122;-1:-1:-1;;35392:122:0:o;32639:203::-;32703:7;-1:-1:-1;;;;;32726:19:0;;32722:60;;32754:28;;-1:-1:-1;;;32754:28:0;;;;;;;;;;;32722:60;-1:-1:-1;;;;;;32807:19:0;;;;;:12;:19;;;;;:27;;;;32639:203::o;35738:102::-;35794:13;35826:7;35819:14;;;;;:::i;37308:274::-;-1:-1:-1;;;;;37398:24:0;;7632:10;37398:24;37394:54;;;37431:17;;-1:-1:-1;;;37431:17:0;;;;;;;;;;;37394:54;7632:10;37459:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;37459:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;37459:53:0;;;;;;;;;;37527:48;;5169:41:1;;;37459:42:0;;7632:10;37527:48;;5142:18:1;37527:48:0;;;;;;;37308:274;;:::o;38347:359::-;38508:28;38518:4;38524:2;38528:7;38508:9;:28::i;:::-;-1:-1:-1;;;;;38550:13:0;;11696:19;:23;;38550:76;;;;;38570:56;38601:4;38607:2;38611:7;38620:5;38570:30;:56::i;:::-;38569:57;38550:76;38546:154;;;38649:40;;-1:-1:-1;;;38649:40:0;;;;;;;;;;;38546:154;38347:359;;;;:::o;35906:322::-;35979:13;36009:16;36017:7;36009;:16::i;:::-;36004:59;;36034:29;;-1:-1:-1;;;36034:29:0;;;;;;;;;;;36004:59;36074:21;36098:10;36545:9;;;;;;;;;-1:-1:-1;36545:9:0;;;36469:92;36098:10;36074:34;;36131:7;36125:21;36150:1;36125:26;;:96;;;;;;;;;;;;;;;;;36178:7;36187:18;:7;:16;:18::i;:::-;36161:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36125:96;36118:103;35906:322;-1:-1:-1;;;35906:322:0:o;38952:184::-;39009:4;39051:7;31365:1;39032:26;;:53;;;;;39072:13;;39062:7;:23;39032:53;:97;;;;-1:-1:-1;;39102:20:0;;;;:11;:20;;;;;:27;-1:-1:-1;;;39102:27:0;;;;39101:28;;38952:184::o;46368:189::-;46478:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;46478:29:0;-1:-1:-1;;;;;46478:29:0;;;;;;;;;46522:28;;46478:24;;46522:28;;;;;;;46368:189;;;:::o;41974:2067::-;42084:35;42122:20;42134:7;42122:11;:20::i;:::-;42195:18;;42084:58;;-1:-1:-1;42153:22:0;;-1:-1:-1;;;;;42179:34:0;7632:10;-1:-1:-1;;;;;42179:34:0;;:100;;;-1:-1:-1;42246:18:0;;42229:50;;7632:10;37648:162;:::i;42229:50::-;42179:152;;;-1:-1:-1;7632:10:0;42295:20;42307:7;42295:11;:20::i;:::-;-1:-1:-1;;;;;42295:36:0;;42179:152;42153:179;;42348:17;42343:66;;42374:35;;-1:-1:-1;;;42374:35:0;;;;;;;;;;;42343:66;42445:4;-1:-1:-1;;;;;42423:26:0;:13;:18;;;-1:-1:-1;;;;;42423:26:0;;42419:67;;42458:28;;-1:-1:-1;;;42458:28:0;;;;;;;;;;;42419:67;-1:-1:-1;;;;;42500:16:0;;42496:52;;42525:23;;-1:-1:-1;;;42525:23:0;;;;;;;;;;;42496:52;42664:49;42681:1;42685:7;42694:13;:18;;;42664:8;:49::i;:::-;-1:-1:-1;;;;;43003:18:0;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;43003:31:0;;;;;;;-1:-1:-1;;43003:31:0;;;;;;;43048:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;43048:29:0;;;;;;;;;;;43092:20;;;:11;:20;;;;;;:30;;-1:-1:-1;;;;;;43136:61:0;;;;-1:-1:-1;;;43181:15:0;43136:61;;;;;;;;;;;43467:11;;;43496:24;;;;;:29;43467:11;;43496:29;43492:438;;43718:13;;43704:11;:27;43700:216;;;43787:18;;;43755:24;;;:11;:24;;;;;;;;:50;;43869:28;;;;43827:70;;-1:-1:-1;;;43827:70:0;-1:-1:-1;;;;;;43827:70:0;;;-1:-1:-1;;;;;43755:50:0;;;43827:70;;;;;;;43700:216;42979:961;43974:7;43970:2;-1:-1:-1;;;;;43955:27:0;43964:4;-1:-1:-1;;;;;43955:27:0;;;;;;;;;;;42074:1967;;41974:2067;;;:::o;34252:1083::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;34361:7:0;;31365:1;34407:23;;:47;;;;;34441:13;;34434:4;:20;34407:47;34403:868;;;34474:31;34508:17;;;:11;:17;;;;;;;;;34474:51;;;;;;;;;-1:-1:-1;;;;;34474:51:0;;;;-1:-1:-1;;;34474:51:0;;;;;;;;;;;-1:-1:-1;;;34474:51:0;;;;;;;;;;;;;;34543:714;;34592:14;;-1:-1:-1;;;;;34592:28:0;;34588:99;;34655:9;34252:1083;-1:-1:-1;;;34252:1083:0:o;34588:99::-;-1:-1:-1;;;35023:6:0;35067:17;;;;:11;:17;;;;;;;;;35055:29;;;;;;;;;-1:-1:-1;;;;;35055:29:0;;;;;-1:-1:-1;;;35055:29:0;;;;;;;;;;;-1:-1:-1;;;35055:29:0;;;;;;;;;;;;;35114:28;35110:107;;35181:9;34252:1083;-1:-1:-1;;;34252:1083:0:o;35110:107::-;34984:255;;;34456:815;34403:868;35297:31;;-1:-1:-1;;;35297:31:0;;;;;;;;;;;47038:650;47216:72;;-1:-1:-1;;;47216:72:0;;47196:4;;-1:-1:-1;;;;;47216:36:0;;;;;:72;;7632:10;;47267:4;;47273:7;;47282:5;;47216:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47216:72:0;;;;;;;;-1:-1:-1;;47216:72:0;;;;;;;;;;;;:::i;:::-;;;47212:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47447:13:0;;47443:229;;47492:40;;-1:-1:-1;;;47492:40:0;;;;;;;;;;;47443:229;47632:6;47626:13;47617:6;47613:2;47609:15;47602:38;47212:470;-1:-1:-1;;;;;;47334:55:0;-1:-1:-1;;;47334:55:0;;-1:-1:-1;47212:470:0;47038:650;;;;;;:::o;5187:703::-;5243:13;5460:10;5456:51;;-1:-1:-1;;5486:10:0;;;;;;;;;;;;-1:-1:-1;;;5486:10:0;;;;;5187:703::o;5456:51::-;5531:5;5516:12;5570:75;5577:9;;5570:75;;5602:8;;;;:::i;:::-;;-1:-1:-1;5624:10:0;;-1:-1:-1;5632:2:0;5624:10;;:::i;:::-;;;5570:75;;;5654:19;5686:6;5676:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5676:17:0;;5654:39;;5703:150;5710:10;;5703:150;;5736:11;5746:1;5736:11;;:::i;:::-;;-1:-1:-1;5804:10:0;5812:2;5804:5;:10;:::i;:::-;5791:24;;:2;:24;:::i;:::-;5778:39;;5761:6;5768;5761:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;5761:56:0;;;;;;;;-1:-1:-1;5831:11:0;5840:2;5831:11;;:::i;:::-;;;5703:150;;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:1;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:1:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:1;;3239:180;-1:-1:-1;3239:180:1:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:1;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:1:o;3686:637::-;3966:3;4004:6;3998:13;4020:53;4066:6;4061:3;4054:4;4046:6;4042:17;4020:53;:::i;:::-;4136:13;;4095:16;;;;4158:57;4136:13;4095:16;4192:4;4180:17;;4158:57;:::i;:::-;-1:-1:-1;;;4237:20:1;;4266:22;;;4315:1;4304:13;;3686:637;-1:-1:-1;;;;3686:637:1:o;4536:488::-;-1:-1:-1;;;;;4805:15:1;;;4787:34;;4857:15;;4852:2;4837:18;;4830:43;4904:2;4889:18;;4882:34;;;4952:3;4947:2;4932:18;;4925:31;;;4730:4;;4973:45;;4998:19;;4990:6;4973:45;:::i;:::-;4965:53;4536:488;-1:-1:-1;;;;;;4536:488:1:o;5221:219::-;5370:2;5359:9;5352:21;5333:4;5390:44;5430:2;5419:9;5415:18;5407:6;5390:44;:::i;5627:128::-;5667:3;5698:1;5694:6;5691:1;5688:13;5685:39;;;5704:18;;:::i;:::-;-1:-1:-1;5740:9:1;;5627:128::o;5760:120::-;5800:1;5826;5816:35;;5831:18;;:::i;:::-;-1:-1:-1;5865:9:1;;5760:120::o;5885:125::-;5925:4;5953:1;5950;5947:8;5944:34;;;5958:18;;:::i;:::-;-1:-1:-1;5995:9:1;;5885:125::o;6015:258::-;6087:1;6097:113;6111:6;6108:1;6105:13;6097:113;;;6187:11;;;6181:18;6168:11;;;6161:39;6133:2;6126:10;6097:113;;;6228:6;6225:1;6222:13;6219:48;;;-1:-1:-1;;6263:1:1;6245:16;;6238:27;6015:258::o;6278:380::-;6357:1;6353:12;;;;6400;;;6421:61;;6475:4;6467:6;6463:17;6453:27;;6421:61;6528:2;6520:6;6517:14;6497:18;6494:38;6491:161;;;6574:10;6569:3;6565:20;6562:1;6555:31;6609:4;6606:1;6599:15;6637:4;6634:1;6627:15;6491:161;;6278:380;;;:::o;6663:135::-;6702:3;-1:-1:-1;;6723:17:1;;6720:43;;;6743:18;;:::i;:::-;-1:-1:-1;6790:1:1;6779:13;;6663:135::o;6803:112::-;6835:1;6861;6851:35;;6866:18;;:::i;:::-;-1:-1:-1;6900:9:1;;6803:112::o;6920:127::-;6981:10;6976:3;6972:20;6969:1;6962:31;7012:4;7009:1;7002:15;7036:4;7033:1;7026:15;7052:127;7113:10;7108:3;7104:20;7101:1;7094:31;7144:4;7141:1;7134:15;7168:4;7165:1;7158:15;7184:127;7245:10;7240:3;7236:20;7233:1;7226:31;7276:4;7273:1;7266:15;7300:4;7297:1;7290:15;7316:127;7377:10;7372:3;7368:20;7365:1;7358:31;7408:4;7405:1;7398:15;7432:4;7429:1;7422:15;7448:131;-1:-1:-1;;;;;;7522:32:1;;7512:43;;7502:71;;7569:1;7566;7559:12;7502:71;7448:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "835800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6970",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26650",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4441",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256,address)": "26264",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4382",
								"_getAux(address)": "infinite",
								"_mint(address,uint256,bytes memory,bool)": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_startTokenId()": "infinite",
								"_totalMinted()": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"ownershipOf(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31108,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31103,
									"end": 31108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31133,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31126,
									"end": 31133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 31365,
									"end": 31366,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31153,
									"end": 31166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31153,
									"end": 31184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29145,
									"end": 49269,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220972d10adbed34a707878f9563de03fc21667463430b4429c6e4336d4fe5e475864736f6c63430008070033",
									".code": [
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29145,
											"end": 49269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5194,
											"end": 5208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4328,
											"end": 4531,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31365,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31801,
											"end": 31813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31785,
											"end": 31798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 31813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31785,
											"end": 31831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37786,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32473,
											"end": 32521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32473,
											"end": 32521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32473,
											"end": 32521,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32417,
											"end": 32573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21325,
											"end": 21365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32573,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32537,
											"end": 32573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32398,
											"end": 32573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35630,
											"end": 35643,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35662,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37109,
											"end": 37116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 37141,
											"end": 37148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37133,
											"end": 37140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37225,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 36722,
											"end": 36729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36706,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36750,
											"end": 36755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36744,
											"end": 36755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36744,
											"end": 36755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36755,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "250FDEE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36829,
											"end": 36866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 36846,
											"end": 36851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36829,
											"end": 36866,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 36829,
											"end": 36866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36828,
											"end": 36866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36954,
											"end": 36956,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36958,
											"end": 36965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36967,
											"end": 36972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36945,
											"end": 36953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36680,
											"end": 36980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38001,
											"end": 38029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 38011,
											"end": 38015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38021,
											"end": 38028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38001,
											"end": 38010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 38001,
											"end": 38029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 38252,
											"end": 38256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38258,
											"end": 38260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38262,
											"end": 38269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35456,
											"end": 35463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 35494,
											"end": 35501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32703,
											"end": 32710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32726,
											"end": 32745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32819,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35794,
											"end": 35807,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35826,
											"end": 35833,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37398,
											"end": 37422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37398,
											"end": 37422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37398,
											"end": 37422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06307DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37477,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5169,
											"end": 5210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 38518,
											"end": 38522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38528,
											"end": 38535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38508,
											"end": 38517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38550,
											"end": 38563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11715,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 38601,
											"end": 38605,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38607,
											"end": 38609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38620,
											"end": 38625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38570,
											"end": 38600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38569,
											"end": 38626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35979,
											"end": 35992,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 36017,
											"end": 36024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36098,
											"end": 36108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36545,
											"end": 36554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36469,
											"end": 36561,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36098,
											"end": 36108,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 36098,
											"end": 36108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36131,
											"end": 36138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36150,
											"end": 36151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36125,
											"end": 36151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36178,
											"end": 36185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 36187,
											"end": 36194,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36187,
											"end": 36203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36118,
											"end": 36221,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38952,
											"end": 39136,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 38952,
											"end": 39136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39009,
											"end": 39013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39051,
											"end": 39058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31365,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39032,
											"end": 39058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39072,
											"end": 39085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39072,
											"end": 39085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39085,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39101,
											"end": 39129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39101,
											"end": 39129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 39136,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46493,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 42119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 42134,
											"end": 42141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42122,
											"end": 42133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42195,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42195,
											"end": 42213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 42142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 42142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42153,
											"end": 42175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42153,
											"end": 42175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42179,
											"end": 42213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42179,
											"end": 42213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 42179,
											"end": 42279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42246,
											"end": 42264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42246,
											"end": 42264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42307,
											"end": 42314,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42295,
											"end": 42331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42331,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42153,
											"end": 42332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42153,
											"end": 42332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42445,
											"end": 42449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42423,
											"end": 42449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42423,
											"end": 42441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42423,
											"end": 42449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42500,
											"end": 42516,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42500,
											"end": 42516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42681,
											"end": 42682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42685,
											"end": 42692,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42694,
											"end": 42707,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42694,
											"end": 42712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42694,
											"end": 42712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42694,
											"end": 42712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 42672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43015,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43181,
											"end": 43196,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43492,
											"end": 43930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 43492,
											"end": 43930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43718,
											"end": 43731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43718,
											"end": 43731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43704,
											"end": 43715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43704,
											"end": 43731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43787,
											"end": 43805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43787,
											"end": 43805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43787,
											"end": 43805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42979,
											"end": 43940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43974,
											"end": 43981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43970,
											"end": 43972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43964,
											"end": 43968,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 42074,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42074,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34361,
											"end": 34368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31365,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34407,
											"end": 34430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34434,
											"end": 34438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34434,
											"end": 34454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34543,
											"end": 35257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34543,
											"end": 35257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34592,
											"end": 34620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34664,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35023,
											"end": 35029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35181,
											"end": 35190,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34456,
											"end": 35271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47196,
											"end": 47200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47196,
											"end": 47200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47267,
											"end": 47271,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 47267,
											"end": 47271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47273,
											"end": 47280,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47273,
											"end": 47280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47282,
											"end": 47287,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47282,
											"end": 47287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47447,
											"end": 47460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47447,
											"end": 47460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47632,
											"end": 47638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47626,
											"end": 47639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47613,
											"end": 47615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47609,
											"end": 47624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47602,
											"end": 47640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47334,
											"end": 47389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47334,
											"end": 47389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47334,
											"end": 47389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5187,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5187,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5256,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5460,
											"end": 5470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5187,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5531,
											"end": 5536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5720,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5746,
											"end": 5747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 5812,
											"end": 5814,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5804,
											"end": 5809,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5793,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5817,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 5778,
											"end": 5817,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5840,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1552,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1751,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1846,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1972,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3110,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3369,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3686,
											"end": 4323,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3686,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4136,
											"end": 4149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4197,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4158,
											"end": 4215,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4158,
											"end": 4215,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4158,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "173539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4304,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4317,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 4323,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4536,
											"end": 5024,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4536,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4805,
											"end": 4820,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4820,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4872,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4916,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 4955,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4947,
											"end": 4949,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4973,
											"end": 5018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4973,
											"end": 5018,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4973,
											"end": 5018,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4973,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 5018,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 5024,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4536,
											"end": 5024,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5221,
											"end": 5440,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5221,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5390,
											"end": 5434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5627,
											"end": 5755,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5627,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5700,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5685,
											"end": 5724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5760,
											"end": 5880,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5760,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5816,
											"end": 5851,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5874,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5880,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5885,
											"end": 6010,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5885,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5955,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5944,
											"end": 5978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5995,
											"end": 6004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 6010,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6015,
											"end": 6273,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6015,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6118,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 6179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 6179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 6179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6161,
											"end": 6200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6126,
											"end": 6136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6097,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6234,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6235,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6219,
											"end": 6267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6263,
											"end": 6264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6245,
											"end": 6261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6278,
											"end": 6658,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6278,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6421,
											"end": 6482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6479,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6467,
											"end": 6473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6482,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6421,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6531,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6532,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6491,
											"end": 6652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6565,
											"end": 6585,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6613,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6599,
											"end": 6614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6634,
											"end": 6635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6652,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6491,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6663,
											"end": 6798,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6663,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 6740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6720,
											"end": 6763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6790,
											"end": 6791,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6798,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6803,
											"end": 6915,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6803,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 6836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6851,
											"end": 6886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6900,
											"end": 6909,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6915,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6920,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6920,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6976,
											"end": 6979,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6972,
											"end": 6992,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7016,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7002,
											"end": 7017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7040,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7041,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7179,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7052,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7123,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7108,
											"end": 7111,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7104,
											"end": 7124,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7148,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7134,
											"end": 7149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7172,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7165,
											"end": 7166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7311,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7184,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7240,
											"end": 7243,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7280,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7266,
											"end": 7281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7304,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7443,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7316,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7387,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7372,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7368,
											"end": 7388,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7412,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7405,
											"end": 7406,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7398,
											"end": 7413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7429,
											"end": 7430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7437,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7522,
											"end": 7554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7555,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7502,
											"end": 7573,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7573,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7502,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 947,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 949,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 953,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 958,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)936_storage)"
							},
							{
								"astId": 963,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(AddressData)945_storage)"
							},
							{
								"astId": 967,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 973,
								"contract": "StonersTown Contract/STW.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)945_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)945_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)936_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)936_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)945_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.AddressData",
								"members": [
									{
										"astId": 938,
										"contract": "StonersTown Contract/STW.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 940,
										"contract": "StonersTown Contract/STW.sol:ERC721A",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 942,
										"contract": "StonersTown Contract/STW.sol:ERC721A",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 944,
										"contract": "StonersTown Contract/STW.sol:ERC721A",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)936_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenOwnership",
								"members": [
									{
										"astId": 931,
										"contract": "StonersTown Contract/STW.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 933,
										"contract": "StonersTown Contract/STW.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 935,
										"contract": "StonersTown Contract/STW.sol:ERC721A",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 268,
								"contract": "StonersTown Contract/STW.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "StonersTown Contract/STW.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StonersTownWtf": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "baseUri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "freeMintAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxMintPerTx",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isSaleActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "freeMintIsAllowedUntil",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "IS_SALE_ACTIVE",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "METADATA_FROZEN",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "budPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freeBudAllowedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freeBudPerWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freezeMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxSupply",
									"type": "uint256"
								}
							],
							"name": "lowerMaxSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxBudPerTrans",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxbuds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintAmount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_mintAmount",
									"type": "uint256"
								}
							],
							"name": "mintOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "customBaseURI_",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "freeMintAllowance",
									"type": "uint256"
								}
							],
							"name": "setFreeMintAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "freeMintIsAllowedUntil",
									"type": "uint256"
								}
							],
							"name": "setFreeMintAllowedUntil",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxMintPerTx",
									"type": "uint256"
								}
							],
							"name": "setMaxMintPerTx",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "customPrice",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "saleIsActive",
									"type": "bool"
								}
							],
							"name": "setSaleActive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}.Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StonersTown Contract/STW.sol\":49335:53467  contract StonersTownWtf is ERC721A, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"StonersTown Contract/STW.sol\":49758:50291  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"StonersTown Contract/STW.sol\":31037:31191  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0e\n  dup2\n  mstore\n  shl(0x91, 0x29ba37b732b939aa37bbb72bba33)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x03\n  dup5\n  mstore\n  shl(0xe8, 0x535457)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"StonersTown Contract/STW.sol\":31103:31116  _name = name_ */\n  dup2\n  mload\n    /* \"StonersTown Contract/STW.sol\":31037:31191  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"StonersTown Contract/STW.sol\":31103:31116  _name = name_ */\n  tag_9\n  swap2\n    /* \"StonersTown Contract/STW.sol\":31103:31108  _name */\n  0x02\n  swap2\n    /* \"StonersTown Contract/STW.sol\":31103:31116  _name = name_ */\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"StonersTown Contract/STW.sol\":31126:31143  _symbol = symbol_ */\n  dup1\n  mload\n  tag_11\n  swap1\n    /* \"StonersTown Contract/STW.sol\":31126:31133  _symbol */\n  0x03\n  swap1\n    /* \"StonersTown Contract/STW.sol\":31126:31143  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n  0x01\n    /* \"StonersTown Contract/STW.sol\":31153:31166  _currentIndex */\n  0x00\n    /* \"StonersTown Contract/STW.sol\":31153:31184  _currentIndex = _startTokenId() */\n  sstore\n  pop\n    /* \"StonersTown Contract/STW.sol\":8670:8702  _transferOwnership(_msgSender()) */\n  tag_15\n    /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n  caller\n    /* \"StonersTown Contract/STW.sol\":8670:8688  _transferOwnership */\n  tag_18\n    /* \"StonersTown Contract/STW.sol\":8670:8702  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_15:\n    /* \"StonersTown Contract/STW.sol\":3878:3879  1 */\n  0x01\n    /* \"StonersTown Contract/STW.sol\":3983:3990  _status */\n  0x09\n    /* \"StonersTown Contract/STW.sol\":3983:4005  _status = _NOT_ENTERED */\n  sstore\n    /* \"StonersTown Contract/STW.sol\":50032:50040  budPrice */\n  0x0a\n    /* \"StonersTown Contract/STW.sol\":50032:50048  budPrice = price */\n  dup8\n  swap1\n  sstore\n    /* \"StonersTown Contract/STW.sol\":50058:50065  maxbuds */\n  0x0b\n    /* \"StonersTown Contract/STW.sol\":50058:50077  maxbuds = maxSupply */\n  dup7\n  swap1\n  sstore\n    /* \"StonersTown Contract/STW.sol\":50087:50106  weedStore = baseUri */\n  dup5\n  mload\n  tag_21\n  swap1\n    /* \"StonersTown Contract/STW.sol\":50087:50096  weedStore */\n  0x0c\n  swap1\n    /* \"StonersTown Contract/STW.sol\":50087:50106  weedStore = baseUri */\n  0x20\n  dup9\n  add\n  swap1\n  tag_10\n  jump\t// in\ntag_21:\n  pop\n    /* \"StonersTown Contract/STW.sol\":50116:50132  freeBudPerWallet */\n  0x0d\n    /* \"StonersTown Contract/STW.sol\":50116:50152  freeBudPerWallet = freeMintAllowance */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"StonersTown Contract/STW.sol\":50162:50176  maxBudPerTrans */\n  0x0e\n    /* \"StonersTown Contract/STW.sol\":50162:50191  maxBudPerTrans = maxMintPerTx */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"StonersTown Contract/STW.sol\":50201:50215  IS_SALE_ACTIVE */\n  0x0f\n    /* \"StonersTown Contract/STW.sol\":50201:50230  IS_SALE_ACTIVE = isSaleActive */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap2\n  iszero\n  iszero\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"StonersTown Contract/STW.sol\":50240:50259  freeBudAllowedUntil */\n  0x10\n    /* \"StonersTown Contract/STW.sol\":50240:50284  freeBudAllowedUntil = freeMintIsAllowedUntil */\n  sstore\n  pop\n    /* \"StonersTown Contract/STW.sol\":49335:53467  contract StonersTownWtf is ERC721A, Ownable, ReentrancyGuard {... */\n  tag_37\n  swap2\n  pop\n  pop\n  jump\n    /* \"StonersTown Contract/STW.sol\":10019:10206  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"StonersTown Contract/STW.sol\":10111:10117  _owner */\n  0x08\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"StonersTown Contract/STW.sol\":10127:10144  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"StonersTown Contract/STW.sol\":10159:10199  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"StonersTown Contract/STW.sol\":10111:10117  _owner */\n  swap2\n  and\n  swap2\n    /* \"StonersTown Contract/STW.sol\":10127:10144  _owner = newOwner */\n  swap1\n    /* \"StonersTown Contract/STW.sol\":10111:10117  _owner */\n  dup3\n  swap1\n    /* \"StonersTown Contract/STW.sol\":10159:10199  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"StonersTown Contract/STW.sol\":10092:10108  address oldOwner */\n  0x00\n  swap1\n    /* \"StonersTown Contract/STW.sol\":10159:10199  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"StonersTown Contract/STW.sol\":10082:10206  {... */\n  pop\n    /* \"StonersTown Contract/STW.sol\":10019:10206  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"StonersTown Contract/STW.sol\":49335:53467  contract StonersTownWtf is ERC721A, Ownable, ReentrancyGuard {... */\ntag_10:\n  dup3\n  dup1\n  sload\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_29\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_32)\ntag_29:\n  dup3\n  0x1f\n  lt\n  tag_30\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_32)\ntag_30:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_32\n  jumpi\n  swap2\n  dup3\n  add\ntag_31:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_32\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_31)\ntag_32:\n  pop\n  tag_33\n  swap3\n  swap2\n  pop\n  tag_34\n  jump\t// in\ntag_33:\n  pop\n  swap1\n  jump\t// out\ntag_34:\ntag_35:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_33\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_35)\n    /* \"#utility.yul\":14:178   */\ntag_38:\n    /* \"#utility.yul\":90:103   */\n  dup1\n  mload\n    /* \"#utility.yul\":139:152   */\n  dup1\n  iszero\n    /* \"#utility.yul\":132:153   */\n  iszero\n    /* \"#utility.yul\":122:154   */\n  dup2\n  eq\n    /* \"#utility.yul\":112:172   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":168:169   */\n  0x00\n    /* \"#utility.yul\":165:166   */\n  dup1\n    /* \"#utility.yul\":158:170   */\n  revert\n    /* \"#utility.yul\":112:172   */\ntag_40:\n    /* \"#utility.yul\":14:178   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":183:1658   */\ntag_3:\n    /* \"#utility.yul\":314:320   */\n  0x00\n    /* \"#utility.yul\":322:328   */\n  dup1\n    /* \"#utility.yul\":330:336   */\n  0x00\n    /* \"#utility.yul\":338:344   */\n  dup1\n    /* \"#utility.yul\":346:352   */\n  0x00\n    /* \"#utility.yul\":354:360   */\n  dup1\n    /* \"#utility.yul\":362:368   */\n  0x00\n    /* \"#utility.yul\":415:418   */\n  0xe0\n    /* \"#utility.yul\":403:412   */\n  dup9\n    /* \"#utility.yul\":394:401   */\n  dup11\n    /* \"#utility.yul\":390:413   */\n  sub\n    /* \"#utility.yul\":386:419   */\n  slt\n    /* \"#utility.yul\":383:436   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":432:433   */\n  0x00\n    /* \"#utility.yul\":429:430   */\n  dup1\n    /* \"#utility.yul\":422:434   */\n  revert\n    /* \"#utility.yul\":383:436   */\ntag_42:\n    /* \"#utility.yul\":455:471   */\n  dup8\n  mload\n    /* \"#utility.yul\":490:492   */\n  0x20\n    /* \"#utility.yul\":517:535   */\n  dup1\n  dup11\n  add\n    /* \"#utility.yul\":511:536   */\n  mload\n    /* \"#utility.yul\":580:582   */\n  0x40\n    /* \"#utility.yul\":565:583   */\n  dup12\n  add\n    /* \"#utility.yul\":559:584   */\n  mload\n    /* \"#utility.yul\":455:471   */\n  swap3\n  swap10\n  pop\n    /* \"#utility.yul\":511:536   */\n  swap8\n  pop\n    /* \"#utility.yul\":490:492   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":633:647   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":630:664   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":660:661   */\n  0x00\n    /* \"#utility.yul\":657:658   */\n  dup1\n    /* \"#utility.yul\":650:662   */\n  revert\n    /* \"#utility.yul\":630:664   */\ntag_43:\n    /* \"#utility.yul\":698:704   */\n  dup2\n    /* \"#utility.yul\":687:696   */\n  dup12\n    /* \"#utility.yul\":683:705   */\n  add\n    /* \"#utility.yul\":673:705   */\n  swap2\n  pop\n    /* \"#utility.yul\":743:750   */\n  dup12\n    /* \"#utility.yul\":736:740   */\n  0x1f\n    /* \"#utility.yul\":732:734   */\n  dup4\n    /* \"#utility.yul\":728:741   */\n  add\n    /* \"#utility.yul\":724:751   */\n  slt\n    /* \"#utility.yul\":714:769   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":765:766   */\n  0x00\n    /* \"#utility.yul\":762:763   */\n  dup1\n    /* \"#utility.yul\":755:767   */\n  revert\n    /* \"#utility.yul\":714:769   */\ntag_44:\n    /* \"#utility.yul\":794:796   */\n  dup2\n    /* \"#utility.yul\":788:797   */\n  mload\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":812:814   */\n  dup2\n    /* \"#utility.yul\":809:819   */\n  gt\n    /* \"#utility.yul\":806:842   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":822:840   */\n  tag_46\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":897:899   */\n  0x40\n    /* \"#utility.yul\":891:900   */\n  mload\n    /* \"#utility.yul\":865:867   */\n  0x1f\n    /* \"#utility.yul\":951:964   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":947:969   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":971:973   */\n  0x3f\n    /* \"#utility.yul\":943:974   */\n  add\n    /* \"#utility.yul\":939:979   */\n  and\n    /* \"#utility.yul\":927:980   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":995:1013   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1015:1037   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":992:1038   */\n  or\n    /* \"#utility.yul\":989:1061   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1041:1059   */\n  tag_49\n  tag_47\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1081:1091   */\n  dup2\n    /* \"#utility.yul\":1077:1079   */\n  0x40\n    /* \"#utility.yul\":1070:1092   */\n  mstore\n    /* \"#utility.yul\":1116:1118   */\n  dup3\n    /* \"#utility.yul\":1108:1114   */\n  dup2\n    /* \"#utility.yul\":1101:1119   */\n  mstore\n    /* \"#utility.yul\":1156:1163   */\n  dup15\n    /* \"#utility.yul\":1151:1153   */\n  dup7\n    /* \"#utility.yul\":1146:1148   */\n  dup5\n    /* \"#utility.yul\":1142:1144   */\n  dup8\n    /* \"#utility.yul\":1138:1149   */\n  add\n    /* \"#utility.yul\":1134:1154   */\n  add\n    /* \"#utility.yul\":1131:1164   */\n  gt\n    /* \"#utility.yul\":1128:1181   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1177:1178   */\n  0x00\n    /* \"#utility.yul\":1174:1175   */\n  dup1\n    /* \"#utility.yul\":1167:1179   */\n  revert\n    /* \"#utility.yul\":1128:1181   */\ntag_50:\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1190:1200   */\n  swap4\n  pop\n    /* \"#utility.yul\":1209:1338   */\ntag_51:\n    /* \"#utility.yul\":1223:1225   */\n  dup3\n    /* \"#utility.yul\":1220:1221   */\n  dup5\n    /* \"#utility.yul\":1217:1226   */\n  lt\n    /* \"#utility.yul\":1209:1338   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1311:1321   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1307:1326   */\n  dup7\n  add\n    /* \"#utility.yul\":1301:1327   */\n  mload\n    /* \"#utility.yul\":1280:1294   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1276:1299   */\n  dup8\n  add\n    /* \"#utility.yul\":1269:1328   */\n  mstore\n    /* \"#utility.yul\":1234:1244   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1209:1338   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":1356:1358   */\n  dup3\n    /* \"#utility.yul\":1353:1354   */\n  dup5\n    /* \"#utility.yul\":1350:1359   */\n  gt\n    /* \"#utility.yul\":1347:1427   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1415:1416   */\n  0x00\n    /* \"#utility.yul\":1410:1412   */\n  dup7\n    /* \"#utility.yul\":1405:1407   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup4\n    /* \"#utility.yul\":1393:1408   */\n  add\n    /* \"#utility.yul\":1389:1413   */\n  add\n    /* \"#utility.yul\":1382:1417   */\n  mstore\n    /* \"#utility.yul\":1347:1427   */\ntag_54:\n    /* \"#utility.yul\":1446:1452   */\n  dup1\n    /* \"#utility.yul\":1436:1452   */\n  swap11\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1492:1494   */\n  0x60\n    /* \"#utility.yul\":1481:1490   */\n  dup9\n    /* \"#utility.yul\":1477:1495   */\n  add\n    /* \"#utility.yul\":1471:1496   */\n  mload\n    /* \"#utility.yul\":1461:1496   */\n  swap4\n  pop\n    /* \"#utility.yul\":1536:1539   */\n  0x80\n    /* \"#utility.yul\":1525:1534   */\n  dup9\n    /* \"#utility.yul\":1521:1540   */\n  add\n    /* \"#utility.yul\":1515:1541   */\n  mload\n    /* \"#utility.yul\":1505:1541   */\n  swap3\n  pop\n    /* \"#utility.yul\":1560:1607   */\n  tag_55\n    /* \"#utility.yul\":1602:1605   */\n  0xa0\n    /* \"#utility.yul\":1591:1600   */\n  dup10\n    /* \"#utility.yul\":1587:1606   */\n  add\n    /* \"#utility.yul\":1560:1607   */\n  tag_38\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1550:1607   */\n  swap2\n  pop\n    /* \"#utility.yul\":1647:1650   */\n  0xc0\n    /* \"#utility.yul\":1636:1645   */\n  dup9\n    /* \"#utility.yul\":1632:1651   */\n  add\n    /* \"#utility.yul\":1626:1652   */\n  mload\n    /* \"#utility.yul\":1616:1652   */\n  swap1\n  pop\n    /* \"#utility.yul\":183:1658   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1663:2043   */\ntag_27:\n    /* \"#utility.yul\":1742:1743   */\n  0x01\n    /* \"#utility.yul\":1738:1750   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1785:1797   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1806:1867   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1860:1864   */\n  0x7f\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1848:1865   */\n  and\n    /* \"#utility.yul\":1838:1865   */\n  swap2\n  pop\n    /* \"#utility.yul\":1806:1867   */\ntag_57:\n    /* \"#utility.yul\":1913:1915   */\n  0x20\n    /* \"#utility.yul\":1905:1911   */\n  dup3\n    /* \"#utility.yul\":1902:1916   */\n  lt\n    /* \"#utility.yul\":1882:1900   */\n  dup2\n    /* \"#utility.yul\":1879:1917   */\n  eq\n    /* \"#utility.yul\":1876:2037   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1959:1969   */\n  0x4e487b71\n    /* \"#utility.yul\":1954:1957   */\n  0xe0\n    /* \"#utility.yul\":1950:1970   */\n  shl\n    /* \"#utility.yul\":1947:1948   */\n  0x00\n    /* \"#utility.yul\":1940:1971   */\n  mstore\n    /* \"#utility.yul\":1994:1998   */\n  0x22\n    /* \"#utility.yul\":1991:1992   */\n  0x04\n    /* \"#utility.yul\":1984:1999   */\n  mstore\n    /* \"#utility.yul\":2022:2026   */\n  0x24\n    /* \"#utility.yul\":2019:2020   */\n  0x00\n    /* \"#utility.yul\":2012:2027   */\n  revert\n    /* \"#utility.yul\":1876:2037   */\ntag_58:\n  pop\n    /* \"#utility.yul\":1663:2043   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2048:2175   */\ntag_47:\n    /* \"#utility.yul\":2109:2119   */\n  0x4e487b71\n    /* \"#utility.yul\":2104:2107   */\n  0xe0\n    /* \"#utility.yul\":2100:2120   */\n  shl\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2121   */\n  mstore\n    /* \"#utility.yul\":2140:2144   */\n  0x41\n    /* \"#utility.yul\":2137:2138   */\n  0x04\n    /* \"#utility.yul\":2130:2145   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x24\n    /* \"#utility.yul\":2161:2162   */\n  0x00\n    /* \"#utility.yul\":2154:2169   */\n  revert\n    /* \"#utility.yul\":2048:2175   */\ntag_37:\n    /* \"StonersTown Contract/STW.sol\":49335:53467  contract StonersTownWtf is ERC721A, Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"StonersTown Contract/STW.sol\":49335:53467  contract StonersTownWtf is ERC721A, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x841718a6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xc4e9374d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xe1b5a272\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xe1b5a272\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xeae9c95d\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfdb4953a\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xc4e9374d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc8eca562\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd111515d\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x95d89b41\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb0551ac4\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x841718a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8b85e43d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91b7f5ed\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x408cbf94\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x616cdb1e\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x616cdb1e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x76d02b71\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x408cbf94\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5381f6e2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x18160ddd\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x28cb250f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":6280:6294   */\n      swap1\n      iszero\n        /* \"#utility.yul\":6273:6295   */\n      iszero\n        /* \"#utility.yul\":6255:6296   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6243:6245   */\n      0x20\n        /* \"#utility.yul\":6228:6246   */\n      add\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StonersTown Contract/STW.sol\":35576:35674  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5578:5610   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5560:5611   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5548:5550   */\n      0x20\n        /* \"#utility.yul\":5533:5551   */\n      add\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      tag_49\n        /* \"#utility.yul\":5414:5617   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":36618:36980  function approve(address to, uint256 tokenId) public override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"StonersTown Contract/STW.sol\":31551:31848  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n        /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":31801:31813  _burnCounter */\n      sload\n        /* \"StonersTown Contract/STW.sol\":31595:31602  uint256 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":31785:31798  _currentIndex */\n      sload\n        /* \"StonersTown Contract/STW.sol\":31785:31813  _currentIndex - _burnCounter */\n      sub\n      not(0x00)\n        /* \"StonersTown Contract/STW.sol\":31785:31831  _currentIndex - _burnCounter - _startTokenId() */\n      add\n        /* \"StonersTown Contract/STW.sol\":31551:31848  function totalSupply() public view returns (uint256) {... */\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":10680:10705   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10668:10670   */\n      0x20\n        /* \"#utility.yul\":10653:10671   */\n      add\n        /* \"StonersTown Contract/STW.sol\":31551:31848  function totalSupply() public view returns (uint256) {... */\n      tag_49\n        /* \"#utility.yul\":10534:10711   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":37872:38036  function transferFrom(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_64\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":49558:49587  uint256 public maxBudPerTrans */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_69\n      sload(0x0e)\n      dup2\n      jump\n        /* \"StonersTown Contract/STW.sol\":53298:53465  function withdraw() public onlyOwner nonReentrant {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_64\n      tag_84\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":53002:53172  function mintOwner(address _to, uint256 _mintAmount)... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_64\n      tag_87\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":38102:38281  function safeTransferFrom(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_64\n      tag_91\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":49521:49552  uint256 public freeBudPerWallet */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_69\n      sload(0x0d)\n      dup2\n      jump\n        /* \"StonersTown Contract/STW.sol\":50954:51121  function setBaseURI(string memory customBaseURI_) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_64\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":51282:51394  function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_64\n      tag_104\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":35392:35514  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_57\n      tag_108\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":32639:32842  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_69\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":9417:9518  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_64\n      tag_119\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":49593:49619  bool public IS_SALE_ACTIVE */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      sload(0x0f)\n      tag_45\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"StonersTown Contract/STW.sol\":51400:51507  function setSaleActive(bool saleIsActive) external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_64\n      tag_126\n      calldatasize\n      0x04\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":51513:51678  function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil)... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_64\n      tag_131\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":8785:8870  function owner() public view virtual returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":8785:8870  function owner() public view virtual returns (address) {... */\n      jump(tag_57)\n        /* \"StonersTown Contract/STW.sol\":50600:50697  function setPrice(uint256 customPrice) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_64\n      tag_139\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":35738:35840  function symbol() public view virtual override returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_52\n      tag_143\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":52101:52996  function mint(uint256 _mintAmount)... */\n    tag_24:\n      tag_64\n      tag_146\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":37308:37582  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_64\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":51127:51276  function setFreeMintAllowance(uint256 freeMintAllowance)... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_64\n      tag_155\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":38347:38706  function safeTransferFrom(... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_64\n      tag_159\n      calldatasize\n      0x04\n      tag_160\n      jump\t// in\n    tag_159:\n      tag_161\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":50703:50948  function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_64\n      tag_164\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":35906:36228  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_52\n      tag_168\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":49434:49457  uint256 public budPrice */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_69\n      sload(0x0a)\n      dup2\n      jump\n        /* \"StonersTown Contract/STW.sol\":51684:51768  function freezeMetadata() external onlyOwner {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_64\n      tag_177\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":49625:49659  uint256 public freeBudAllowedUntil */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_69\n      sload(0x10)\n      dup2\n      jump\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_45\n      tag_184\n      calldatasize\n      0x04\n      tag_185\n      jump\t// in\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":37768:37793  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"StonersTown Contract/STW.sol\":37745:37749  bool */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":37768:37793  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37768:37786  _operatorApprovals */\n      0x07\n        /* \"StonersTown Contract/STW.sol\":37768:37793  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":37768:37803  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"StonersTown Contract/STW.sol\":49463:49485  uint256 public maxbuds */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_69\n      sload(0x0b)\n      dup2\n      jump\n        /* \"StonersTown Contract/STW.sol\":9667:9865  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_64\n      tag_194\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_194:\n      tag_195\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":49665:49692  bool public METADATA_FROZEN */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      sload(0x11)\n      tag_45\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_48:\n        /* \"StonersTown Contract/STW.sol\":32382:32386  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":32417:32457  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"StonersTown Contract/STW.sol\":32417:32521  interfaceId == type(IERC721).interfaceId ||... */\n      tag_201\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":32473:32521  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"StonersTown Contract/STW.sol\":32417:32521  interfaceId == type(IERC721).interfaceId ||... */\n    tag_201:\n        /* \"StonersTown Contract/STW.sol\":32417:32573  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_203\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":21325:21365  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":32537:32573  super.supportsInterface(interfaceId) */\n    tag_203:\n        /* \"StonersTown Contract/STW.sol\":32398:32573  return... */\n      swap3\n        /* \"StonersTown Contract/STW.sol\":32280:32580  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35576:35674  function name() public view virtual override returns (string memory) {... */\n    tag_53:\n        /* \"StonersTown Contract/STW.sol\":35630:35643  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":35662:35667  _name */\n      0x02\n        /* \"StonersTown Contract/STW.sol\":35655:35667  return _name */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_207\n      jump\t// in\n    tag_208:\n      dup1\n      iszero\n      tag_209\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_210\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_209)\n    tag_210:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_211:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_211\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":35576:35674  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_60:\n        /* \"StonersTown Contract/STW.sol\":37109:37116  address */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":37133:37149  _exists(tokenId) */\n      tag_213\n        /* \"StonersTown Contract/STW.sol\":37141:37148  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":37133:37140  _exists */\n      tag_214\n        /* \"StonersTown Contract/STW.sol\":37133:37149  _exists(tokenId) */\n      jump\t// in\n    tag_213:\n        /* \"StonersTown Contract/STW.sol\":37128:37192  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_215\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":37158:37192  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":37128:37192  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_215:\n      pop\n        /* \"StonersTown Contract/STW.sol\":37210:37234  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37210:37225  _tokenApprovals */\n      0x06\n        /* \"StonersTown Contract/STW.sol\":37210:37234  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":37041:37241  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":36618:36980  function approve(address to, uint256 tokenId) public override {... */\n    tag_67:\n        /* \"StonersTown Contract/STW.sol\":36690:36703  address owner */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":36706:36730  ERC721A.ownerOf(tokenId) */\n      tag_217\n        /* \"StonersTown Contract/STW.sol\":36722:36729  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":36706:36721  ERC721A.ownerOf */\n      tag_109\n        /* \"StonersTown Contract/STW.sol\":36706:36730  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"StonersTown Contract/STW.sol\":36690:36730  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":36750:36755  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":36744:36755  to == owner */\n      and\n        /* \"StonersTown Contract/STW.sol\":36744:36746  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":36744:36755  to == owner */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":36740:36788  if (to == owner) revert ApprovalToCurrentOwner() */\n      iszero\n      tag_218\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":36764:36788  ApprovalToCurrentOwner() */\n      mload(0x40)\n      shl(0xe2, 0x250fdee3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":36740:36788  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_218:\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":36803:36824  _msgSender() != owner */\n      dup3\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"StonersTown Contract/STW.sol\":36803:36866  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n      tag_221\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":36829:36866  isApprovedForAll(owner, _msgSender()) */\n      tag_222\n        /* \"StonersTown Contract/STW.sol\":36846:36851  owner */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_184\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":36829:36866  isApprovedForAll(owner, _msgSender()) */\n    tag_222:\n        /* \"StonersTown Contract/STW.sol\":36828:36866  !isApprovedForAll(owner, _msgSender()) */\n      iszero\n        /* \"StonersTown Contract/STW.sol\":36803:36866  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n    tag_221:\n        /* \"StonersTown Contract/STW.sol\":36799:36935  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":36889:36924  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":36799:36935  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {... */\n    tag_224:\n        /* \"StonersTown Contract/STW.sol\":36945:36973  _approve(to, tokenId, owner) */\n      tag_225\n        /* \"StonersTown Contract/STW.sol\":36954:36956  to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":36958:36965  tokenId */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":36967:36972  owner */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":36945:36953  _approve */\n      tag_226\n        /* \"StonersTown Contract/STW.sol\":36945:36973  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_225:\n        /* \"StonersTown Contract/STW.sol\":36680:36980  {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":36618:36980  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":37872:38036  function transferFrom(... */\n    tag_77:\n        /* \"StonersTown Contract/STW.sol\":38001:38029  _transfer(from, to, tokenId) */\n      tag_225\n        /* \"StonersTown Contract/STW.sol\":38011:38015  from */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38017:38019  to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38021:38028  tokenId */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38001:38010  _transfer */\n      tag_232\n        /* \"StonersTown Contract/STW.sol\":38001:38029  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":53298:53465  function withdraw() public onlyOwner nonReentrant {... */\n    tag_84:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"StonersTown Contract/STW.sol\":3921:3922  2 */\n      0x02\n        /* \"StonersTown Contract/STW.sol\":4502:4509  _status */\n      sload(0x09)\n        /* \"StonersTown Contract/STW.sol\":4502:4521  _status != _ENTERED */\n      eq\n      iszero\n        /* \"StonersTown Contract/STW.sol\":4494:4557  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10028:10030   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":4494:4557  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10010:10031   */\n      mstore\n        /* \"#utility.yul\":10067:10069   */\n      0x1f\n        /* \"#utility.yul\":10047:10065   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10040:10070   */\n      mstore\n        /* \"#utility.yul\":10106:10139   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10086:10104   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10079:10140   */\n      mstore\n        /* \"#utility.yul\":10157:10175   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":4494:4557  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_237\n        /* \"#utility.yul\":9826:10181   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":4494:4557  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_240:\n        /* \"StonersTown Contract/STW.sol\":3921:3922  2 */\n      0x02\n        /* \"StonersTown Contract/STW.sol\":4632:4639  _status */\n      0x09\n        /* \"StonersTown Contract/STW.sol\":4632:4650  _status = _ENTERED */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":53376:53397  address(this).balance */\n      selfbalance\n        /* \"StonersTown Contract/STW.sol\":53407:53458  Address.sendValue(payable(payoutAddress1), balance) */\n      tag_244\n        /* \"StonersTown Contract/STW.sol\":53248:53290  0x2e45A3053639CE97f43b4761CA9332Ea7B5aDB8a */\n      0x2e45a3053639ce97f43b4761ca9332ea7b5adb8a\n        /* \"StonersTown Contract/STW.sol\":53376:53397  address(this).balance */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":53407:53424  Address.sendValue */\n      tag_245\n        /* \"StonersTown Contract/STW.sol\":53407:53458  Address.sendValue(payable(payoutAddress1), balance) */\n      jump\t// in\n    tag_244:\n      pop\n        /* \"StonersTown Contract/STW.sol\":3878:3879  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":4805:4812  _status */\n      0x09\n        /* \"StonersTown Contract/STW.sol\":4805:4827  _status = _NOT_ENTERED */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":53298:53465  function withdraw() public onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":53002:53172  function mintOwner(address _to, uint256 _mintAmount)... */\n    tag_88:\n        /* \"StonersTown Contract/STW.sol\":53093:53104  _mintAmount */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":51882:51883  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":51868:51879  _mintAmount */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":51868:51883  _mintAmount > 0 */\n      gt\n        /* \"StonersTown Contract/STW.sol\":51868:51916  _mintAmount > 0 && _mintAmount <= maxBudPerTrans */\n      dup1\n      iszero\n      tag_247\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":51902:51916  maxBudPerTrans */\n      sload(0x0e)\n        /* \"StonersTown Contract/STW.sol\":51887:51898  _mintAmount */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":51887:51916  _mintAmount <= maxBudPerTrans */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":51868:51916  _mintAmount > 0 && _mintAmount <= maxBudPerTrans */\n    tag_247:\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7140:7142   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7122:7143   */\n      mstore\n        /* \"#utility.yul\":7179:7181   */\n      0x14\n        /* \"#utility.yul\":7159:7177   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7152:7182   */\n      mstore\n      shl(0x60, 0x496e76616c6964206d696e7420616d6f756e7421)\n        /* \"#utility.yul\":7198:7216   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7191:7241   */\n      mstore\n        /* \"#utility.yul\":7258:7276   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n      tag_237\n        /* \"#utility.yul\":6938:7282   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n    tag_248:\n        /* \"StonersTown Contract/STW.sol\":52024:52031  maxbuds */\n      sload(0x0b)\n        /* \"StonersTown Contract/STW.sol\":52009:52020  _mintAmount */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":51993:52006  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":51993:52020  _currentIndex + _mintAmount */\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"StonersTown Contract/STW.sol\":51993:52031  _currentIndex + _mintAmount <= maxbuds */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9679:9681   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9661:9682   */\n      mstore\n        /* \"#utility.yul\":9718:9720   */\n      0x14\n        /* \"#utility.yul\":9698:9716   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9691:9721   */\n      mstore\n      shl(0x60, 0x4d617820737570706c7920657863656564656421)\n        /* \"#utility.yul\":9737:9755   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9730:9780   */\n      mstore\n        /* \"#utility.yul\":9797:9815   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n      tag_237\n        /* \"#utility.yul\":9477:9821   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n    tag_253:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_259:\n        /* \"StonersTown Contract/STW.sol\":53138:53165  _safeMint(_to, _mintAmount) */\n      tag_225\n        /* \"StonersTown Contract/STW.sol\":53148:53151  _to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":53153:53164  _mintAmount */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":53138:53147  _safeMint */\n      tag_263\n        /* \"StonersTown Contract/STW.sol\":53138:53165  _safeMint(_to, _mintAmount) */\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":38102:38281  function safeTransferFrom(... */\n    tag_92:\n        /* \"StonersTown Contract/STW.sol\":38235:38274  safeTransferFrom(from, to, tokenId, '') */\n      tag_225\n        /* \"StonersTown Contract/STW.sol\":38252:38256  from */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38258:38260  to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38262:38269  tokenId */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":38235:38274  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"StonersTown Contract/STW.sol\":38235:38251  safeTransferFrom */\n      tag_161\n        /* \"StonersTown Contract/STW.sol\":38235:38274  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":50954:51121  function setBaseURI(string memory customBaseURI_) external onlyOwner {... */\n    tag_101:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_269:\n        /* \"StonersTown Contract/STW.sol\":51042:51057  METADATA_FROZEN */\n      and(0xff, sload(0x11))\n        /* \"StonersTown Contract/STW.sol\":51041:51057  !METADATA_FROZEN */\n      iszero\n        /* \"StonersTown Contract/STW.sol\":51033:51078  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9334:9336   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":51033:51078  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9316:9337   */\n      mstore\n        /* \"#utility.yul\":9373:9375   */\n      0x10\n        /* \"#utility.yul\":9353:9371   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9346:9376   */\n      mstore\n      shl(0x80, 0x4d657461646174612066726f7a656e21)\n        /* \"#utility.yul\":9392:9410   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9385:9431   */\n      mstore\n        /* \"#utility.yul\":9448:9466   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":51033:51078  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n      tag_237\n        /* \"#utility.yul\":9132:9472   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":51033:51078  require(!METADATA_FROZEN, \"Metadata frozen!\") */\n    tag_272:\n        /* \"StonersTown Contract/STW.sol\":51088:51114  weedStore = customBaseURI_ */\n      dup1\n      mload\n      tag_275\n      swap1\n        /* \"StonersTown Contract/STW.sol\":51088:51097  weedStore */\n      0x0c\n      swap1\n        /* \"StonersTown Contract/STW.sol\":51088:51114  weedStore = customBaseURI_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      pop\n        /* \"StonersTown Contract/STW.sol\":50954:51121  function setBaseURI(string memory customBaseURI_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":51282:51394  function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {... */\n    tag_105:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_280:\n        /* \"StonersTown Contract/STW.sol\":51358:51372  maxBudPerTrans */\n      0x0e\n        /* \"StonersTown Contract/STW.sol\":51358:51387  maxBudPerTrans = maxMintPerTx */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":51282:51394  function setMaxMintPerTx(uint256 maxMintPerTx) external onlyOwner {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35392:35514  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_109:\n        /* \"StonersTown Contract/STW.sol\":35456:35463  address */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":35482:35502  ownershipOf(tokenId) */\n      tag_284\n        /* \"StonersTown Contract/STW.sol\":35494:35501  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":35482:35493  ownershipOf */\n      tag_285\n        /* \"StonersTown Contract/STW.sol\":35482:35502  ownershipOf(tokenId) */\n      jump\t// in\n    tag_284:\n        /* \"StonersTown Contract/STW.sol\":35482:35507  ownershipOf(tokenId).addr */\n      mload\n      swap3\n        /* \"StonersTown Contract/STW.sol\":35392:35514  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":32639:32842  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_115:\n        /* \"StonersTown Contract/STW.sol\":32703:32710  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":32726:32745  owner == address(0) */\n      dup3\n      and\n        /* \"StonersTown Contract/STW.sol\":32722:32782  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_287\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":32754:32782  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":32722:32782  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_287:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":32807:32826  _addressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":32807:32819  _addressData */\n      0x05\n        /* \"StonersTown Contract/STW.sol\":32807:32826  _addressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":32807:32834  _addressData[owner].balance */\n      sload\n      0xffffffffffffffff\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":32639:32842  function balanceOf(address owner) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":9417:9518  function renounceOwnership() public virtual onlyOwner {... */\n    tag_119:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_291:\n        /* \"StonersTown Contract/STW.sol\":9481:9511  _transferOwnership(address(0)) */\n      tag_294\n        /* \"StonersTown Contract/STW.sol\":9508:9509  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":9481:9499  _transferOwnership */\n      tag_295\n        /* \"StonersTown Contract/STW.sol\":9481:9511  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_294:\n        /* \"StonersTown Contract/STW.sol\":9417:9518  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":51400:51507  function setSaleActive(bool saleIsActive) external onlyOwner {... */\n    tag_128:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_299:\n        /* \"StonersTown Contract/STW.sol\":51471:51485  IS_SALE_ACTIVE */\n      0x0f\n        /* \"StonersTown Contract/STW.sol\":51471:51500  IS_SALE_ACTIVE = saleIsActive */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"StonersTown Contract/STW.sol\":51400:51507  function setSaleActive(bool saleIsActive) external onlyOwner {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":51513:51678  function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil)... */\n    tag_132:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_305:\n        /* \"StonersTown Contract/STW.sol\":51627:51646  freeBudAllowedUntil */\n      0x10\n        /* \"StonersTown Contract/STW.sol\":51627:51671  freeBudAllowedUntil = freeMintIsAllowedUntil */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":51513:51678  function setFreeMintAllowedUntil(uint256 freeMintIsAllowedUntil)... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":50600:50697  function setPrice(uint256 customPrice) external onlyOwner {... */\n    tag_140:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_312:\n        /* \"StonersTown Contract/STW.sol\":50668:50676  budPrice */\n      0x0a\n        /* \"StonersTown Contract/STW.sol\":50668:50690  budPrice = customPrice */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":50600:50697  function setPrice(uint256 customPrice) external onlyOwner {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35738:35840  function symbol() public view virtual override returns (string memory) {... */\n    tag_143:\n        /* \"StonersTown Contract/STW.sol\":35794:35807  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":35826:35833  _symbol */\n      0x03\n        /* \"StonersTown Contract/STW.sol\":35819:35833  return _symbol */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":52101:52996  function mint(uint256 _mintAmount)... */\n    tag_147:\n        /* \"StonersTown Contract/STW.sol\":52190:52201  _mintAmount */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":51882:51883  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":51868:51879  _mintAmount */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":51868:51883  _mintAmount > 0 */\n      gt\n        /* \"StonersTown Contract/STW.sol\":51868:51916  _mintAmount > 0 && _mintAmount <= maxBudPerTrans */\n      dup1\n      iszero\n      tag_322\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":51902:51916  maxBudPerTrans */\n      sload(0x0e)\n        /* \"StonersTown Contract/STW.sol\":51887:51898  _mintAmount */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":51887:51916  _mintAmount <= maxBudPerTrans */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":51868:51916  _mintAmount > 0 && _mintAmount <= maxBudPerTrans */\n    tag_322:\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7140:7142   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7122:7143   */\n      mstore\n        /* \"#utility.yul\":7179:7181   */\n      0x14\n        /* \"#utility.yul\":7159:7177   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7152:7182   */\n      mstore\n      shl(0x60, 0x496e76616c6964206d696e7420616d6f756e7421)\n        /* \"#utility.yul\":7198:7216   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7191:7241   */\n      mstore\n        /* \"#utility.yul\":7258:7276   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n      tag_237\n        /* \"#utility.yul\":6938:7282   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":51847:51962  require(... */\n    tag_323:\n        /* \"StonersTown Contract/STW.sol\":52024:52031  maxbuds */\n      sload(0x0b)\n        /* \"StonersTown Contract/STW.sol\":52009:52020  _mintAmount */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":51993:52006  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":51993:52020  _currentIndex + _mintAmount */\n      tag_325\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_325:\n        /* \"StonersTown Contract/STW.sol\":51993:52031  _currentIndex + _mintAmount <= maxbuds */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9679:9681   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9661:9682   */\n      mstore\n        /* \"#utility.yul\":9718:9720   */\n      0x14\n        /* \"#utility.yul\":9698:9716   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9691:9721   */\n      mstore\n      shl(0x60, 0x4d617820737570706c7920657863656564656421)\n        /* \"#utility.yul\":9737:9755   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9730:9780   */\n      mstore\n        /* \"#utility.yul\":9797:9815   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n      tag_237\n        /* \"#utility.yul\":9477:9821   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":51972:52077  require(... */\n    tag_326:\n        /* \"StonersTown Contract/STW.sol\":52225:52239  IS_SALE_ACTIVE */\n      and(0xff, sload(0x0f))\n        /* \"StonersTown Contract/STW.sol\":52217:52263  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8635:8637   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":52217:52263  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8617:8638   */\n      mstore\n        /* \"#utility.yul\":8674:8676   */\n      0x13\n        /* \"#utility.yul\":8654:8672   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8647:8677   */\n      mstore\n      shl(0x68, 0x53616c65206973206e6f742061637469766521)\n        /* \"#utility.yul\":8693:8711   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8686:8735   */\n      mstore\n        /* \"#utility.yul\":8752:8770   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":52217:52263  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n      tag_237\n        /* \"#utility.yul\":8433:8776   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":52217:52263  require(IS_SALE_ACTIVE, \"Sale is not active!\") */\n    tag_329:\n        /* \"StonersTown Contract/STW.sol\":52274:52287  uint256 price */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":52301:52312  _mintAmount */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":52290:52298  budPrice */\n      sload(0x0a)\n        /* \"StonersTown Contract/STW.sol\":52290:52312  budPrice * _mintAmount */\n      tag_332\n      swap2\n      swap1\n      tag_333\n      jump\t// in\n    tag_332:\n        /* \"StonersTown Contract/STW.sol\":52274:52312  uint256 price = budPrice * _mintAmount */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":52343:52362  freeBudAllowedUntil */\n      sload(0x10)\n        /* \"StonersTown Contract/STW.sol\":52327:52340  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":52327:52362  _currentIndex < freeBudAllowedUntil */\n      lt\n        /* \"StonersTown Contract/STW.sol\":52323:52884  if (_currentIndex < freeBudAllowedUntil) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":52458:52468  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":52378:52403  uint256 remainingFreeMint */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":52441:52469  freeMintCountMap[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":52441:52457  freeMintCountMap */\n      0x12\n        /* \"StonersTown Contract/STW.sol\":52441:52469  freeMintCountMap[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"StonersTown Contract/STW.sol\":52406:52422  freeBudPerWallet */\n      sload(0x0d)\n        /* \"StonersTown Contract/STW.sol\":52406:52469  freeBudPerWallet -... */\n      tag_335\n      swap2\n        /* \"StonersTown Contract/STW.sol\":52441:52469  freeMintCountMap[msg.sender] */\n      swap1\n        /* \"StonersTown Contract/STW.sol\":52406:52469  freeBudPerWallet -... */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"StonersTown Contract/STW.sol\":52378:52469  uint256 remainingFreeMint = freeBudPerWallet -... */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":52487:52508  remainingFreeMint > 0 */\n      dup1\n      iszero\n        /* \"StonersTown Contract/STW.sol\":52483:52874  if (remainingFreeMint > 0) {... */\n      tag_346\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":52547:52564  remainingFreeMint */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":52532:52543  _mintAmount */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":52532:52564  _mintAmount >= remainingFreeMint */\n      lt\n        /* \"StonersTown Contract/STW.sol\":52528:52860  if (_mintAmount >= remainingFreeMint) {... */\n      tag_338\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":52617:52625  budPrice */\n      sload(0x0a)\n        /* \"StonersTown Contract/STW.sol\":52597:52625  remainingFreeMint * budPrice */\n      tag_339\n      swap1\n        /* \"StonersTown Contract/STW.sol\":52597:52614  remainingFreeMint */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":52597:52625  remainingFreeMint * budPrice */\n      tag_333\n      jump\t// in\n    tag_339:\n        /* \"StonersTown Contract/STW.sol\":52588:52625  price -= remainingFreeMint * budPrice */\n      tag_340\n      swap1\n      dup4\n      tag_336\n      jump\t// in\n    tag_340:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":52647:52697  updateFreeMintCount(msg.sender, remainingFreeMint) */\n      tag_341\n        /* \"StonersTown Contract/STW.sol\":52667:52677  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":52679:52696  remainingFreeMint */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":52647:52666  updateFreeMintCount */\n      tag_342\n        /* \"StonersTown Contract/STW.sol\":52647:52697  updateFreeMintCount(msg.sender, remainingFreeMint) */\n      jump\t// in\n    tag_341:\n        /* \"StonersTown Contract/STW.sol\":52528:52860  if (_mintAmount >= remainingFreeMint) {... */\n      jump(tag_346)\n    tag_338:\n        /* \"StonersTown Contract/STW.sol\":52767:52775  budPrice */\n      sload(0x0a)\n        /* \"StonersTown Contract/STW.sol\":52753:52775  _mintAmount * budPrice */\n      tag_344\n      swap1\n        /* \"StonersTown Contract/STW.sol\":52753:52764  _mintAmount */\n      dup6\n        /* \"StonersTown Contract/STW.sol\":52753:52775  _mintAmount * budPrice */\n      tag_333\n      jump\t// in\n    tag_344:\n        /* \"StonersTown Contract/STW.sol\":52744:52775  price -= _mintAmount * budPrice */\n      tag_345\n      swap1\n      dup4\n      tag_336\n      jump\t// in\n    tag_345:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":52797:52841  updateFreeMintCount(msg.sender, _mintAmount) */\n      tag_346\n        /* \"StonersTown Contract/STW.sol\":52817:52827  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":52829:52840  _mintAmount */\n      dup6\n        /* \"StonersTown Contract/STW.sol\":52797:52816  updateFreeMintCount */\n      tag_342\n        /* \"StonersTown Contract/STW.sol\":52797:52841  updateFreeMintCount(msg.sender, _mintAmount) */\n      jump\t// in\n    tag_346:\n        /* \"StonersTown Contract/STW.sol\":52364:52884  {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":52323:52884  if (_currentIndex < freeBudAllowedUntil) {... */\n    tag_334:\n        /* \"StonersTown Contract/STW.sol\":52915:52920  price */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":52902:52911  msg.value */\n      callvalue\n        /* \"StonersTown Contract/STW.sol\":52902:52920  msg.value >= price */\n      lt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":52894:52944  require(msg.value >= price, \"Insufficient funds!\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10388:10390   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":52894:52944  require(msg.value >= price, \"Insufficient funds!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10370:10391   */\n      mstore\n        /* \"#utility.yul\":10427:10429   */\n      0x13\n        /* \"#utility.yul\":10407:10425   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10400:10430   */\n      mstore\n      shl(0x68, 0x496e73756666696369656e742066756e647321)\n        /* \"#utility.yul\":10446:10464   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10439:10488   */\n      mstore\n        /* \"#utility.yul\":10505:10523   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":52894:52944  require(msg.value >= price, \"Insufficient funds!\") */\n      tag_237\n        /* \"#utility.yul\":10186:10529   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":52894:52944  require(msg.value >= price, \"Insufficient funds!\") */\n    tag_347:\n        /* \"StonersTown Contract/STW.sol\":52955:52989  _safeMint(msg.sender, _mintAmount) */\n      tag_225\n        /* \"StonersTown Contract/STW.sol\":52965:52975  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":52977:52988  _mintAmount */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":52955:52964  _safeMint */\n      tag_263\n        /* \"StonersTown Contract/STW.sol\":52955:52989  _safeMint(msg.sender, _mintAmount) */\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":37308:37582  function setApprovalForAll(address operator, bool approved) public override {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":37398:37422  operator == _msgSender() */\n      dup3\n      and\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37398:37422  operator == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":37394:37448  if (operator == _msgSender()) revert ApproveToCaller() */\n      iszero\n      tag_353\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":37431:37448  ApproveToCaller() */\n      mload(0x40)\n      shl(0xe0, 0xb06307db)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":37394:37448  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_353:\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37459:37491  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37459:37477  _operatorApprovals */\n      0x07\n        /* \"StonersTown Contract/STW.sol\":37459:37491  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":37459:37501  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":37459:37512  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"StonersTown Contract/STW.sol\":37527:37575  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":6255:6296   */\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":37459:37501  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      swap2\n        /* \"StonersTown Contract/STW.sol\":37527:37575  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":6228:6246   */\n      add\n        /* \"StonersTown Contract/STW.sol\":37527:37575  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"StonersTown Contract/STW.sol\":37308:37582  function setApprovalForAll(address operator, bool approved) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":51127:51276  function setFreeMintAllowance(uint256 freeMintAllowance)... */\n    tag_156:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_360:\n        /* \"StonersTown Contract/STW.sol\":51233:51249  freeBudPerWallet */\n      0x0d\n        /* \"StonersTown Contract/STW.sol\":51233:51269  freeBudPerWallet = freeMintAllowance */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":51127:51276  function setFreeMintAllowance(uint256 freeMintAllowance)... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":38347:38706  function safeTransferFrom(... */\n    tag_161:\n        /* \"StonersTown Contract/STW.sol\":38508:38536  _transfer(from, to, tokenId) */\n      tag_364\n        /* \"StonersTown Contract/STW.sol\":38518:38522  from */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38524:38526  to */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38528:38535  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38508:38517  _transfer */\n      tag_232\n        /* \"StonersTown Contract/STW.sol\":38508:38536  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":38550:38563  to.isContract */\n      dup4\n      and\n        /* \"StonersTown Contract/STW.sol\":11696:11715  account.code.length */\n      extcodesize\n        /* \"StonersTown Contract/STW.sol\":11696:11719  account.code.length > 0 */\n      iszero\n      iszero\n        /* \"StonersTown Contract/STW.sol\":38550:38626  to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data) */\n      dup1\n      iszero\n      tag_367\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":38570:38626  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_368\n        /* \"StonersTown Contract/STW.sol\":38601:38605  from */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38607:38609  to */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38611:38618  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38620:38625  _data */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":38570:38600  _checkContractOnERC721Received */\n      tag_369\n        /* \"StonersTown Contract/STW.sol\":38570:38626  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_368:\n        /* \"StonersTown Contract/STW.sol\":38569:38626  !_checkContractOnERC721Received(from, to, tokenId, _data) */\n      iszero\n        /* \"StonersTown Contract/STW.sol\":38550:38626  to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data) */\n    tag_367:\n        /* \"StonersTown Contract/STW.sol\":38546:38700  if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":38649:38689  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":38546:38700  if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_370:\n        /* \"StonersTown Contract/STW.sol\":38347:38706  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":50703:50948  function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n    tag_165:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_374:\n        /* \"StonersTown Contract/STW.sol\":50801:50808  maxbuds */\n      sload(0x0b)\n        /* \"StonersTown Contract/STW.sol\":50786:50798  newMaxSupply */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":50786:50808  newMaxSupply < maxbuds */\n      lt\n        /* \"StonersTown Contract/STW.sol\":50778:50835  require(newMaxSupply < maxbuds, \"Invalid new max supply\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8983:8985   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":50778:50835  require(newMaxSupply < maxbuds, \"Invalid new max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8965:8986   */\n      mstore\n        /* \"#utility.yul\":9022:9024   */\n      0x16\n        /* \"#utility.yul\":9002:9020   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8995:9025   */\n      mstore\n      shl(0x50, 0x496e76616c6964206e6577206d617820737570706c79)\n        /* \"#utility.yul\":9041:9059   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9034:9086   */\n      mstore\n        /* \"#utility.yul\":9103:9121   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":50778:50835  require(newMaxSupply < maxbuds, \"Invalid new max supply\") */\n      tag_237\n        /* \"#utility.yul\":8781:9127   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":50778:50835  require(newMaxSupply < maxbuds, \"Invalid new max supply\") */\n    tag_377:\n        /* \"StonersTown Contract/STW.sol\":50869:50882  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":50853:50865  newMaxSupply */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":50853:50882  newMaxSupply >= _currentIndex */\n      lt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":50845:50909  require(newMaxSupply >= _currentIndex, \"Invalid new max supply\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8983:8985   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":50845:50909  require(newMaxSupply >= _currentIndex, \"Invalid new max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8965:8986   */\n      mstore\n        /* \"#utility.yul\":9022:9024   */\n      0x16\n        /* \"#utility.yul\":9002:9020   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8995:9025   */\n      mstore\n      shl(0x50, 0x496e76616c6964206e6577206d617820737570706c79)\n        /* \"#utility.yul\":9041:9059   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9034:9086   */\n      mstore\n        /* \"#utility.yul\":9103:9121   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":50845:50909  require(newMaxSupply >= _currentIndex, \"Invalid new max supply\") */\n      tag_237\n        /* \"#utility.yul\":8781:9127   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":50845:50909  require(newMaxSupply >= _currentIndex, \"Invalid new max supply\") */\n    tag_380:\n        /* \"StonersTown Contract/STW.sol\":50919:50926  maxbuds */\n      0x0b\n        /* \"StonersTown Contract/STW.sol\":50919:50941  maxbuds = newMaxSupply */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":50703:50948  function lowerMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35906:36228  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_169:\n        /* \"StonersTown Contract/STW.sol\":35979:35992  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":36009:36025  _exists(tokenId) */\n      tag_383\n        /* \"StonersTown Contract/STW.sol\":36017:36024  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":36009:36016  _exists */\n      tag_214\n        /* \"StonersTown Contract/STW.sol\":36009:36025  _exists(tokenId) */\n      jump\t// in\n    tag_383:\n        /* \"StonersTown Contract/STW.sol\":36004:36063  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_384\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":36034:36063  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":36004:36063  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_384:\n        /* \"StonersTown Contract/STW.sol\":36074:36095  string memory baseURI */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":36098:36108  _baseURI() */\n      tag_385\n        /* \"StonersTown Contract/STW.sol\":36098:36106  _baseURI */\n      tag_386\n        /* \"StonersTown Contract/STW.sol\":36098:36108  _baseURI() */\n      jump\t// in\n    tag_385:\n        /* \"StonersTown Contract/STW.sol\":36074:36108  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":36131:36138  baseURI */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":36125:36146  bytes(baseURI).length */\n      mload\n        /* \"StonersTown Contract/STW.sol\":36150:36151  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":36125:36151  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"StonersTown Contract/STW.sol\":36125:36221  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : '' */\n      tag_387\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_388)\n    tag_387:\n        /* \"StonersTown Contract/STW.sol\":36178:36185  baseURI */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":36187:36205  tokenId.toString() */\n      tag_389\n        /* \"StonersTown Contract/STW.sol\":36187:36194  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":36187:36203  tokenId.toString */\n      tag_390\n        /* \"StonersTown Contract/STW.sol\":36187:36205  tokenId.toString() */\n      jump\t// in\n    tag_389:\n        /* \"StonersTown Contract/STW.sol\":36161:36215  abi.encodePacked(baseURI, tokenId.toString(), \".json\") */\n      add(0x20, mload(0x40))\n      tag_391\n      swap3\n      swap2\n      swap1\n      tag_392\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"StonersTown Contract/STW.sol\":36125:36221  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : '' */\n    tag_388:\n        /* \"StonersTown Contract/STW.sol\":36118:36221  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString(), \".json\")) : '' */\n      swap4\n        /* \"StonersTown Contract/STW.sol\":35906:36228  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":51684:51768  function freezeMetadata() external onlyOwner {... */\n    tag_177:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_396:\n        /* \"StonersTown Contract/STW.sol\":51739:51754  METADATA_FROZEN */\n      0x11\n        /* \"StonersTown Contract/STW.sol\":51739:51761  METADATA_FROZEN = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"StonersTown Contract/STW.sol\":51757:51761  true */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":51739:51761  METADATA_FROZEN = true */\n      or\n      swap1\n      sstore\n        /* \"StonersTown Contract/STW.sol\":51684:51768  function freezeMetadata() external onlyOwner {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":9667:9865  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_195:\n        /* \"StonersTown Contract/STW.sol\":8857:8863  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":8997:9020  owner() == _msgSender() */\n      eq\n        /* \"StonersTown Contract/STW.sol\":8989:9057  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":9755:9777  newOwner != address(0) */\n      dup2\n      and\n        /* \"StonersTown Contract/STW.sol\":9747:9820  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6733:6735   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":9747:9820  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6715:6736   */\n      mstore\n        /* \"#utility.yul\":6772:6774   */\n      0x26\n        /* \"#utility.yul\":6752:6770   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6745:6775   */\n      mstore\n        /* \"#utility.yul\":6811:6845   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6791:6809   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6784:6846   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6862:6880   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6855:6891   */\n      mstore\n        /* \"#utility.yul\":6908:6927   */\n      0x84\n      add\n        /* \"StonersTown Contract/STW.sol\":9747:9820  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_237\n        /* \"#utility.yul\":6531:6933   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":9747:9820  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_406:\n        /* \"StonersTown Contract/STW.sol\":9830:9858  _transferOwnership(newOwner) */\n      tag_409\n        /* \"StonersTown Contract/STW.sol\":9849:9857  newOwner */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":9830:9848  _transferOwnership */\n      tag_295\n        /* \"StonersTown Contract/STW.sol\":9830:9858  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_409:\n        /* \"StonersTown Contract/STW.sol\":9667:9865  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":38952:39136  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_214:\n        /* \"StonersTown Contract/STW.sol\":39009:39013  bool */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":39051:39058  tokenId */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":39032:39058  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":39032:39085  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_413\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":39072:39085  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":39062:39069  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":39062:39085  tokenId < _currentIndex */\n      lt\n        /* \"StonersTown Contract/STW.sol\":39032:39085  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_413:\n        /* \"StonersTown Contract/STW.sol\":39032:39129  _startTokenId() <= tokenId && tokenId < _currentIndex &&... */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n      pop\n        /* \"StonersTown Contract/STW.sol\":39102:39122  _ownerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":39102:39113  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":39102:39122  _ownerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":39102:39129  _ownerships[tokenId].burned */\n      sload\n      shl(0xe0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"StonersTown Contract/STW.sol\":39101:39129  !_ownerships[tokenId].burned */\n      iszero\n      swap1\n        /* \"StonersTown Contract/STW.sol\":38952:39136  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":46368:46557  function _approve(... */\n    tag_226:\n        /* \"StonersTown Contract/STW.sol\":46478:46502  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":46478:46493  _tokenApprovals */\n      0x06\n        /* \"StonersTown Contract/STW.sol\":46478:46502  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":46478:46507  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"StonersTown Contract/STW.sol\":46522:46550  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"StonersTown Contract/STW.sol\":46478:46502  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"StonersTown Contract/STW.sol\":46522:46550  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"StonersTown Contract/STW.sol\":46368:46557  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":41974:44041  function _transfer(... */\n    tag_232:\n        /* \"StonersTown Contract/STW.sol\":42084:42119  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":42122:42142  ownershipOf(tokenId) */\n      tag_419\n        /* \"StonersTown Contract/STW.sol\":42134:42141  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":42122:42133  ownershipOf */\n      tag_285\n        /* \"StonersTown Contract/STW.sol\":42122:42142  ownershipOf(tokenId) */\n      jump\t// in\n    tag_419:\n        /* \"StonersTown Contract/STW.sol\":42195:42213  prevOwnership.addr */\n      dup1\n      mload\n        /* \"StonersTown Contract/STW.sol\":42084:42142  TokenOwnership memory prevOwnership = ownershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":42153:42175  bool isApprovedOrOwner */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42179:42213  _msgSender() == prevOwnership.addr */\n      and\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42179:42213  _msgSender() == prevOwnership.addr */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":42179:42279  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_422\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":42246:42264  prevOwnership.addr */\n      dup2\n      mload\n        /* \"StonersTown Contract/STW.sol\":42229:42279  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n      tag_422\n      swap1\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":37648:37810  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_184\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":42229:42279  isApprovedForAll(prevOwnership.addr, _msgSender()) */\n    tag_422:\n        /* \"StonersTown Contract/STW.sol\":42179:42331  _msgSender() == prevOwnership.addr ||... */\n      dup1\n      tag_424\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n        /* \"StonersTown Contract/STW.sol\":42295:42315  getApproved(tokenId) */\n      tag_426\n        /* \"StonersTown Contract/STW.sol\":42307:42314  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":42295:42306  getApproved */\n      tag_60\n        /* \"StonersTown Contract/STW.sol\":42295:42315  getApproved(tokenId) */\n      jump\t// in\n    tag_426:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42295:42331  getApproved(tokenId) == _msgSender() */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":42179:42331  _msgSender() == prevOwnership.addr ||... */\n    tag_424:\n        /* \"StonersTown Contract/STW.sol\":42153:42332  bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||... */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":42348:42365  isApprovedOrOwner */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":42343:42409  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_427\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":42374:42409  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":42343:42409  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_427:\n        /* \"StonersTown Contract/STW.sol\":42445:42449  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42423:42449  prevOwnership.addr != from */\n      and\n        /* \"StonersTown Contract/STW.sol\":42423:42436  prevOwnership */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":42423:42441  prevOwnership.addr */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42423:42449  prevOwnership.addr != from */\n      and\n      eq\n        /* \"StonersTown Contract/STW.sol\":42419:42486  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_428\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":42458:42486  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":42419:42486  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_428:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":42500:42516  to == address(0) */\n      dup5\n      and\n        /* \"StonersTown Contract/STW.sol\":42496:42548  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_429\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":42525:42548  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":42496:42548  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_429:\n        /* \"StonersTown Contract/STW.sol\":42664:42713  _approve(address(0), tokenId, prevOwnership.addr) */\n      tag_432\n        /* \"StonersTown Contract/STW.sol\":42681:42682  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":42685:42692  tokenId */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":42694:42707  prevOwnership */\n      dup5\n        /* \"StonersTown Contract/STW.sol\":42694:42712  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"StonersTown Contract/STW.sol\":42664:42672  _approve */\n      tag_226\n        /* \"StonersTown Contract/STW.sol\":42664:42713  _approve(address(0), tokenId, prevOwnership.addr) */\n      jump\t// in\n    tag_432:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43003:43021  _addressData[from] */\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":43003:43015  _addressData */\n      0x05\n        /* \"StonersTown Contract/STW.sol\":43003:43021  _addressData[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43003:43034  _addressData[from].balance -= 1 */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      dup1\n      dup3\n      and\n      0xffffffffffffffff\n      swap3\n      dup4\n      and\n      not(0x00)\n      add\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43048:43064  _addressData[to] */\n      dup10\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43048:43077  _addressData[to].balance += 1 */\n      dup1\n      sload\n      swap4\n      dup5\n      and\n      swap4\n      dup4\n      and\n      0x01\n      swap1\n      dup2\n      add\n      dup5\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43092:43112  _ownerships[tokenId] */\n      dup10\n      dup7\n      mstore\n        /* \"StonersTown Contract/STW.sol\":43092:43103  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":43092:43112  _ownerships[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43092:43122  _ownerships[tokenId].addr = to */\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":43136:43197  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      and\n      swap1\n      swap5\n      or\n      shl(0xa0, 0x01)\n        /* \"StonersTown Contract/STW.sol\":43181:43196  block.timestamp */\n      timestamp\n        /* \"StonersTown Contract/STW.sol\":43136:43197  _ownerships[tokenId].startTimestamp = uint64(block.timestamp) */\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      swap3\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43467:43478  tokenId + 1 */\n      swap1\n      dup7\n      add\n        /* \"StonersTown Contract/STW.sol\":43496:43520  _ownerships[nextTokenId] */\n      dup1\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43496:43525  _ownerships[nextTokenId].addr */\n      sload\n        /* \"StonersTown Contract/STW.sol\":43467:43478  tokenId + 1 */\n      swap1\n      swap2\n        /* \"StonersTown Contract/STW.sol\":43496:43525  _ownerships[nextTokenId].addr */\n      and\n        /* \"StonersTown Contract/STW.sol\":43492:43930  if (_ownerships[nextTokenId].addr == address(0)) {... */\n      tag_434\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":43718:43731  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":43704:43715  nextTokenId */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":43704:43731  nextTokenId < _currentIndex */\n      lt\n        /* \"StonersTown Contract/STW.sol\":43700:43916  if (nextTokenId < _currentIndex) {... */\n      iszero\n      tag_434\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":43787:43805  prevOwnership.addr */\n      dup3\n      mload\n      0x00\n        /* \"StonersTown Contract/STW.sol\":43755:43779  _ownerships[nextTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":43755:43766  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":43755:43779  _ownerships[nextTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":43755:43805  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      dup1\n      sload\n        /* \"StonersTown Contract/STW.sol\":43869:43897  prevOwnership.startTimestamp */\n      swap2\n      dup7\n      add\n      mload\n        /* \"StonersTown Contract/STW.sol\":43827:43897  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      0xffffffffffffffff\n      and\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43755:43805  _ownerships[nextTokenId].addr = prevOwnership.addr */\n      swap1\n      swap4\n      and\n        /* \"StonersTown Contract/STW.sol\":43827:43897  _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp */\n      swap3\n      swap1\n      swap3\n      or\n      or\n      swap1\n      sstore\n        /* \"StonersTown Contract/STW.sol\":43700:43916  if (nextTokenId < _currentIndex) {... */\n    tag_434:\n        /* \"StonersTown Contract/STW.sol\":42979:43940  unchecked {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":43974:43981  tokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":43970:43972  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43955:43982  Transfer(from, to, tokenId) */\n      and\n        /* \"StonersTown Contract/STW.sol\":43964:43968  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":43955:43982  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"StonersTown Contract/STW.sol\":43992:44034  _afterTokenTransfers(from, to, tokenId, 1) */\n    tag_435:\n        /* \"StonersTown Contract/STW.sol\":42074:44041  {... */\n      pop\n      pop\n        /* \"StonersTown Contract/STW.sol\":41974:44041  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":12643:12955  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_245:\n        /* \"StonersTown Contract/STW.sol\":12757:12763  amount */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":12732:12753  address(this).balance */\n      selfbalance\n        /* \"StonersTown Contract/STW.sol\":12732:12763  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":12724:12797  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_438\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7916:7918   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":12724:12797  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7898:7919   */\n      mstore\n        /* \"#utility.yul\":7955:7957   */\n      0x1d\n        /* \"#utility.yul\":7935:7953   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7928:7958   */\n      mstore\n        /* \"#utility.yul\":7994:8025   */\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n        /* \"#utility.yul\":7974:7992   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7967:8026   */\n      mstore\n        /* \"#utility.yul\":8043:8061   */\n      0x64\n      add\n        /* \"StonersTown Contract/STW.sol\":12724:12797  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_237\n        /* \"#utility.yul\":7714:8067   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":12724:12797  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n    tag_438:\n        /* \"StonersTown Contract/STW.sol\":12809:12821  bool success */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":12827:12836  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":12827:12841  recipient.call */\n      and\n        /* \"StonersTown Contract/STW.sol\":12849:12855  amount */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":12827:12860  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_445\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_444)\n    tag_445:\n      0x60\n      swap2\n      pop\n    tag_444:\n      pop\n        /* \"StonersTown Contract/STW.sol\":12808:12860  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":12878:12885  success */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":12870:12948  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7489:7491   */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":12870:12948  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7471:7492   */\n      mstore\n        /* \"#utility.yul\":7528:7530   */\n      0x3a\n        /* \"#utility.yul\":7508:7526   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7501:7531   */\n      mstore\n        /* \"#utility.yul\":7567:7601   */\n      0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072\n        /* \"#utility.yul\":7547:7565   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7540:7602   */\n      mstore\n        /* \"#utility.yul\":7638:7666   */\n      0x6563697069656e74206d61792068617665207265766572746564000000000000\n        /* \"#utility.yul\":7618:7636   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7611:7667   */\n      mstore\n        /* \"#utility.yul\":7684:7703   */\n      0x84\n      add\n        /* \"StonersTown Contract/STW.sol\":12870:12948  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_237\n        /* \"#utility.yul\":7287:7709   */\n      jump\n        /* \"StonersTown Contract/STW.sol\":39142:39244  function _safeMint(address to, uint256 quantity) internal {... */\n    tag_263:\n        /* \"StonersTown Contract/STW.sol\":39210:39237  _safeMint(to, quantity, '') */\n      tag_275\n        /* \"StonersTown Contract/STW.sol\":39220:39222  to */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":39224:39232  quantity */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":39210:39237  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"StonersTown Contract/STW.sol\":39210:39219  _safeMint */\n      tag_451\n        /* \"StonersTown Contract/STW.sol\":39210:39237  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":34252:35335  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_285:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":34361:34368  tokenId */\n      dup2\n      dup1\n        /* \"StonersTown Contract/STW.sol\":31365:31366  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":34407:34430  _startTokenId() <= curr */\n      gt\n      iszero\n        /* \"StonersTown Contract/STW.sol\":34407:34454  _startTokenId() <= curr && curr < _currentIndex */\n      dup1\n      iszero\n      tag_456\n      jumpi\n      pop\n        /* \"StonersTown Contract/STW.sol\":34441:34454  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":34434:34438  curr */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":34434:34454  curr < _currentIndex */\n      lt\n        /* \"StonersTown Contract/STW.sol\":34407:34454  _startTokenId() <= curr && curr < _currentIndex */\n    tag_456:\n        /* \"StonersTown Contract/STW.sol\":34403:35271  if (_startTokenId() <= curr && curr < _currentIndex) {... */\n      iszero\n      tag_457\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":34474:34505  TokenOwnership memory ownership */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":34508:34525  _ownerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":34508:34519  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":34508:34525  _ownerships[curr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":34474:34525  TokenOwnership memory ownership = _ownerships[curr] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xa0, 0x01)\n      dup2\n      div\n      0xffffffffffffffff\n      and\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      shl(0xe0, 0x01)\n      swap1\n      swap2\n      div\n      0xff\n      and\n      iszero\n      iszero\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"StonersTown Contract/STW.sol\":34543:35257  if (!ownership.burned) {... */\n      tag_461\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":34592:34606  ownership.addr */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":34592:34620  ownership.addr != address(0) */\n      and\n      iszero\n        /* \"StonersTown Contract/STW.sol\":34588:34687  if (ownership.addr != address(0)) {... */\n      tag_459\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":34655:34664  ownership */\n      swap4\n        /* \"StonersTown Contract/STW.sol\":34252:35335  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":34588:34687  if (ownership.addr != address(0)) {... */\n    tag_459:\n      pop\n      not(0x00)\n        /* \"StonersTown Contract/STW.sol\":35023:35029  curr-- */\n      add\n        /* \"StonersTown Contract/STW.sol\":35067:35084  _ownerships[curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":35067:35078  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":35067:35084  _ownerships[curr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":35055:35084  ownership = _ownerships[curr] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      shl(0xa0, 0x01)\n      dup3\n      div\n      0xffffffffffffffff\n      and\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      shl(0xe0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"StonersTown Contract/STW.sol\":35114:35142  ownership.addr != address(0) */\n      iszero\n        /* \"StonersTown Contract/STW.sol\":35110:35217  if (ownership.addr != address(0)) {... */\n      tag_462\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":35181:35190  ownership */\n      swap4\n        /* \"StonersTown Contract/STW.sol\":34252:35335  function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":35110:35217  if (ownership.addr != address(0)) {... */\n    tag_462:\n        /* \"StonersTown Contract/STW.sol\":34984:35239  while (true) {... */\n      jump(tag_459)\n    tag_461:\n        /* \"StonersTown Contract/STW.sol\":34456:35271  {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":34403:35271  if (_startTokenId() <= curr && curr < _currentIndex) {... */\n    tag_457:\n        /* \"StonersTown Contract/STW.sol\":35297:35328  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":10019:10206  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_295:\n        /* \"StonersTown Contract/STW.sol\":10111:10117  _owner */\n      0x08\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":10127:10144  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"StonersTown Contract/STW.sol\":10159:10199  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"StonersTown Contract/STW.sol\":10111:10117  _owner */\n      swap2\n      and\n      swap2\n        /* \"StonersTown Contract/STW.sol\":10127:10144  _owner = newOwner */\n      swap1\n        /* \"StonersTown Contract/STW.sol\":10111:10117  _owner */\n      dup3\n      swap1\n        /* \"StonersTown Contract/STW.sol\":10159:10199  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"StonersTown Contract/STW.sol\":10092:10108  address oldOwner */\n      0x00\n      swap1\n        /* \"StonersTown Contract/STW.sol\":10159:10199  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"StonersTown Contract/STW.sol\":10082:10206  {... */\n      pop\n        /* \"StonersTown Contract/STW.sol\":10019:10206  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":50320:50438  function updateFreeMintCount(address minter, uint256 count) private {... */\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":50398:50422  freeMintCountMap[minter] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":50398:50414  freeMintCountMap */\n      0x12\n        /* \"StonersTown Contract/STW.sol\":50398:50422  freeMintCountMap[minter] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":50398:50431  freeMintCountMap[minter] += count */\n      dup1\n      sload\n        /* \"StonersTown Contract/STW.sol\":50426:50431  count */\n      dup4\n      swap3\n        /* \"StonersTown Contract/STW.sol\":50398:50422  freeMintCountMap[minter] */\n      swap1\n        /* \"StonersTown Contract/STW.sol\":50398:50431  freeMintCountMap[minter] += count */\n      tag_465\n      swap1\n        /* \"StonersTown Contract/STW.sol\":50426:50431  count */\n      dup5\n      swap1\n        /* \"StonersTown Contract/STW.sol\":50398:50431  freeMintCountMap[minter] += count */\n      tag_252\n      jump\t// in\n    tag_465:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"StonersTown Contract/STW.sol\":50320:50438  function updateFreeMintCount(address minter, uint256 count) private {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":47038:47688  function _checkContractOnERC721Received(... */\n    tag_369:\n        /* \"StonersTown Contract/STW.sol\":47216:47288  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":47196:47200  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":47216:47252  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47216:47288  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_469\n      swap1\n        /* \"StonersTown Contract/STW.sol\":7632:7642  msg.sender */\n      caller\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47267:47271  from */\n      dup10\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47273:47280  tokenId */\n      dup9\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47282:47287  _data */\n      dup9\n      swap1\n        /* \"StonersTown Contract/STW.sol\":47216:47288  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_470\n      jump\t// in\n    tag_469:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_471\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_471:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_472\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_473\n      swap2\n      dup2\n      add\n      swap1\n      tag_474\n      jump\t// in\n    tag_473:\n      0x01\n    tag_472:\n        /* \"StonersTown Contract/STW.sol\":47212:47682  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_475\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_480\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_479)\n    tag_480:\n      0x60\n      swap2\n      pop\n    tag_479:\n      pop\n        /* \"StonersTown Contract/STW.sol\":47447:47460  reason.length */\n      dup1\n      mload\n        /* \"StonersTown Contract/STW.sol\":47443:47672  if (reason.length == 0) {... */\n      tag_481\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":47492:47532  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":47443:47672  if (reason.length == 0) {... */\n    tag_481:\n        /* \"StonersTown Contract/STW.sol\":47632:47638  reason */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":47626:47639  mload(reason) */\n      mload\n        /* \"StonersTown Contract/STW.sol\":47617:47623  reason */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":47613:47615  32 */\n      0x20\n        /* \"StonersTown Contract/STW.sol\":47609:47624  add(32, reason) */\n      add\n        /* \"StonersTown Contract/STW.sol\":47602:47640  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"StonersTown Contract/STW.sol\":47212:47682  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_475:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":47334:47389  retval == IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":47212:47682  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_483:\n        /* \"StonersTown Contract/STW.sol\":47038:47688  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":50465:50573  function _baseURI() internal view virtual override returns (string memory) {... */\n    tag_386:\n        /* \"StonersTown Contract/STW.sol\":50525:50538  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":50557:50566  weedStore */\n      0x0c\n        /* \"StonersTown Contract/STW.sol\":50550:50566  return weedStore */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n        /* \"StonersTown Contract/STW.sol\":5187:5890  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_390:\n        /* \"StonersTown Contract/STW.sol\":5243:5256  string memory */\n      0x60\n        /* \"StonersTown Contract/STW.sol\":5460:5470  value == 0 */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5456:5507  if (value == 0) {... */\n      tag_491\n      jumpi\n      pop\n      pop\n        /* \"StonersTown Contract/STW.sol\":5486:5496  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"StonersTown Contract/STW.sol\":5187:5890  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"StonersTown Contract/STW.sol\":5456:5507  if (value == 0) {... */\n    tag_491:\n        /* \"StonersTown Contract/STW.sol\":5531:5536  value */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5516:5528  uint256 temp */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":5570:5645  while (temp != 0) {... */\n    tag_492:\n        /* \"StonersTown Contract/STW.sol\":5577:5586  temp != 0 */\n      dup2\n      iszero\n        /* \"StonersTown Contract/STW.sol\":5570:5645  while (temp != 0) {... */\n      tag_493\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":5602:5610  digits++ */\n      dup1\n      tag_494\n      dup2\n      tag_495\n      jump\t// in\n    tag_494:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":5624:5634  temp /= 10 */\n      tag_496\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":5632:5634  10 */\n      0x0a\n        /* \"StonersTown Contract/STW.sol\":5624:5634  temp /= 10 */\n      dup4\n      tag_497\n      jump\t// in\n    tag_496:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":5570:5645  while (temp != 0) {... */\n      jump(tag_492)\n    tag_493:\n        /* \"StonersTown Contract/STW.sol\":5654:5673  bytes memory buffer */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":5686:5692  digits */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5676:5693  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_499\n      jumpi\n      tag_499\n      tag_500\n      jump\t// in\n    tag_499:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_501\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_501:\n      pop\n        /* \"StonersTown Contract/STW.sol\":5654:5693  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"StonersTown Contract/STW.sol\":5703:5853  while (value != 0) {... */\n    tag_502:\n        /* \"StonersTown Contract/STW.sol\":5710:5720  value != 0 */\n      dup5\n      iszero\n        /* \"StonersTown Contract/STW.sol\":5703:5853  while (value != 0) {... */\n      tag_483\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":5736:5747  digits -= 1 */\n      tag_504\n        /* \"StonersTown Contract/STW.sol\":5746:5747  1 */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":5736:5747  digits -= 1 */\n      dup4\n      tag_336\n      jump\t// in\n    tag_504:\n      swap2\n      pop\n        /* \"StonersTown Contract/STW.sol\":5804:5814  value % 10 */\n      tag_505\n        /* \"StonersTown Contract/STW.sol\":5812:5814  10 */\n      0x0a\n        /* \"StonersTown Contract/STW.sol\":5804:5809  value */\n      dup7\n        /* \"StonersTown Contract/STW.sol\":5804:5814  value % 10 */\n      tag_506\n      jump\t// in\n    tag_505:\n        /* \"StonersTown Contract/STW.sol\":5791:5815  48 + uint256(value % 10) */\n      tag_507\n      swap1\n        /* \"StonersTown Contract/STW.sol\":5791:5793  48 */\n      0x30\n        /* \"StonersTown Contract/STW.sol\":5791:5815  48 + uint256(value % 10) */\n      tag_252\n      jump\t// in\n    tag_507:\n        /* \"StonersTown Contract/STW.sol\":5778:5817  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"StonersTown Contract/STW.sol\":5761:5767  buffer */\n      dup2\n        /* \"StonersTown Contract/STW.sol\":5768:5774  digits */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":5761:5775  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_509\n      jumpi\n      tag_509\n      tag_510\n      jump\t// in\n    tag_509:\n      0x20\n      add\n      add\n        /* \"StonersTown Contract/STW.sol\":5761:5817  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"StonersTown Contract/STW.sol\":5831:5842  value /= 10 */\n      tag_511\n        /* \"StonersTown Contract/STW.sol\":5840:5842  10 */\n      0x0a\n        /* \"StonersTown Contract/STW.sol\":5831:5842  value /= 10 */\n      dup7\n      tag_497\n      jump\t// in\n    tag_511:\n      swap5\n      pop\n        /* \"StonersTown Contract/STW.sol\":5703:5853  while (value != 0) {... */\n      jump(tag_502)\n        /* \"StonersTown Contract/STW.sol\":39595:39752  function _safeMint(... */\n    tag_451:\n        /* \"StonersTown Contract/STW.sol\":39713:39745  _mint(to, quantity, _data, true) */\n      tag_225\n        /* \"StonersTown Contract/STW.sol\":39719:39721  to */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":39723:39731  quantity */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":39733:39738  _data */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":39740:39744  true */\n      0x01\n        /* \"StonersTown Contract/STW.sol\":40132:40152  uint256 startTokenId */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":40155:40168  _currentIndex */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":40182:40198  to == address(0) */\n      dup6\n      and\n        /* \"StonersTown Contract/STW.sol\":40178:40226  if (to == address(0)) revert MintToZeroAddress() */\n      tag_518\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":40207:40226  MintToZeroAddress() */\n      mload(0x40)\n      shl(0xe8, 0x2e0763)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":40178:40226  if (to == address(0)) revert MintToZeroAddress() */\n    tag_518:\n        /* \"StonersTown Contract/STW.sol\":40240:40253  quantity == 0 */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":40236:40280  if (quantity == 0) revert MintZeroQuantity() */\n      tag_519\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":40262:40280  MintZeroQuantity() */\n      mload(0x40)\n      shl(0xe0, 0xb562e8dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":40236:40280  if (quantity == 0) revert MintZeroQuantity() */\n    tag_519:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":40623:40639  _addressData[to] */\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"StonersTown Contract/STW.sol\":40623:40635  _addressData */\n      0x05\n        /* \"StonersTown Contract/STW.sol\":40623:40639  _addressData[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":40623:40667  _addressData[to].balance += uint64(quantity) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffff)\n        /* \"StonersTown Contract/STW.sol\":40681:40730  _addressData[to].numberMinted += uint64(quantity) */\n      dup2\n      and\n        /* \"StonersTown Contract/STW.sol\":40623:40667  _addressData[to].balance += uint64(quantity) */\n      0xffffffffffffffff\n      dup1\n      dup4\n      and\n      dup13\n      add\n      dup2\n      and\n        /* \"StonersTown Contract/STW.sol\":40681:40730  _addressData[to].numberMinted += uint64(quantity) */\n      swap2\n      dup3\n      or\n      0x010000000000000000\n      not(0xffffffffffffffff)\n        /* \"StonersTown Contract/STW.sol\":40623:40667  _addressData[to].balance += uint64(quantity) */\n      swap1\n      swap5\n      and\n      swap1\n      swap3\n      or\n        /* \"StonersTown Contract/STW.sol\":40681:40730  _addressData[to].numberMinted += uint64(quantity) */\n      dup4\n      swap1\n      div\n      dup2\n      and\n      dup13\n      add\n      dup2\n      and\n      swap1\n      swap3\n      mul\n      or\n      swap1\n      swap2\n      sstore\n        /* \"StonersTown Contract/STW.sol\":40745:40770  _ownerships[startTokenId] */\n      dup6\n      dup5\n      mstore\n        /* \"StonersTown Contract/STW.sol\":40745:40756  _ownerships */\n      0x04\n        /* \"StonersTown Contract/STW.sol\":40745:40770  _ownerships[startTokenId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"StonersTown Contract/STW.sol\":40745:40780  _ownerships[startTokenId].addr = to */\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"StonersTown Contract/STW.sol\":40794:40860  _ownerships[startTokenId].startTimestamp = uint64(block.timestamp) */\n      and\n      swap1\n      swap3\n      or\n      shl(0xa0, 0x01)\n        /* \"StonersTown Contract/STW.sol\":40844:40859  block.timestamp */\n      timestamp\n        /* \"StonersTown Contract/STW.sol\":40794:40860  _ownerships[startTokenId].startTimestamp = uint64(block.timestamp) */\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      mul\n      or\n      swap1\n      sstore\n        /* \"StonersTown Contract/STW.sol\":40745:40770  _ownerships[startTokenId] */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":40938:40961  updatedIndex + quantity */\n      dup1\n      dup6\n      add\n        /* \"StonersTown Contract/STW.sol\":40980:40984  safe */\n      dup4\n        /* \"StonersTown Contract/STW.sol\":40980:41003  safe && to.isContract() */\n      dup1\n      iszero\n      tag_522\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":40988:41001  to.isContract */\n      dup8\n      and\n        /* \"StonersTown Contract/STW.sol\":11696:11715  account.code.length */\n      extcodesize\n        /* \"StonersTown Contract/STW.sol\":11696:11719  account.code.length > 0 */\n      iszero\n      iszero\n        /* \"StonersTown Contract/STW.sol\":40988:41003  to.isContract() */\n    tag_522:\n        /* \"StonersTown Contract/STW.sol\":40976:41604  if (safe && to.isContract()) {... */\n      iszero\n      tag_523\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":41023:41332  do {... */\n    tag_524:\n        /* \"StonersTown Contract/STW.sol\":41053:41091  Transfer(address(0), to, updatedIndex) */\n      mload(0x40)\n        /* \"StonersTown Contract/STW.sol\":41078:41090  updatedIndex */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":41053:41091  Transfer(address(0), to, updatedIndex) */\n      dup10\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41070:41071  0 */\n      0x00\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41053:41091  Transfer(address(0), to, updatedIndex) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41070:41071  0 */\n      dup3\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41053:41091  Transfer(address(0), to, updatedIndex) */\n      log4\n        /* \"StonersTown Contract/STW.sol\":41118:41187  _checkContractOnERC721Received(address(0), to, updatedIndex++, _data) */\n      tag_527\n        /* \"StonersTown Contract/STW.sol\":41157:41158  0 */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":41161:41163  to */\n      dup9\n        /* \"StonersTown Contract/STW.sol\":41165:41179  updatedIndex++ */\n      dup5\n      dup1\n      0x01\n      add\n      swap6\n      pop\n        /* \"StonersTown Contract/STW.sol\":41181:41186  _data */\n      dup9\n        /* \"StonersTown Contract/STW.sol\":41118:41148  _checkContractOnERC721Received */\n      tag_369\n        /* \"StonersTown Contract/STW.sol\":41118:41187  _checkContractOnERC721Received(address(0), to, updatedIndex++, _data) */\n      jump\t// in\n    tag_527:\n        /* \"StonersTown Contract/STW.sol\":41113:41285  if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {... */\n      tag_528\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":41222:41262  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"StonersTown Contract/STW.sol\":41113:41285  if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {... */\n    tag_528:\n        /* \"StonersTown Contract/STW.sol\":41327:41330  end */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":41311:41323  updatedIndex */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":41311:41330  updatedIndex != end */\n      eq\n      iszero\n        /* \"StonersTown Contract/STW.sol\":41023:41332  do {... */\n      tag_524\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":41411:41423  startTokenId */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":41394:41407  _currentIndex */\n      sload(0x00)\n        /* \"StonersTown Contract/STW.sol\":41394:41423  _currentIndex != startTokenId */\n      eq\n        /* \"StonersTown Contract/STW.sol\":41390:41433  if (_currentIndex != startTokenId) revert() */\n      tag_529\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":41425:41433  revert() */\n      0x00\n      dup1\n      revert\n        /* \"StonersTown Contract/STW.sol\":41390:41433  if (_currentIndex != startTokenId) revert() */\n    tag_529:\n        /* \"StonersTown Contract/STW.sol\":40976:41604  if (safe && to.isContract()) {... */\n      jump(tag_530)\n    tag_523:\n        /* \"StonersTown Contract/STW.sol\":41472:41590  do {... */\n    tag_531:\n        /* \"StonersTown Contract/STW.sol\":41502:41542  Transfer(address(0), to, updatedIndex++) */\n      mload(0x40)\n        /* \"StonersTown Contract/STW.sol\":41527:41541  updatedIndex++ */\n      0x01\n      dup4\n      add\n      swap3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"StonersTown Contract/STW.sol\":41502:41542  Transfer(address(0), to, updatedIndex++) */\n      dup10\n      and\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41519:41520  0 */\n      0x00\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41502:41542  Transfer(address(0), to, updatedIndex++) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41519:41520  0 */\n      dup3\n      swap1\n        /* \"StonersTown Contract/STW.sol\":41502:41542  Transfer(address(0), to, updatedIndex++) */\n      log4\n        /* \"StonersTown Contract/STW.sol\":41585:41588  end */\n      dup1\n        /* \"StonersTown Contract/STW.sol\":41569:41581  updatedIndex */\n      dup3\n        /* \"StonersTown Contract/STW.sol\":41569:41588  updatedIndex != end */\n      eq\n      iszero\n        /* \"StonersTown Contract/STW.sol\":41472:41590  do {... */\n      tag_531\n      jumpi\n        /* \"StonersTown Contract/STW.sol\":40976:41604  if (safe && to.isContract()) {... */\n    tag_530:\n      pop\n        /* \"StonersTown Contract/STW.sol\":41617:41630  _currentIndex */\n      0x00\n        /* \"StonersTown Contract/STW.sol\":41617:41645  _currentIndex = updatedIndex */\n      sstore\n        /* \"StonersTown Contract/STW.sol\":41665:41725  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_435\n        /* \"StonersTown Contract/STW.sol\":38347:38706  function safeTransferFrom(... */\n      jump\n    tag_276:\n      dup3\n      dup1\n      sload\n      tag_535\n      swap1\n      tag_207\n      jump\t// in\n    tag_535:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_537\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_540)\n    tag_537:\n      dup3\n      0x1f\n      lt\n      tag_538\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_540)\n    tag_538:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_540\n      jumpi\n      swap2\n      dup3\n      add\n    tag_539:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_540\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_539)\n    tag_540:\n      pop\n      tag_541\n      swap3\n      swap2\n      pop\n      tag_542\n      jump\t// in\n    tag_541:\n      pop\n      swap1\n      jump\t// out\n    tag_542:\n    tag_543:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_541\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_543)\n        /* \"#utility.yul\":14:645   */\n    tag_546:\n        /* \"#utility.yul\":78:83   */\n      0x00\n        /* \"#utility.yul\":108:126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":149:151   */\n      dup1\n        /* \"#utility.yul\":141:147   */\n      dup5\n        /* \"#utility.yul\":138:152   */\n      gt\n        /* \"#utility.yul\":135:175   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":155:173   */\n      tag_549\n      tag_500\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":230:232   */\n      0x40\n        /* \"#utility.yul\":224:233   */\n      mload\n        /* \"#utility.yul\":198:200   */\n      0x1f\n        /* \"#utility.yul\":284:299   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":280:304   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":306:308   */\n      0x3f\n        /* \"#utility.yul\":276:309   */\n      add\n        /* \"#utility.yul\":272:314   */\n      and\n        /* \"#utility.yul\":260:315   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":330:348   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":350:372   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":327:373   */\n      or\n        /* \"#utility.yul\":324:396   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":376:394   */\n      tag_551\n      tag_500\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":416:426   */\n      dup2\n        /* \"#utility.yul\":412:414   */\n      0x40\n        /* \"#utility.yul\":405:427   */\n      mstore\n        /* \"#utility.yul\":445:451   */\n      dup1\n        /* \"#utility.yul\":436:451   */\n      swap4\n      pop\n        /* \"#utility.yul\":475:481   */\n      dup6\n        /* \"#utility.yul\":467:473   */\n      dup2\n        /* \"#utility.yul\":460:482   */\n      mstore\n        /* \"#utility.yul\":515:518   */\n      dup7\n        /* \"#utility.yul\":506:512   */\n      dup7\n        /* \"#utility.yul\":501:504   */\n      dup7\n        /* \"#utility.yul\":497:513   */\n      add\n        /* \"#utility.yul\":494:519   */\n      gt\n        /* \"#utility.yul\":491:536   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":491:536   */\n    tag_552:\n        /* \"#utility.yul\":582:588   */\n      dup6\n        /* \"#utility.yul\":577:580   */\n      dup6\n        /* \"#utility.yul\":570:574   */\n      0x20\n        /* \"#utility.yul\":562:568   */\n      dup4\n        /* \"#utility.yul\":558:575   */\n      add\n        /* \"#utility.yul\":545:589   */\n      calldatacopy\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":630:634   */\n      0x20\n        /* \"#utility.yul\":621:627   */\n      dup8\n        /* \"#utility.yul\":613:619   */\n      dup4\n        /* \"#utility.yul\":609:628   */\n      add\n        /* \"#utility.yul\":605:635   */\n      add\n        /* \"#utility.yul\":598:639   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:645   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:823   */\n    tag_553:\n        /* \"#utility.yul\":718:738   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":767:798   */\n      dup2\n      and\n        /* \"#utility.yul\":757:799   */\n      dup2\n      eq\n        /* \"#utility.yul\":747:817   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":810:811   */\n      dup1\n        /* \"#utility.yul\":803:815   */\n      revert\n        /* \"#utility.yul\":747:817   */\n    tag_555:\n        /* \"#utility.yul\":650:823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":828:988   */\n    tag_556:\n        /* \"#utility.yul\":893:913   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":949:962   */\n      dup1\n      iszero\n        /* \"#utility.yul\":942:963   */\n      iszero\n        /* \"#utility.yul\":932:964   */\n      dup2\n      eq\n        /* \"#utility.yul\":922:982   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":978:979   */\n      0x00\n        /* \"#utility.yul\":975:976   */\n      dup1\n        /* \"#utility.yul\":968:980   */\n      revert\n        /* \"#utility.yul\":993:1179   */\n    tag_114:\n        /* \"#utility.yul\":1052:1058   */\n      0x00\n        /* \"#utility.yul\":1105:1107   */\n      0x20\n        /* \"#utility.yul\":1093:1102   */\n      dup3\n        /* \"#utility.yul\":1084:1091   */\n      dup5\n        /* \"#utility.yul\":1080:1103   */\n      sub\n        /* \"#utility.yul\":1076:1108   */\n      slt\n        /* \"#utility.yul\":1073:1125   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":1121:1122   */\n      0x00\n        /* \"#utility.yul\":1118:1119   */\n      dup1\n        /* \"#utility.yul\":1111:1123   */\n      revert\n        /* \"#utility.yul\":1073:1125   */\n    tag_560:\n        /* \"#utility.yul\":1144:1173   */\n      tag_388\n        /* \"#utility.yul\":1163:1172   */\n      dup3\n        /* \"#utility.yul\":1144:1173   */\n      tag_553\n      jump\t// in\n        /* \"#utility.yul\":1184:1444   */\n    tag_185:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1260:1266   */\n      dup1\n        /* \"#utility.yul\":1313:1315   */\n      0x40\n        /* \"#utility.yul\":1301:1310   */\n      dup4\n        /* \"#utility.yul\":1292:1299   */\n      dup6\n        /* \"#utility.yul\":1288:1311   */\n      sub\n        /* \"#utility.yul\":1284:1316   */\n      slt\n        /* \"#utility.yul\":1281:1333   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":1329:1330   */\n      0x00\n        /* \"#utility.yul\":1326:1327   */\n      dup1\n        /* \"#utility.yul\":1319:1331   */\n      revert\n        /* \"#utility.yul\":1281:1333   */\n    tag_563:\n        /* \"#utility.yul\":1352:1381   */\n      tag_564\n        /* \"#utility.yul\":1371:1380   */\n      dup4\n        /* \"#utility.yul\":1352:1381   */\n      tag_553\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":1342:1381   */\n      swap2\n      pop\n        /* \"#utility.yul\":1400:1438   */\n      tag_565\n        /* \"#utility.yul\":1434:1436   */\n      0x20\n        /* \"#utility.yul\":1423:1432   */\n      dup5\n        /* \"#utility.yul\":1419:1437   */\n      add\n        /* \"#utility.yul\":1400:1438   */\n      tag_553\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":1390:1438   */\n      swap1\n      pop\n        /* \"#utility.yul\":1184:1444   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1777   */\n    tag_76:\n        /* \"#utility.yul\":1526:1532   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup1\n        /* \"#utility.yul\":1542:1548   */\n      0x00\n        /* \"#utility.yul\":1595:1597   */\n      0x60\n        /* \"#utility.yul\":1583:1592   */\n      dup5\n        /* \"#utility.yul\":1574:1581   */\n      dup7\n        /* \"#utility.yul\":1570:1593   */\n      sub\n        /* \"#utility.yul\":1566:1598   */\n      slt\n        /* \"#utility.yul\":1563:1615   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":1611:1612   */\n      0x00\n        /* \"#utility.yul\":1608:1609   */\n      dup1\n        /* \"#utility.yul\":1601:1613   */\n      revert\n        /* \"#utility.yul\":1563:1615   */\n    tag_567:\n        /* \"#utility.yul\":1634:1663   */\n      tag_568\n        /* \"#utility.yul\":1653:1662   */\n      dup5\n        /* \"#utility.yul\":1634:1663   */\n      tag_553\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":1624:1663   */\n      swap3\n      pop\n        /* \"#utility.yul\":1682:1720   */\n      tag_569\n        /* \"#utility.yul\":1716:1718   */\n      0x20\n        /* \"#utility.yul\":1705:1714   */\n      dup6\n        /* \"#utility.yul\":1701:1719   */\n      add\n        /* \"#utility.yul\":1682:1720   */\n      tag_553\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":1672:1720   */\n      swap2\n      pop\n        /* \"#utility.yul\":1767:1769   */\n      0x40\n        /* \"#utility.yul\":1756:1765   */\n      dup5\n        /* \"#utility.yul\":1752:1770   */\n      add\n        /* \"#utility.yul\":1739:1771   */\n      calldataload\n        /* \"#utility.yul\":1729:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1449:1777   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1782:2448   */\n    tag_160:\n        /* \"#utility.yul\":1877:1883   */\n      0x00\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1893:1899   */\n      0x00\n        /* \"#utility.yul\":1901:1907   */\n      dup1\n        /* \"#utility.yul\":1954:1957   */\n      0x80\n        /* \"#utility.yul\":1942:1951   */\n      dup6\n        /* \"#utility.yul\":1933:1940   */\n      dup8\n        /* \"#utility.yul\":1929:1952   */\n      sub\n        /* \"#utility.yul\":1925:1958   */\n      slt\n        /* \"#utility.yul\":1922:1975   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":1971:1972   */\n      0x00\n        /* \"#utility.yul\":1968:1969   */\n      dup1\n        /* \"#utility.yul\":1961:1973   */\n      revert\n        /* \"#utility.yul\":1922:1975   */\n    tag_571:\n        /* \"#utility.yul\":1994:2023   */\n      tag_572\n        /* \"#utility.yul\":2013:2022   */\n      dup6\n        /* \"#utility.yul\":1994:2023   */\n      tag_553\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":1984:2023   */\n      swap4\n      pop\n        /* \"#utility.yul\":2042:2080   */\n      tag_573\n        /* \"#utility.yul\":2076:2078   */\n      0x20\n        /* \"#utility.yul\":2065:2074   */\n      dup7\n        /* \"#utility.yul\":2061:2079   */\n      add\n        /* \"#utility.yul\":2042:2080   */\n      tag_553\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":2032:2080   */\n      swap3\n      pop\n        /* \"#utility.yul\":2127:2129   */\n      0x40\n        /* \"#utility.yul\":2116:2125   */\n      dup6\n        /* \"#utility.yul\":2112:2130   */\n      add\n        /* \"#utility.yul\":2099:2131   */\n      calldataload\n        /* \"#utility.yul\":2089:2131   */\n      swap2\n      pop\n        /* \"#utility.yul\":2182:2184   */\n      0x60\n        /* \"#utility.yul\":2171:2180   */\n      dup6\n        /* \"#utility.yul\":2167:2185   */\n      add\n        /* \"#utility.yul\":2154:2186   */\n      calldataload\n        /* \"#utility.yul\":2209:2227   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2201:2207   */\n      dup2\n        /* \"#utility.yul\":2198:2228   */\n      gt\n        /* \"#utility.yul\":2195:2245   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":2241:2242   */\n      0x00\n        /* \"#utility.yul\":2238:2239   */\n      dup1\n        /* \"#utility.yul\":2231:2243   */\n      revert\n        /* \"#utility.yul\":2195:2245   */\n    tag_574:\n        /* \"#utility.yul\":2264:2286   */\n      dup6\n      add\n        /* \"#utility.yul\":2317:2321   */\n      0x1f\n        /* \"#utility.yul\":2309:2322   */\n      dup2\n      add\n        /* \"#utility.yul\":2305:2332   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2295:2350   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":2346:2347   */\n      0x00\n        /* \"#utility.yul\":2343:2344   */\n      dup1\n        /* \"#utility.yul\":2336:2348   */\n      revert\n        /* \"#utility.yul\":2295:2350   */\n    tag_575:\n        /* \"#utility.yul\":2369:2442   */\n      tag_576\n        /* \"#utility.yul\":2434:2441   */\n      dup8\n        /* \"#utility.yul\":2429:2431   */\n      dup3\n        /* \"#utility.yul\":2416:2432   */\n      calldataload\n        /* \"#utility.yul\":2411:2413   */\n      0x20\n        /* \"#utility.yul\":2407:2409   */\n      dup5\n        /* \"#utility.yul\":2403:2414   */\n      add\n        /* \"#utility.yul\":2369:2442   */\n      tag_546\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":2359:2442   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1782:2448   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2707   */\n    tag_151:\n        /* \"#utility.yul\":2518:2524   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup1\n        /* \"#utility.yul\":2579:2581   */\n      0x40\n        /* \"#utility.yul\":2567:2576   */\n      dup4\n        /* \"#utility.yul\":2558:2565   */\n      dup6\n        /* \"#utility.yul\":2554:2577   */\n      sub\n        /* \"#utility.yul\":2550:2582   */\n      slt\n        /* \"#utility.yul\":2547:2599   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2592:2593   */\n      dup1\n        /* \"#utility.yul\":2585:2597   */\n      revert\n        /* \"#utility.yul\":2547:2599   */\n    tag_578:\n        /* \"#utility.yul\":2618:2647   */\n      tag_579\n        /* \"#utility.yul\":2637:2646   */\n      dup4\n        /* \"#utility.yul\":2618:2647   */\n      tag_553\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":2608:2647   */\n      swap2\n      pop\n        /* \"#utility.yul\":2666:2701   */\n      tag_565\n        /* \"#utility.yul\":2697:2699   */\n      0x20\n        /* \"#utility.yul\":2686:2695   */\n      dup5\n        /* \"#utility.yul\":2682:2700   */\n      add\n        /* \"#utility.yul\":2666:2701   */\n      tag_556\n      jump\t// in\n        /* \"#utility.yul\":2712:2966   */\n    tag_66:\n        /* \"#utility.yul\":2780:2786   */\n      0x00\n        /* \"#utility.yul\":2788:2794   */\n      dup1\n        /* \"#utility.yul\":2841:2843   */\n      0x40\n        /* \"#utility.yul\":2829:2838   */\n      dup4\n        /* \"#utility.yul\":2820:2827   */\n      dup6\n        /* \"#utility.yul\":2816:2839   */\n      sub\n        /* \"#utility.yul\":2812:2844   */\n      slt\n        /* \"#utility.yul\":2809:2861   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":2857:2858   */\n      0x00\n        /* \"#utility.yul\":2854:2855   */\n      dup1\n        /* \"#utility.yul\":2847:2859   */\n      revert\n        /* \"#utility.yul\":2809:2861   */\n    tag_582:\n        /* \"#utility.yul\":2880:2909   */\n      tag_583\n        /* \"#utility.yul\":2899:2908   */\n      dup4\n        /* \"#utility.yul\":2880:2909   */\n      tag_553\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":2870:2909   */\n      swap5\n        /* \"#utility.yul\":2956:2958   */\n      0x20\n        /* \"#utility.yul\":2941:2959   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2928:2960   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2712:2966   */\n      jump\t// out\n        /* \"#utility.yul\":2971:3151   */\n    tag_127:\n        /* \"#utility.yul\":3027:3033   */\n      0x00\n        /* \"#utility.yul\":3080:3082   */\n      0x20\n        /* \"#utility.yul\":3068:3077   */\n      dup3\n        /* \"#utility.yul\":3059:3066   */\n      dup5\n        /* \"#utility.yul\":3055:3078   */\n      sub\n        /* \"#utility.yul\":3051:3083   */\n      slt\n        /* \"#utility.yul\":3048:3100   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3093:3094   */\n      dup1\n        /* \"#utility.yul\":3086:3098   */\n      revert\n        /* \"#utility.yul\":3048:3100   */\n    tag_585:\n        /* \"#utility.yul\":3119:3145   */\n      tag_388\n        /* \"#utility.yul\":3135:3144   */\n      dup3\n        /* \"#utility.yul\":3119:3145   */\n      tag_556\n      jump\t// in\n        /* \"#utility.yul\":3156:3401   */\n    tag_47:\n        /* \"#utility.yul\":3214:3220   */\n      0x00\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"#utility.yul\":3255:3264   */\n      dup3\n        /* \"#utility.yul\":3246:3253   */\n      dup5\n        /* \"#utility.yul\":3242:3265   */\n      sub\n        /* \"#utility.yul\":3238:3270   */\n      slt\n        /* \"#utility.yul\":3235:3287   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3280:3281   */\n      dup1\n        /* \"#utility.yul\":3273:3285   */\n      revert\n        /* \"#utility.yul\":3235:3287   */\n    tag_588:\n        /* \"#utility.yul\":3322:3331   */\n      dup2\n        /* \"#utility.yul\":3309:3332   */\n      calldataload\n        /* \"#utility.yul\":3341:3371   */\n      tag_388\n        /* \"#utility.yul\":3365:3370   */\n      dup2\n        /* \"#utility.yul\":3341:3371   */\n      tag_590\n      jump\t// in\n        /* \"#utility.yul\":3406:3655   */\n    tag_474:\n        /* \"#utility.yul\":3475:3481   */\n      0x00\n        /* \"#utility.yul\":3528:3530   */\n      0x20\n        /* \"#utility.yul\":3516:3525   */\n      dup3\n        /* \"#utility.yul\":3507:3514   */\n      dup5\n        /* \"#utility.yul\":3503:3526   */\n      sub\n        /* \"#utility.yul\":3499:3531   */\n      slt\n        /* \"#utility.yul\":3496:3548   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":3544:3545   */\n      0x00\n        /* \"#utility.yul\":3541:3542   */\n      dup1\n        /* \"#utility.yul\":3534:3546   */\n      revert\n        /* \"#utility.yul\":3496:3548   */\n    tag_592:\n        /* \"#utility.yul\":3576:3585   */\n      dup2\n        /* \"#utility.yul\":3570:3586   */\n      mload\n        /* \"#utility.yul\":3595:3625   */\n      tag_388\n        /* \"#utility.yul\":3619:3624   */\n      dup2\n        /* \"#utility.yul\":3595:3625   */\n      tag_590\n      jump\t// in\n        /* \"#utility.yul\":3660:4110   */\n    tag_100:\n        /* \"#utility.yul\":3729:3735   */\n      0x00\n        /* \"#utility.yul\":3782:3784   */\n      0x20\n        /* \"#utility.yul\":3770:3779   */\n      dup3\n        /* \"#utility.yul\":3761:3768   */\n      dup5\n        /* \"#utility.yul\":3757:3780   */\n      sub\n        /* \"#utility.yul\":3753:3785   */\n      slt\n        /* \"#utility.yul\":3750:3802   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":3798:3799   */\n      0x00\n        /* \"#utility.yul\":3795:3796   */\n      dup1\n        /* \"#utility.yul\":3788:3800   */\n      revert\n        /* \"#utility.yul\":3750:3802   */\n    tag_595:\n        /* \"#utility.yul\":3838:3847   */\n      dup2\n        /* \"#utility.yul\":3825:3848   */\n      calldataload\n        /* \"#utility.yul\":3871:3889   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3863:3869   */\n      dup2\n        /* \"#utility.yul\":3860:3890   */\n      gt\n        /* \"#utility.yul\":3857:3907   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":3903:3904   */\n      0x00\n        /* \"#utility.yul\":3900:3901   */\n      dup1\n        /* \"#utility.yul\":3893:3905   */\n      revert\n        /* \"#utility.yul\":3857:3907   */\n    tag_596:\n        /* \"#utility.yul\":3926:3948   */\n      dup3\n      add\n        /* \"#utility.yul\":3979:3983   */\n      0x1f\n        /* \"#utility.yul\":3971:3984   */\n      dup2\n      add\n        /* \"#utility.yul\":3967:3994   */\n      dup5\n      sgt\n        /* \"#utility.yul\":3957:4012   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":4008:4009   */\n      0x00\n        /* \"#utility.yul\":4005:4006   */\n      dup1\n        /* \"#utility.yul\":3998:4010   */\n      revert\n        /* \"#utility.yul\":3957:4012   */\n    tag_597:\n        /* \"#utility.yul\":4031:4104   */\n      tag_483\n        /* \"#utility.yul\":4096:4103   */\n      dup5\n        /* \"#utility.yul\":4091:4093   */\n      dup3\n        /* \"#utility.yul\":4078:4094   */\n      calldataload\n        /* \"#utility.yul\":4073:4075   */\n      0x20\n        /* \"#utility.yul\":4069:4071   */\n      dup5\n        /* \"#utility.yul\":4065:4076   */\n      add\n        /* \"#utility.yul\":4031:4104   */\n      tag_546\n      jump\t// in\n        /* \"#utility.yul\":4115:4295   */\n    tag_59:\n        /* \"#utility.yul\":4174:4180   */\n      0x00\n        /* \"#utility.yul\":4227:4229   */\n      0x20\n        /* \"#utility.yul\":4215:4224   */\n      dup3\n        /* \"#utility.yul\":4206:4213   */\n      dup5\n        /* \"#utility.yul\":4202:4225   */\n      sub\n        /* \"#utility.yul\":4198:4230   */\n      slt\n        /* \"#utility.yul\":4195:4247   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":4243:4244   */\n      0x00\n        /* \"#utility.yul\":4240:4241   */\n      dup1\n        /* \"#utility.yul\":4233:4245   */\n      revert\n        /* \"#utility.yul\":4195:4247   */\n    tag_600:\n      pop\n        /* \"#utility.yul\":4266:4289   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4115:4295   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4300:4557   */\n    tag_601:\n        /* \"#utility.yul\":4341:4344   */\n      0x00\n        /* \"#utility.yul\":4379:4384   */\n      dup2\n        /* \"#utility.yul\":4373:4385   */\n      mload\n        /* \"#utility.yul\":4406:4412   */\n      dup1\n        /* \"#utility.yul\":4401:4404   */\n      dup5\n        /* \"#utility.yul\":4394:4413   */\n      mstore\n        /* \"#utility.yul\":4422:4485   */\n      tag_603\n        /* \"#utility.yul\":4478:4484   */\n      dup2\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4466:4469   */\n      dup7\n        /* \"#utility.yul\":4462:4476   */\n      add\n        /* \"#utility.yul\":4455:4459   */\n      0x20\n        /* \"#utility.yul\":4448:4453   */\n      dup7\n        /* \"#utility.yul\":4444:4460   */\n      add\n        /* \"#utility.yul\":4422:4485   */\n      tag_604\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":4539:4541   */\n      0x1f\n        /* \"#utility.yul\":4518:4533   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4514:4543   */\n      and\n        /* \"#utility.yul\":4505:4544   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4546:4550   */\n      0x20\n        /* \"#utility.yul\":4501:4551   */\n      add\n      swap3\n        /* \"#utility.yul\":4300:4557   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:5199   */\n    tag_392:\n        /* \"#utility.yul\":4842:4845   */\n      0x00\n        /* \"#utility.yul\":4880:4886   */\n      dup4\n        /* \"#utility.yul\":4874:4887   */\n      mload\n        /* \"#utility.yul\":4896:4949   */\n      tag_606\n        /* \"#utility.yul\":4942:4948   */\n      dup2\n        /* \"#utility.yul\":4937:4940   */\n      dup5\n        /* \"#utility.yul\":4930:4934   */\n      0x20\n        /* \"#utility.yul\":4922:4928   */\n      dup9\n        /* \"#utility.yul\":4918:4935   */\n      add\n        /* \"#utility.yul\":4896:4949   */\n      tag_604\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":5012:5025   */\n      dup4\n      mload\n        /* \"#utility.yul\":4971:4987   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5034:5091   */\n      tag_607\n        /* \"#utility.yul\":5012:5025   */\n      dup2\n        /* \"#utility.yul\":4971:4987   */\n      dup4\n        /* \"#utility.yul\":5068:5072   */\n      0x20\n        /* \"#utility.yul\":5056:5073   */\n      dup9\n      add\n        /* \"#utility.yul\":5034:5091   */\n      tag_604\n      jump\t// in\n    tag_607:\n      shl(0xd9, 0x173539b7b7)\n        /* \"#utility.yul\":5113:5133   */\n      swap2\n      add\n        /* \"#utility.yul\":5142:5164   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5191:5192   */\n      0x05\n        /* \"#utility.yul\":5180:5193   */\n      add\n      swap5\n        /* \"#utility.yul\":4562:5199   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5622:6110   */\n    tag_470:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5891:5906   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5873:5907   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5943:5958   */\n      dup5\n      and\n        /* \"#utility.yul\":5938:5940   */\n      0x20\n        /* \"#utility.yul\":5923:5941   */\n      dup3\n      add\n        /* \"#utility.yul\":5916:5959   */\n      mstore\n        /* \"#utility.yul\":5990:5992   */\n      0x40\n        /* \"#utility.yul\":5975:5993   */\n      dup2\n      add\n        /* \"#utility.yul\":5968:6002   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6038:6041   */\n      0x80\n        /* \"#utility.yul\":6033:6035   */\n      0x60\n        /* \"#utility.yul\":6018:6036   */\n      dup3\n      add\n        /* \"#utility.yul\":6011:6042   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5816:5820   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6059:6104   */\n      tag_611\n      swap1\n        /* \"#utility.yul\":6084:6103   */\n      dup4\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6059:6104   */\n      tag_601\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":6051:6104   */\n      swap7\n        /* \"#utility.yul\":5622:6110   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6307:6526   */\n    tag_55:\n        /* \"#utility.yul\":6456:6458   */\n      0x20\n        /* \"#utility.yul\":6445:6454   */\n      dup2\n        /* \"#utility.yul\":6438:6459   */\n      mstore\n        /* \"#utility.yul\":6419:6423   */\n      0x00\n        /* \"#utility.yul\":6476:6520   */\n      tag_388\n        /* \"#utility.yul\":6516:6518   */\n      0x20\n        /* \"#utility.yul\":6505:6514   */\n      dup4\n        /* \"#utility.yul\":6501:6519   */\n      add\n        /* \"#utility.yul\":6493:6499   */\n      dup5\n        /* \"#utility.yul\":6476:6520   */\n      tag_601\n      jump\t// in\n        /* \"#utility.yul\":8072:8428   */\n    tag_238:\n        /* \"#utility.yul\":8274:8276   */\n      0x20\n        /* \"#utility.yul\":8256:8277   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8293:8311   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8286:8316   */\n      mstore\n        /* \"#utility.yul\":8352:8386   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8347:8349   */\n      0x40\n        /* \"#utility.yul\":8332:8350   */\n      dup3\n      add\n        /* \"#utility.yul\":8325:8387   */\n      mstore\n        /* \"#utility.yul\":8419:8421   */\n      0x60\n        /* \"#utility.yul\":8404:8422   */\n      add\n      swap1\n        /* \"#utility.yul\":8072:8428   */\n      jump\t// out\n        /* \"#utility.yul\":10716:10844   */\n    tag_252:\n        /* \"#utility.yul\":10756:10759   */\n      0x00\n        /* \"#utility.yul\":10787:10788   */\n      dup3\n        /* \"#utility.yul\":10783:10789   */\n      not\n        /* \"#utility.yul\":10780:10781   */\n      dup3\n        /* \"#utility.yul\":10777:10790   */\n      gt\n        /* \"#utility.yul\":10774:10813   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":10793:10811   */\n      tag_629\n      tag_630\n      jump\t// in\n    tag_629:\n      pop\n        /* \"#utility.yul\":10829:10838   */\n      add\n      swap1\n        /* \"#utility.yul\":10716:10844   */\n      jump\t// out\n        /* \"#utility.yul\":10849:10969   */\n    tag_497:\n        /* \"#utility.yul\":10889:10890   */\n      0x00\n        /* \"#utility.yul\":10915:10916   */\n      dup3\n        /* \"#utility.yul\":10905:10940   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":10920:10938   */\n      tag_633\n      tag_634\n      jump\t// in\n    tag_633:\n      pop\n        /* \"#utility.yul\":10954:10963   */\n      div\n      swap1\n        /* \"#utility.yul\":10849:10969   */\n      jump\t// out\n        /* \"#utility.yul\":10974:11142   */\n    tag_333:\n        /* \"#utility.yul\":11014:11021   */\n      0x00\n        /* \"#utility.yul\":11080:11081   */\n      dup2\n        /* \"#utility.yul\":11076:11077   */\n      0x00\n        /* \"#utility.yul\":11072:11078   */\n      not\n        /* \"#utility.yul\":11068:11082   */\n      div\n        /* \"#utility.yul\":11065:11066   */\n      dup4\n        /* \"#utility.yul\":11062:11083   */\n      gt\n        /* \"#utility.yul\":11057:11058   */\n      dup3\n        /* \"#utility.yul\":11050:11059   */\n      iszero\n        /* \"#utility.yul\":11043:11060   */\n      iszero\n        /* \"#utility.yul\":11039:11084   */\n      and\n        /* \"#utility.yul\":11036:11107   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":11087:11105   */\n      tag_637\n      tag_630\n      jump\t// in\n    tag_637:\n      pop\n        /* \"#utility.yul\":11127:11136   */\n      mul\n      swap1\n        /* \"#utility.yul\":10974:11142   */\n      jump\t// out\n        /* \"#utility.yul\":11147:11272   */\n    tag_336:\n        /* \"#utility.yul\":11187:11191   */\n      0x00\n        /* \"#utility.yul\":11215:11216   */\n      dup3\n        /* \"#utility.yul\":11212:11213   */\n      dup3\n        /* \"#utility.yul\":11209:11217   */\n      lt\n        /* \"#utility.yul\":11206:11240   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":11220:11238   */\n      tag_640\n      tag_630\n      jump\t// in\n    tag_640:\n      pop\n        /* \"#utility.yul\":11257:11266   */\n      sub\n      swap1\n        /* \"#utility.yul\":11147:11272   */\n      jump\t// out\n        /* \"#utility.yul\":11277:11535   */\n    tag_604:\n        /* \"#utility.yul\":11349:11350   */\n      0x00\n        /* \"#utility.yul\":11359:11472   */\n    tag_642:\n        /* \"#utility.yul\":11373:11379   */\n      dup4\n        /* \"#utility.yul\":11370:11371   */\n      dup2\n        /* \"#utility.yul\":11367:11380   */\n      lt\n        /* \"#utility.yul\":11359:11472   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":11449:11460   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11443:11461   */\n      mload\n        /* \"#utility.yul\":11430:11441   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11423:11462   */\n      mstore\n        /* \"#utility.yul\":11395:11397   */\n      0x20\n        /* \"#utility.yul\":11388:11398   */\n      add\n        /* \"#utility.yul\":11359:11472   */\n      jump(tag_642)\n    tag_644:\n        /* \"#utility.yul\":11490:11496   */\n      dup4\n        /* \"#utility.yul\":11487:11488   */\n      dup2\n        /* \"#utility.yul\":11484:11497   */\n      gt\n        /* \"#utility.yul\":11481:11529   */\n      iszero\n      tag_370\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":11525:11526   */\n      0x00\n        /* \"#utility.yul\":11507:11523   */\n      swap2\n      add\n        /* \"#utility.yul\":11500:11527   */\n      mstore\n        /* \"#utility.yul\":11277:11535   */\n      jump\t// out\n        /* \"#utility.yul\":11540:11920   */\n    tag_207:\n        /* \"#utility.yul\":11619:11620   */\n      0x01\n        /* \"#utility.yul\":11615:11627   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":11662:11674   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":11683:11744   */\n      tag_647\n      jumpi\n        /* \"#utility.yul\":11737:11741   */\n      0x7f\n        /* \"#utility.yul\":11729:11735   */\n      dup3\n        /* \"#utility.yul\":11725:11742   */\n      and\n        /* \"#utility.yul\":11715:11742   */\n      swap2\n      pop\n        /* \"#utility.yul\":11683:11744   */\n    tag_647:\n        /* \"#utility.yul\":11790:11792   */\n      0x20\n        /* \"#utility.yul\":11782:11788   */\n      dup3\n        /* \"#utility.yul\":11779:11793   */\n      lt\n        /* \"#utility.yul\":11759:11777   */\n      dup2\n        /* \"#utility.yul\":11756:11794   */\n      eq\n        /* \"#utility.yul\":11753:11914   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":11836:11846   */\n      0x4e487b71\n        /* \"#utility.yul\":11831:11834   */\n      0xe0\n        /* \"#utility.yul\":11827:11847   */\n      shl\n        /* \"#utility.yul\":11824:11825   */\n      0x00\n        /* \"#utility.yul\":11817:11848   */\n      mstore\n        /* \"#utility.yul\":11871:11875   */\n      0x22\n        /* \"#utility.yul\":11868:11869   */\n      0x04\n        /* \"#utility.yul\":11861:11876   */\n      mstore\n        /* \"#utility.yul\":11899:11903   */\n      0x24\n        /* \"#utility.yul\":11896:11897   */\n      0x00\n        /* \"#utility.yul\":11889:11904   */\n      revert\n        /* \"#utility.yul\":11753:11914   */\n    tag_648:\n      pop\n        /* \"#utility.yul\":11540:11920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11925:12060   */\n    tag_495:\n        /* \"#utility.yul\":11964:11967   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":11985:12002   */\n      dup3\n      eq\n        /* \"#utility.yul\":11982:12025   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":12005:12023   */\n      tag_651\n      tag_630\n      jump\t// in\n    tag_651:\n      pop\n        /* \"#utility.yul\":12052:12053   */\n      0x01\n        /* \"#utility.yul\":12041:12054   */\n      add\n      swap1\n        /* \"#utility.yul\":11925:12060   */\n      jump\t// out\n        /* \"#utility.yul\":12065:12177   */\n    tag_506:\n        /* \"#utility.yul\":12097:12098   */\n      0x00\n        /* \"#utility.yul\":12123:12124   */\n      dup3\n        /* \"#utility.yul\":12113:12148   */\n      tag_654\n      jumpi\n        /* \"#utility.yul\":12128:12146   */\n      tag_654\n      tag_634\n      jump\t// in\n    tag_654:\n      pop\n        /* \"#utility.yul\":12162:12171   */\n      mod\n      swap1\n        /* \"#utility.yul\":12065:12177   */\n      jump\t// out\n        /* \"#utility.yul\":12182:12309   */\n    tag_630:\n        /* \"#utility.yul\":12243:12253   */\n      0x4e487b71\n        /* \"#utility.yul\":12238:12241   */\n      0xe0\n        /* \"#utility.yul\":12234:12254   */\n      shl\n        /* \"#utility.yul\":12231:12232   */\n      0x00\n        /* \"#utility.yul\":12224:12255   */\n      mstore\n        /* \"#utility.yul\":12274:12278   */\n      0x11\n        /* \"#utility.yul\":12271:12272   */\n      0x04\n        /* \"#utility.yul\":12264:12279   */\n      mstore\n        /* \"#utility.yul\":12298:12302   */\n      0x24\n        /* \"#utility.yul\":12295:12296   */\n      0x00\n        /* \"#utility.yul\":12288:12303   */\n      revert\n        /* \"#utility.yul\":12314:12441   */\n    tag_634:\n        /* \"#utility.yul\":12375:12385   */\n      0x4e487b71\n        /* \"#utility.yul\":12370:12373   */\n      0xe0\n        /* \"#utility.yul\":12366:12386   */\n      shl\n        /* \"#utility.yul\":12363:12364   */\n      0x00\n        /* \"#utility.yul\":12356:12387   */\n      mstore\n        /* \"#utility.yul\":12406:12410   */\n      0x12\n        /* \"#utility.yul\":12403:12404   */\n      0x04\n        /* \"#utility.yul\":12396:12411   */\n      mstore\n        /* \"#utility.yul\":12430:12434   */\n      0x24\n        /* \"#utility.yul\":12427:12428   */\n      0x00\n        /* \"#utility.yul\":12420:12435   */\n      revert\n        /* \"#utility.yul\":12446:12573   */\n    tag_510:\n        /* \"#utility.yul\":12507:12517   */\n      0x4e487b71\n        /* \"#utility.yul\":12502:12505   */\n      0xe0\n        /* \"#utility.yul\":12498:12518   */\n      shl\n        /* \"#utility.yul\":12495:12496   */\n      0x00\n        /* \"#utility.yul\":12488:12519   */\n      mstore\n        /* \"#utility.yul\":12538:12542   */\n      0x32\n        /* \"#utility.yul\":12535:12536   */\n      0x04\n        /* \"#utility.yul\":12528:12543   */\n      mstore\n        /* \"#utility.yul\":12562:12566   */\n      0x24\n        /* \"#utility.yul\":12559:12560   */\n      0x00\n        /* \"#utility.yul\":12552:12567   */\n      revert\n        /* \"#utility.yul\":12578:12705   */\n    tag_500:\n        /* \"#utility.yul\":12639:12649   */\n      0x4e487b71\n        /* \"#utility.yul\":12634:12637   */\n      0xe0\n        /* \"#utility.yul\":12630:12650   */\n      shl\n        /* \"#utility.yul\":12627:12628   */\n      0x00\n        /* \"#utility.yul\":12620:12651   */\n      mstore\n        /* \"#utility.yul\":12670:12674   */\n      0x41\n        /* \"#utility.yul\":12667:12668   */\n      0x04\n        /* \"#utility.yul\":12660:12675   */\n      mstore\n        /* \"#utility.yul\":12694:12698   */\n      0x24\n        /* \"#utility.yul\":12691:12692   */\n      0x00\n        /* \"#utility.yul\":12684:12699   */\n      revert\n        /* \"#utility.yul\":12710:12841   */\n    tag_590:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":12784:12816   */\n      dup2\n      and\n        /* \"#utility.yul\":12774:12817   */\n      dup2\n      eq\n        /* \"#utility.yul\":12764:12835   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":12831:12832   */\n      0x00\n        /* \"#utility.yul\":12828:12829   */\n      dup1\n        /* \"#utility.yul\":12821:12833   */\n      revert\n\n    auxdata: 0xa2646970667358221220d057d185ec624e9aefb7cafa917db8c968109482985087f3d30848648bd9b03c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2264": {
									"entryPoint": null,
									"id": 2264,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_284": {
									"entryPoint": null,
									"id": 284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_1003": {
									"entryPoint": null,
									"id": 1003,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_364": {
									"entryPoint": 253,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_uint256t_uint256t_boolt_uint256_fromMemory": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"extract_byte_array_length": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2177:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "71:107:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "81:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "96:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "90:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "90:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "81:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "156:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "165:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "168:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "158:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "158:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "125:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "146:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "139:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "139:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "132:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "132:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "122:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "122:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:40:1"
															},
															"nodeType": "YulIf",
															"src": "112:60:1"
														}
													]
												},
												"name": "abi_decode_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "50:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "14:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:1285:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "420:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "429:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "422:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "422:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "422:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "394:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "403:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "390:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "390:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "415:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:33:1"
															},
															"nodeType": "YulIf",
															"src": "383:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "445:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "461:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "455:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "480:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "490:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "484:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "501:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "521:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "532:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "517:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "511:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "545:39:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "569:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "580:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "565:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "565:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "559:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:25:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "549:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "593:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "611:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "615:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "607:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "619:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "603:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "597:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "636:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "644:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "633:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:14:1"
															},
															"nodeType": "YulIf",
															"src": "630:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "673:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "687:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "677:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "753:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "762:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "765:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "755:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "755:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "755:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "732:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "736:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "728:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "728:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "743:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "724:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:35:1"
															},
															"nodeType": "YulIf",
															"src": "714:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "778:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "794:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "788:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "782:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "820:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "822:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "822:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "822:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "812:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "816:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "809:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:10:1"
															},
															"nodeType": "YulIf",
															"src": "806:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "851:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:7:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "855:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "877:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "897:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "891:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "881:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "931:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "955:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "959:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "951:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "951:13:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "966:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "947:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "947:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "943:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "943:31:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "976:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "927:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "913:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1039:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1041:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1041:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1041:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "998:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1010:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "995:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "995:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1018:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1015:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:46:1"
															},
															"nodeType": "YulIf",
															"src": "989:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1081:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1070:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1108:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1116:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1101:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1142:2:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1146:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1138:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1151:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1156:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1131:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:33:1"
															},
															"nodeType": "YulIf",
															"src": "1128:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1190:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1199:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1194:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1255:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1284:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1292:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1280:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1280:14:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1296:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1276:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1276:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1315:2:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1319:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1311:10:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1323:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1307:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1307:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1301:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1301:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1269:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1269:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1269:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1220:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1223:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1217:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1227:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1229:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1238:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1241:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1234:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1234:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1229:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1213:3:1",
																"statements": []
															},
															"src": "1209:129:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1368:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1397:6:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1405:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1393:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1393:15:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1410:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1389:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1389:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1415:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1382:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1353:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1356:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1350:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:9:1"
															},
															"nodeType": "YulIf",
															"src": "1347:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1436:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1446:6:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1436:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1461:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1481:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1492:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:25:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1505:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1515:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:26:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1602:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1587:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1560:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:47:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1647:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1626:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:26:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_uint256t_uint256t_boolt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "291:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "302:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "314:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "322:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "330:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "338:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "346:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "354:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "362:6:1",
														"type": ""
													}
												],
												"src": "183:1475:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1718:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1728:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1742:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1745:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1759:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1789:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1795:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1763:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1836:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1838:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1852:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1848:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1848:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1816:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:26:1"
															},
															"nodeType": "YulIf",
															"src": "1806:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1947:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1954:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1959:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1950:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1950:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1991:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1994:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1882:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1913:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1902:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1902:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1879:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:38:1"
															},
															"nodeType": "YulIf",
															"src": "1876:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1698:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1707:6:1",
														"type": ""
													}
												],
												"src": "1663:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2104:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2109:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2100:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2140:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2161:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2154:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2048:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_uint256t_uint256t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := mload(headStart)\n        let _1 := 32\n        value1 := mload(add(headStart, _1))\n        let offset := mload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value2 := memPtr\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := abi_decode_bool_fromMemory(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620023953803806200239583398101604081905262000034916200020b565b604080518082018252600e81526d29ba37b732b939aa37bbb72bba3360911b60208083019182528351808501909452600384526253545760e81b90840152815191929162000085916002916200014f565b5080516200009b9060039060208401906200014f565b5050600160005550620000ae33620000fd565b6001600955600a879055600b8690558451620000d290600c9060208801906200014f565b50600d93909355600e91909155600f805460ff19169115159190911790556010555062000381915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015d906200032e565b90600052602060002090601f016020900481019282620001815760008555620001cc565b82601f106200019c57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cc578251825591602001919060010190620001af565b50620001da929150620001de565b5090565b5b80821115620001da5760008155600101620001df565b805180151581146200020657600080fd5b919050565b600080600080600080600060e0888a0312156200022757600080fd5b87516020808a015160408b01519299509750906001600160401b03808211156200025057600080fd5b818b0191508b601f8301126200026557600080fd5b8151818111156200027a576200027a6200036b565b604051601f8201601f19908116603f01168101908382118183101715620002a557620002a56200036b565b816040528281528e86848701011115620002be57600080fd5b600093505b82841015620002e25784840186015181850187015292850192620002c3565b82841115620002f45760008684830101525b809a5050505050505060608801519350608088015192506200031960a08901620001f5565b915060c0880151905092959891949750929550565b600181811c908216806200034357607f821691505b602082108114156200036557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61200480620003916000396000f3fe6080604052600436106102045760003560e01c8063841718a611610118578063c4e9374d116100a0578063e1b5a2721161006f578063e1b5a272146105a2578063e985e9c5146105b8578063eae9c95d14610601578063f2fde38b14610617578063fdb4953a1461063757600080fd5b8063c4e9374d14610537578063c87b56dd14610557578063c8eca56214610577578063d111515d1461058d57600080fd5b806395d89b41116100e757806395d89b41146104af578063a0712d68146104c4578063a22cb465146104d7578063b0551ac4146104f7578063b88d4fde1461051757600080fd5b8063841718a6146104315780638b85e43d146104515780638da5cb5b1461047157806391b7f5ed1461048f57600080fd5b8063408cbf941161019b578063616cdb1e1161016a578063616cdb1e146103a25780636352211e146103c257806370a08231146103e2578063715018a61461040257806376d02b711461041757600080fd5b8063408cbf941461032c57806342842e0e1461034c5780635381f6e21461036c57806355f804b31461038257600080fd5b806318160ddd116101d757806318160ddd146102ba57806323b872dd146102e157806328cb250f146103015780633ccfd60b1461031757600080fd5b806301ffc9a71461020957806306fdde031461023e578063081812fc14610260578063095ea7b314610298575b600080fd5b34801561021557600080fd5b50610229610224366004611cdc565b610651565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b506102536106a3565b6040516102359190611e20565b34801561026c57600080fd5b5061028061027b366004611d5f565b610735565b6040516001600160a01b039091168152602001610235565b3480156102a457600080fd5b506102b86102b3366004611c97565b610779565b005b3480156102c657600080fd5b5060015460005403600019015b604051908152602001610235565b3480156102ed57600080fd5b506102b86102fc366004611bb5565b610807565b34801561030d57600080fd5b506102d3600e5481565b34801561032357600080fd5b506102b8610812565b34801561033857600080fd5b506102b8610347366004611c97565b6108c4565b34801561035857600080fd5b506102b8610367366004611bb5565b6109a4565b34801561037857600080fd5b506102d3600d5481565b34801561038e57600080fd5b506102b861039d366004611d16565b6109bf565b3480156103ae57600080fd5b506102b86103bd366004611d5f565b610a46565b3480156103ce57600080fd5b506102806103dd366004611d5f565b610a75565b3480156103ee57600080fd5b506102d36103fd366004611b67565b610a87565b34801561040e57600080fd5b506102b8610ad6565b34801561042357600080fd5b50600f546102299060ff1681565b34801561043d57600080fd5b506102b861044c366004611cc1565b610b0c565b34801561045d57600080fd5b506102b861046c366004611d5f565b610b49565b34801561047d57600080fd5b506008546001600160a01b0316610280565b34801561049b57600080fd5b506102b86104aa366004611d5f565b610b78565b3480156104bb57600080fd5b50610253610ba7565b6102b86104d2366004611d5f565b610bb6565b3480156104e357600080fd5b506102b86104f2366004611c6d565b610d91565b34801561050357600080fd5b506102b8610512366004611d5f565b610e27565b34801561052357600080fd5b506102b8610532366004611bf1565b610e56565b34801561054357600080fd5b506102b8610552366004611d5f565b610ea7565b34801561056357600080fd5b50610253610572366004611d5f565b610f6b565b34801561058357600080fd5b506102d3600a5481565b34801561059957600080fd5b506102b8610ff0565b3480156105ae57600080fd5b506102d360105481565b3480156105c457600080fd5b506102296105d3366004611b82565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561060d57600080fd5b506102d3600b5481565b34801561062357600080fd5b506102b8610632366004611b67565b611029565b34801561064357600080fd5b506011546102299060ff1681565b60006001600160e01b031982166380ac58cd60e01b148061068257506001600160e01b03198216635b5e139f60e01b145b8061069d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546106b290611ef6565b80601f01602080910402602001604051908101604052809291908181526020018280546106de90611ef6565b801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b5050505050905090565b6000610740826110c4565b61075d576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061078482610a75565b9050806001600160a01b0316836001600160a01b031614156107b95760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906107d957506107d781336105d3565b155b156107f7576040516367d9dca160e11b815260040160405180910390fd5b6108028383836110fd565b505050565b610802838383611159565b6008546001600160a01b031633146108455760405162461bcd60e51b815260040161083c90611e33565b60405180910390fd5b600260095414156108985760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161083c565b6002600955476108bc732e45a3053639ce97f43b4761ca9332ea7b5adb8a8261136f565b506001600955565b806000811180156108d75750600e548111155b61091a5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b604482015260640161083c565b600b548160005461092b9190611e68565b11156109705760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b604482015260640161083c565b6008546001600160a01b0316331461099a5760405162461bcd60e51b815260040161083c90611e33565b6108028383611488565b61080283838360405180602001604052806000815250610e56565b6008546001600160a01b031633146109e95760405162461bcd60e51b815260040161083c90611e33565b60115460ff1615610a2f5760405162461bcd60e51b815260206004820152601060248201526f4d657461646174612066726f7a656e2160801b604482015260640161083c565b8051610a4290600c906020840190611a2c565b5050565b6008546001600160a01b03163314610a705760405162461bcd60e51b815260040161083c90611e33565b600e55565b6000610a80826114a2565b5192915050565b60006001600160a01b038216610ab0576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b03163314610b005760405162461bcd60e51b815260040161083c90611e33565b610b0a60006115cb565b565b6008546001600160a01b03163314610b365760405162461bcd60e51b815260040161083c90611e33565b600f805460ff1916911515919091179055565b6008546001600160a01b03163314610b735760405162461bcd60e51b815260040161083c90611e33565b601055565b6008546001600160a01b03163314610ba25760405162461bcd60e51b815260040161083c90611e33565b600a55565b6060600380546106b290611ef6565b80600081118015610bc95750600e548111155b610c0c5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b604482015260640161083c565b600b5481600054610c1d9190611e68565b1115610c625760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b604482015260640161083c565b600f5460ff16610caa5760405162461bcd60e51b815260206004820152601360248201527253616c65206973206e6f74206163746976652160681b604482015260640161083c565b600082600a54610cba9190611e94565b90506010546000541015610d415733600090815260126020526040812054600d54610ce59190611eb3565b90508015610d3f57808410610d1c57600a54610d019082611e94565b610d0b9083611eb3565b9150610d17338261161d565b610d3f565b600a54610d299085611e94565b610d339083611eb3565b9150610d3f338561161d565b505b80341015610d875760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b604482015260640161083c565b6108023384611488565b6001600160a01b038216331415610dbb5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b03163314610e515760405162461bcd60e51b815260040161083c90611e33565b600d55565b610e61848484611159565b6001600160a01b0383163b15158015610e835750610e818484848461164e565b155b15610ea1576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6008546001600160a01b03163314610ed15760405162461bcd60e51b815260040161083c90611e33565b600b548110610f1b5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b604482015260640161083c565b600054811015610f665760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b604482015260640161083c565b600b55565b6060610f76826110c4565b610f9357604051630a14c4b560e41b815260040160405180910390fd5b6000610f9d611746565b9050805160001415610fbe5760405180602001604052806000815250610fe9565b80610fc884611755565b604051602001610fd9929190611da4565b6040516020818303038152906040525b9392505050565b6008546001600160a01b0316331461101a5760405162461bcd60e51b815260040161083c90611e33565b6011805460ff19166001179055565b6008546001600160a01b031633146110535760405162461bcd60e51b815260040161083c90611e33565b6001600160a01b0381166110b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161083c565b6110c1816115cb565b50565b6000816001111580156110d8575060005482105b801561069d575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611164826114a2565b80519091506000906001600160a01b0316336001600160a01b031614806111925750815161119290336105d3565b806111ad5750336111a284610735565b6001600160a01b0316145b9050806111cd57604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b0316146112025760405162a1148160e81b815260040160405180910390fd5b6001600160a01b03841661122957604051633a954ecd60e21b815260040160405180910390fd5b61123960008484600001516110fd565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021790925590860180835291205490911661132557600054811015611325578251600082815260046020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b804710156113bf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161083c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461140c576040519150601f19603f3d011682016040523d82523d6000602084013e611411565b606091505b50509050806108025760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161083c565b610a42828260405180602001604052806000815250611853565b604080516060810182526000808252602082018190529181019190915281806001111580156114d2575060005481105b156115b257600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906115b05780516001600160a01b031615611546579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156115ab579392505050565b611546565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821660009081526012602052604081208054839290611645908490611e68565b90915550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611683903390899088908890600401611de3565b602060405180830381600087803b15801561169d57600080fd5b505af19250505080156116cd575060408051601f3d908101601f191682019092526116ca91810190611cf9565b60015b611728573d8080156116fb576040519150601f19603f3d011682016040523d82523d6000602084013e611700565b606091505b508051611720576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600c80546106b290611ef6565b6060816117795750506040805180820190915260018152600360fc1b602082015290565b8160005b81156117a3578061178d81611f31565b915061179c9050600a83611e80565b915061177d565b60008167ffffffffffffffff8111156117be576117be611fa2565b6040519080825280601f01601f1916602001820160405280156117e8576020820181803683370190505b5090505b841561173e576117fd600183611eb3565b915061180a600a86611f4c565b611815906030611e68565b60f81b81838151811061182a5761182a611f8c565b60200101906001600160f81b031916908160001a90535061184c600a86611e80565b94506117ec565b61080283838360016000546001600160a01b03851661188457604051622e076360e81b815260040160405180910390fd5b836118a25760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b42909216919091021790558080850183801561195457506001600160a01b0387163b15155b156119dd575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46119a5600088848060010195508861164e565b6119c2576040516368d2bf6b60e11b815260040160405180910390fd5b8082141561195a5782600054146119d857600080fd5b611a23565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808214156119de575b50600055611368565b828054611a3890611ef6565b90600052602060002090601f016020900481019282611a5a5760008555611aa0565b82601f10611a7357805160ff1916838001178555611aa0565b82800160010185558215611aa0579182015b82811115611aa0578251825591602001919060010190611a85565b50611aac929150611ab0565b5090565b5b80821115611aac5760008155600101611ab1565b600067ffffffffffffffff80841115611ae057611ae0611fa2565b604051601f8501601f19908116603f01168101908282118183101715611b0857611b08611fa2565b81604052809350858152868686011115611b2157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611b5257600080fd5b919050565b80358015158114611b5257600080fd5b600060208284031215611b7957600080fd5b610fe982611b3b565b60008060408385031215611b9557600080fd5b611b9e83611b3b565b9150611bac60208401611b3b565b90509250929050565b600080600060608486031215611bca57600080fd5b611bd384611b3b565b9250611be160208501611b3b565b9150604084013590509250925092565b60008060008060808587031215611c0757600080fd5b611c1085611b3b565b9350611c1e60208601611b3b565b925060408501359150606085013567ffffffffffffffff811115611c4157600080fd5b8501601f81018713611c5257600080fd5b611c6187823560208401611ac5565b91505092959194509250565b60008060408385031215611c8057600080fd5b611c8983611b3b565b9150611bac60208401611b57565b60008060408385031215611caa57600080fd5b611cb383611b3b565b946020939093013593505050565b600060208284031215611cd357600080fd5b610fe982611b57565b600060208284031215611cee57600080fd5b8135610fe981611fb8565b600060208284031215611d0b57600080fd5b8151610fe981611fb8565b600060208284031215611d2857600080fd5b813567ffffffffffffffff811115611d3f57600080fd5b8201601f81018413611d5057600080fd5b61173e84823560208401611ac5565b600060208284031215611d7157600080fd5b5035919050565b60008151808452611d90816020860160208601611eca565b601f01601f19169290920160200192915050565b60008351611db6818460208801611eca565b835190830190611dca818360208801611eca565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e1690830184611d78565b9695505050505050565b602081526000610fe96020830184611d78565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611e7b57611e7b611f60565b500190565b600082611e8f57611e8f611f76565b500490565b6000816000190483118215151615611eae57611eae611f60565b500290565b600082821015611ec557611ec5611f60565b500390565b60005b83811015611ee5578181015183820152602001611ecd565b83811115610ea15750506000910152565b600181811c90821680611f0a57607f821691505b60208210811415611f2b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611f4557611f45611f60565b5060010190565b600082611f5b57611f5b611f76565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146110c157600080fdfea2646970667358221220d057d185ec624e9aefb7cafa917db8c968109482985087f3d30848648bd9b03c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2395 CODESIZE SUB DUP1 PUSH3 0x2395 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x20B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x29BA37B732B939AA37BBB72BBA33 PUSH1 0x91 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH3 0x535457 PUSH1 0xE8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x85 SWAP2 PUSH1 0x2 SWAP2 PUSH3 0x14F JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x9B SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x14F JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP PUSH3 0xAE CALLER PUSH3 0xFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 SSTORE PUSH1 0xA DUP8 SWAP1 SSTORE PUSH1 0xB DUP7 SWAP1 SSTORE DUP5 MLOAD PUSH3 0xD2 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP9 ADD SWAP1 PUSH3 0x14F JUMP JUMPDEST POP PUSH1 0xD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xE SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x10 SSTORE POP PUSH3 0x381 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x15D SWAP1 PUSH3 0x32E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x181 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1CC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x19C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1CC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1CC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1CC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1AF JUMP JUMPDEST POP PUSH3 0x1DA SWAP3 SWAP2 POP PUSH3 0x1DE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1DA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1DF JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP1 DUP11 ADD MLOAD PUSH1 0x40 DUP12 ADD MLOAD SWAP3 SWAP10 POP SWAP8 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x27A JUMPI PUSH3 0x27A PUSH3 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2A5 JUMPI PUSH3 0x2A5 PUSH3 0x36B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP15 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x2E2 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x2C3 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x2F4 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST DUP1 SWAP11 POP POP POP POP POP POP POP PUSH1 0x60 DUP9 ADD MLOAD SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD SWAP3 POP PUSH3 0x319 PUSH1 0xA0 DUP10 ADD PUSH3 0x1F5 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x343 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x365 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2004 DUP1 PUSH3 0x391 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x841718A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xC4E9374D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE1B5A272 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE1B5A272 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xEAE9C95D EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0xFDB4953A EQ PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4E9374D EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xC8ECA562 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xD111515D EQ PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xB0551AC4 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x841718A6 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x8B85E43D EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x408CBF94 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x616CDB1E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x616CDB1E EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x76D02B71 EQ PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x408CBF94 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x5381F6E2 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x28CB250F EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x298 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CDC JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xA75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xAD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC1 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x46C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x532 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xEA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xFF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x632 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1029 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x682 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x69D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DE SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x72B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x700 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x72B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x70E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP3 PUSH2 0xA75 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x250FDEE3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7D9 JUMPI POP PUSH2 0x7D7 DUP2 CALLER PUSH2 0x5D3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH2 0x10FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x9 SLOAD EQ ISZERO PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9 SSTORE SELFBALANCE PUSH2 0x8BC PUSH20 0x2E45A3053639CE97F43B4761CA9332EA7B5ADB8A DUP3 PUSH2 0x136F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x9 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x8D7 JUMPI POP PUSH1 0xE SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x91A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST GT ISZERO PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4D657461646174612066726F7A656E21 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST DUP1 MLOAD PUSH2 0xA42 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1A2C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA80 DUP3 PUSH2 0x14A2 JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH2 0xB0A PUSH1 0x0 PUSH2 0x15CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xBC9 JUMPI POP PUSH1 0xE SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST GT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x53616C65206973206E6F742061637469766521 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA SLOAD PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x10 SLOAD PUSH1 0x0 SLOAD LT ISZERO PUSH2 0xD41 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xD SLOAD PUSH2 0xCE5 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD3F JUMPI DUP1 DUP5 LT PUSH2 0xD1C JUMPI PUSH1 0xA SLOAD PUSH2 0xD01 SWAP1 DUP3 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xD0B SWAP1 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0xD17 CALLER DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xD29 SWAP1 DUP6 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xD33 SWAP1 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0xD3F CALLER DUP6 PUSH2 0x161D JUMP JUMPDEST POP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E742066756E647321 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH2 0x802 CALLER DUP5 PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0xE61 DUP5 DUP5 DUP5 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO ISZERO DUP1 ISZERO PUSH2 0xE83 JUMPI POP PUSH2 0xE81 DUP5 DUP5 DUP5 DUP5 PUSH2 0x164E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xED1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF76 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9D PUSH2 0x1746 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFE9 JUMP JUMPDEST DUP1 PUSH2 0xFC8 DUP5 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFD9 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x83C JUMP JUMPDEST PUSH2 0x10C1 DUP2 PUSH2 0x15CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x10D8 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x69D JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1164 DUP3 PUSH2 0x14A2 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1192 JUMPI POP DUP2 MLOAD PUSH2 0x1192 SWAP1 CALLER PUSH2 0x5D3 JUMP JUMPDEST DUP1 PUSH2 0x11AD JUMPI POP CALLER PUSH2 0x11A2 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1229 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1239 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE DUP10 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP3 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x1325 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1325 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x140C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x83C JUMP JUMPDEST PUSH2 0xA42 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP1 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x14D2 JUMPI POP PUSH1 0x0 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x15B0 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1546 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO PUSH2 0x15AB JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1645 SWAP1 DUP5 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1683 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x169D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16CD JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x16CA SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1728 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x16FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1779 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x17A3 JUMPI DUP1 PUSH2 0x178D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP PUSH2 0x179C SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1E80 JUMP JUMPDEST SWAP2 POP PUSH2 0x177D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BE JUMPI PUSH2 0x17BE PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x173E JUMPI PUSH2 0x17FD PUSH1 0x1 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x180A PUSH1 0xA DUP7 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x1815 SWAP1 PUSH1 0x30 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x182A JUMPI PUSH2 0x182A PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x184C PUSH1 0xA DUP7 PUSH2 0x1E80 JUMP JUMPDEST SWAP5 POP PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP13 ADD DUP2 AND SWAP2 DUP3 OR PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP1 SWAP3 OR DUP4 SWAP1 DIV DUP2 AND DUP13 ADD DUP2 AND SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE DUP6 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP1 DUP1 DUP6 ADD DUP4 DUP1 ISZERO PUSH2 0x1954 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EXTCODESIZE ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x19DD JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH2 0x19A5 PUSH1 0x0 DUP9 DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP DUP9 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x19C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 EQ ISZERO PUSH2 0x195A JUMPI DUP3 PUSH1 0x0 SLOAD EQ PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A23 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP4 ADD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP1 DUP3 EQ ISZERO PUSH2 0x19DE JUMPI JUMPDEST POP PUSH1 0x0 SSTORE PUSH2 0x1368 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1A38 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1A5A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1AA0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A73 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AA0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AA0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AA0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A85 JUMP JUMPDEST POP PUSH2 0x1AAC SWAP3 SWAP2 POP PUSH2 0x1AB0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AAC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1AE0 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1B08 JUMPI PUSH2 0x1B08 PUSH2 0x1FA2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE9 DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9E DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAC PUSH1 0x20 DUP5 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BD3 DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 POP PUSH2 0x1BE1 PUSH1 0x20 DUP6 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C10 DUP6 PUSH2 0x1B3B JUMP JUMPDEST SWAP4 POP PUSH2 0x1C1E PUSH1 0x20 DUP7 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1C52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C61 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1AC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C89 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAC PUSH1 0x20 DUP5 ADD PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB3 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE9 DUP3 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFE9 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFE9 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D90 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1DB6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1ECA JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1DCA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1ECA JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E16 SWAP1 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7B PUSH2 0x1F60 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E8F JUMPI PUSH2 0x1E8F PUSH2 0x1F76 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1EAE JUMPI PUSH2 0x1EAE PUSH2 0x1F60 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC5 PUSH2 0x1F60 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EE5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1ECD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F0A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F45 PUSH2 0x1F60 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F5B JUMPI PUSH2 0x1F5B PUSH2 0x1F76 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x10C1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 JUMPI 0xD1 DUP6 0xEC PUSH3 0x4E9AEF 0xB7 0xCA STATICCALL SWAP2 PUSH30 0xB8C968109482985087F3D30848648BD9B03C64736F6C6343000807003300 ",
							"sourceMap": "49335:4132:0:-:0;;;49758:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31037:154;;;;;;;;;;;-1:-1:-1;;;31037:154:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;31037:154:0;;;;31103:13;;31037:154;;;31103:13;;:5;;:13;:::i;:::-;-1:-1:-1;31126:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;31365:1:0;31153:13;:31;-1:-1:-1;8670:32:0;7632:10;8670:18;:32::i;:::-;3878:1;3983:7;:22;50032:8:::1;:16:::0;;;50058:7:::1;:19:::0;;;50087;;::::1;::::0;:9:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;50116:16:0::1;:36:::0;;;;50162:14:::1;:29:::0;;;;50201:14:::1;:29:::0;;-1:-1:-1;;50201:29:0::1;::::0;::::1;;::::0;;;::::1;::::0;;50240:19:::1;:44:::0;-1:-1:-1;49335:4132:0;;-1:-1:-1;;49335:4132:0;10019:187;10111:6;;;-1:-1:-1;;;;;10127:17:0;;;-1:-1:-1;;;;;;10127:17:0;;;;;;;10159:40;;10111:6;;;10127:17;10111:6;;10159:40;;10092:16;;10159:40;10082:124;10019:187;:::o;49335:4132::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;49335:4132:0;;;-1:-1:-1;49335:4132:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:164:1;90:13;;139;;132:21;122:32;;112:60;;168:1;165;158:12;112:60;14:164;;;:::o;183:1475::-;314:6;322;330;338;346;354;362;415:3;403:9;394:7;390:23;386:33;383:53;;;432:1;429;422:12;383:53;455:16;;490:2;517:18;;;511:25;580:2;565:18;;559:25;455:16;;-1:-1:-1;511:25:1;-1:-1:-1;490:2:1;-1:-1:-1;;;;;633:14:1;;;630:34;;;660:1;657;650:12;630:34;698:6;687:9;683:22;673:32;;743:7;736:4;732:2;728:13;724:27;714:55;;765:1;762;755:12;714:55;794:2;788:9;816:2;812;809:10;806:36;;;822:18;;:::i;:::-;897:2;891:9;865:2;951:13;;-1:-1:-1;;947:22:1;;;971:2;943:31;939:40;927:53;;;995:18;;;1015:22;;;992:46;989:72;;;1041:18;;:::i;:::-;1081:10;1077:2;1070:22;1116:2;1108:6;1101:18;1156:7;1151:2;1146;1142;1138:11;1134:20;1131:33;1128:53;;;1177:1;1174;1167:12;1128:53;1199:1;1190:10;;1209:129;1223:2;1220:1;1217:9;1209:129;;;1311:10;;;1307:19;;1301:26;1280:14;;;1276:23;;1269:59;1234:10;;;;1209:129;;;1356:2;1353:1;1350:9;1347:80;;;1415:1;1410:2;1405;1397:6;1393:15;1389:24;1382:35;1347:80;1446:6;1436:16;;;;;;;;1492:2;1481:9;1477:18;1471:25;1461:35;;1536:3;1525:9;1521:19;1515:26;1505:36;;1560:47;1602:3;1591:9;1587:19;1560:47;:::i;:::-;1550:57;;1647:3;1636:9;1632:19;1626:26;1616:36;;183:1475;;;;;;;;;;:::o;1663:380::-;1742:1;1738:12;;;;1785;;;1806:61;;1860:4;1852:6;1848:17;1838:27;;1806:61;1913:2;1905:6;1902:14;1882:18;1879:38;1876:161;;;1959:10;1954:3;1950:20;1947:1;1940:31;1994:4;1991:1;1984:15;2022:4;2019:1;2012:15;1876:161;;1663:380;;;:::o;2048:127::-;2109:10;2104:3;2100:20;2097:1;2090:31;2140:4;2137:1;2130:15;2164:4;2161:1;2154:15;2048:127;49335:4132:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@IS_SALE_ACTIVE_2206": {
									"entryPoint": null,
									"id": 2206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@METADATA_FROZEN_2210": {
									"entryPoint": null,
									"id": 2210,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfers_2183": {
									"entryPoint": null,
									"id": 2183,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2102": {
									"entryPoint": 4349,
									"id": 2102,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_2289": {
									"entryPoint": 5958,
									"id": 2289,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2170": {
									"entryPoint": null,
									"id": 2170,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2157": {
									"entryPoint": 5710,
									"id": 2157,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1573": {
									"entryPoint": 4292,
									"id": 1573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_1772": {
									"entryPoint": null,
									"id": 1772,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeMint_1587": {
									"entryPoint": 5256,
									"id": 1587,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1605": {
									"entryPoint": 6227,
									"id": 1605,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_1003": {
									"entryPoint": null,
									"id": 1003,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_364": {
									"entryPoint": 5579,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1938": {
									"entryPoint": 4441,
									"id": 1938,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1402": {
									"entryPoint": 1913,
									"id": 1402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1090": {
									"entryPoint": 2695,
									"id": 1090,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@budPrice_2196": {
									"entryPoint": null,
									"id": 2196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@freeBudAllowedUntil_2208": {
									"entryPoint": null,
									"id": 2208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@freeBudPerWallet_2202": {
									"entryPoint": null,
									"id": 2202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@freezeMetadata_2404": {
									"entryPoint": 4080,
									"id": 2404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_1424": {
									"entryPoint": 1845,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1476": {
									"entryPoint": null,
									"id": 1476,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_382": {
									"entryPoint": null,
									"id": 382,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lowerMaxSupply_2328": {
									"entryPoint": 3751,
									"id": 2328,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@maxBudPerTrans_2204": {
									"entryPoint": null,
									"id": 2204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxbuds_2198": {
									"entryPoint": null,
									"id": 2198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintOwner_2532": {
									"entryPoint": 2244,
									"id": 2532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_2514": {
									"entryPoint": 2998,
									"id": 2514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_1293": {
									"entryPoint": 1699,
									"id": 1293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1283": {
									"entryPoint": 2677,
									"id": 1283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_293": {
									"entryPoint": null,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownershipOf_1268": {
									"entryPoint": 5282,
									"id": 1268,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_321": {
									"entryPoint": 2774,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1513": {
									"entryPoint": 2468,
									"id": 1513,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1549": {
									"entryPoint": 3670,
									"id": 1549,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@sendValue_416": {
									"entryPoint": 4975,
									"id": 416,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setApprovalForAll_1458": {
									"entryPoint": 3473,
									"id": 1458,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseURI_2346": {
									"entryPoint": 2495,
									"id": 2346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFreeMintAllowance_2358": {
									"entryPoint": 3623,
									"id": 2358,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFreeMintAllowedUntil_2394": {
									"entryPoint": 2889,
									"id": 2394,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxMintPerTx_2370": {
									"entryPoint": 2630,
									"id": 2370,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPrice_2302": {
									"entryPoint": 2936,
									"id": 2302,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSaleActive_2382": {
									"entryPoint": 2828,
									"id": 2382,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1062": {
									"entryPoint": 1617,
									"id": 1062,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_708": {
									"entryPoint": null,
									"id": 708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1303": {
									"entryPoint": 2983,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_123": {
									"entryPoint": 5973,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1347": {
									"entryPoint": 3947,
									"id": 1347,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1494": {
									"entryPoint": 2055,
									"id": 1494,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_344": {
									"entryPoint": 4137,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateFreeMintCount_2279": {
									"entryPoint": 5661,
									"id": 2279,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_2562": {
									"entryPoint": 2066,
									"id": 2562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 7361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7651,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12843:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:557:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "98:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "108:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "102:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "153:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "155:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "155:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "155:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "141:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "149:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "138:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "138:14:1"
															},
															"nodeType": "YulIf",
															"src": "135:40:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:7:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "210:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "230:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "224:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "214:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "264:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "288:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "296:2:1",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "284:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "284:15:1"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "301:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "280:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "280:24:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "306:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "276:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "276:33:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "311:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "272:42:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "260:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:55:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "246:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "374:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "376:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "376:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "376:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "333:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "345:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "330:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "353:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "365:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "350:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "327:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:46:1"
															},
															"nodeType": "YulIf",
															"src": "324:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "416:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "436:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "445:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:22:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "501:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "515:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "494:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:25:1"
															},
															"nodeType": "YulIf",
															"src": "491:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "562:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "570:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:17:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "582:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "545:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "613:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "621:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "609:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "609:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "630:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:30:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "14:631:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "699:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "709:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "718:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "709:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "760:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "786:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "791:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "782:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "782:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "795:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "778:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "778:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "767:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "767:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "757:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:50:1"
															},
															"nodeType": "YulIf",
															"src": "747:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "678:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:1",
														"type": ""
													}
												],
												"src": "650:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "874:114:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "884:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "906:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "893:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "893:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "884:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "966:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "975:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "978:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "968:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "968:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "968:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "935:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "956:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "949:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "949:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "942:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "942:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "932:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "932:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "925:40:1"
															},
															"nodeType": "YulIf",
															"src": "922:60:1"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "853:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "864:5:1",
														"type": ""
													}
												],
												"src": "828:160:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1063:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1109:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1118:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1121:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1111:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1111:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1084:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1093:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:32:1"
															},
															"nodeType": "YulIf",
															"src": "1073:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1134:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1144:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1029:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1040:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1052:6:1",
														"type": ""
													}
												],
												"src": "993:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1271:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1326:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1329:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1319:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1292:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1301:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1284:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:32:1"
															},
															"nodeType": "YulIf",
															"src": "1281:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1342:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1371:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1352:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1390:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1423:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1434:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1260:6:1",
														"type": ""
													}
												],
												"src": "1184:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1599:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1611:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1601:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1601:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1601:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1574:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1583:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1570:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1566:32:1"
															},
															"nodeType": "YulIf",
															"src": "1563:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1624:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1653:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1634:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1672:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1716:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1701:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1682:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1672:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1729:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1756:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1767:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1752:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1752:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1739:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1503:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1514:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1526:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1534:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1542:6:1",
														"type": ""
													}
												],
												"src": "1449:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:536:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1968:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1971:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1961:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1933:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1942:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1929:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1954:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:33:1"
															},
															"nodeType": "YulIf",
															"src": "1922:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1984:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1994:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2065:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2076:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2061:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2042:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2116:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2127:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2099:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2089:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2140:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2182:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2167:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2154:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2144:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2229:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2238:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2241:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2231:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2231:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2231:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2201:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2209:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2198:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:30:1"
															},
															"nodeType": "YulIf",
															"src": "2195:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2254:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2268:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2279:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2258:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2334:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2343:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2346:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2336:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2336:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2336:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2313:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2317:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2324:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:35:1"
															},
															"nodeType": "YulIf",
															"src": "2295:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2359:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2407:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2411:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2429:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2416:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2434:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2369:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:73:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1854:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1865:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1877:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1885:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1893:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1901:6:1",
														"type": ""
													}
												],
												"src": "1782:666:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2537:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2583:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2592:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2585:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2585:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2558:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2567:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2554:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2550:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:32:1"
															},
															"nodeType": "YulIf",
															"src": "2547:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2656:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2697:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2666:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:35:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2495:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2506:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2518:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2526:6:1",
														"type": ""
													}
												],
												"src": "2453:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2799:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2845:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2847:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2820:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2829:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2816:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2841:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:32:1"
															},
															"nodeType": "YulIf",
															"src": "2809:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2870:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2899:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2880:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2918:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2945:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2956:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2941:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2928:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2918:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2757:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2768:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2780:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2788:6:1",
														"type": ""
													}
												],
												"src": "2712:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3038:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3084:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3093:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3086:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3086:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3086:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3059:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3068:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3080:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3051:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3051:32:1"
															},
															"nodeType": "YulIf",
															"src": "3048:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3109:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3135:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3119:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3119:26:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3109:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3004:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3015:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3027:6:1",
														"type": ""
													}
												],
												"src": "2971:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3225:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3271:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3280:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3273:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3273:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3273:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3246:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:32:1"
															},
															"nodeType": "YulIf",
															"src": "3235:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3296:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3322:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3309:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3300:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3365:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3341:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3341:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3390:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3191:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3202:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3214:6:1",
														"type": ""
													}
												],
												"src": "3156:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3486:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3532:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3541:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3544:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3534:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3534:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3534:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3507:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3516:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:32:1"
															},
															"nodeType": "YulIf",
															"src": "3496:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3557:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3576:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3570:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3561:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3619:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3595:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3634:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3644:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3634:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3452:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3463:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3475:6:1",
														"type": ""
													}
												],
												"src": "3406:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:370:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3786:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3795:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3788:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3788:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3788:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3761:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:32:1"
															},
															"nodeType": "YulIf",
															"src": "3750:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3811:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3838:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3825:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3815:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3891:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3900:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3903:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3893:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3893:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3863:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3871:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3860:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:30:1"
															},
															"nodeType": "YulIf",
															"src": "3857:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3916:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3930:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3941:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3920:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4005:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4008:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3998:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3998:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3998:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3975:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3979:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3971:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3986:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3967:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3967:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3960:35:1"
															},
															"nodeType": "YulIf",
															"src": "3957:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4021:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4069:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4073:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4065:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4091:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4078:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4078:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4096:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4031:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:73:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4021:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3706:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3717:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3729:6:1",
														"type": ""
													}
												],
												"src": "3660:450:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4231:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4240:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4243:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4233:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4233:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4233:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4202:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:32:1"
															},
															"nodeType": "YulIf",
															"src": "4195:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4256:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4279:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4266:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4151:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4162:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4174:6:1",
														"type": ""
													}
												],
												"src": "4115:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4349:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4359:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4379:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4373:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4363:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4401:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4406:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4394:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4394:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4448:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4444:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4466:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4471:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4478:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4422:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4422:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4494:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4509:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4522:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4530:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4518:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4518:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4539:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4535:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4535:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4514:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4501:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4494:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4326:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4333:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4341:3:1",
														"type": ""
													}
												],
												"src": "4300:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:349:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4860:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4880:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4874:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4864:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4922:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4930:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4918:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4937:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4942:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4896:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4896:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4958:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4980:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "4962:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4996:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5018:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5012:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5000:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5060:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5068:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5056:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5075:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5082:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5034:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5034:57:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5100:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5117:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5124:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5113:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:20:1"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "5104:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "5149:5:1"
																	},
																	{
																		"hexValue": "2e6a736f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5156:7:1",
																		"type": "",
																		"value": ".json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5142:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5142:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5173:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "5184:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:1",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5180:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:13:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5173:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4818:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4823:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4831:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4842:3:1",
														"type": ""
													}
												],
												"src": "4562:637:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5395:14:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5397:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5404:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5379:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5387:3:1",
														"type": ""
													}
												],
												"src": "5204:205:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5515:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5525:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5567:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5582:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5598:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5603:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5594:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5594:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5607:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5590:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5590:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5578:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5560:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5560:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5484:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5495:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5506:4:1",
														"type": ""
													}
												],
												"src": "5414:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5825:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5835:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5853:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5858:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5849:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5862:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5839:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5880:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5895:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5903:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5891:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5891:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5873:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5873:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5938:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5947:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5955:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5943:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5916:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5979:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5990:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5995:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5968:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5968:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5968:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6033:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6018:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6038:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6011:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6011:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6051:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6088:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6099:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6084:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6059:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6051:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5770:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5781:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5789:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5797:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5805:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5816:4:1",
														"type": ""
													}
												],
												"src": "5622:488:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6220:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6232:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6220:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6262:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6287:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6280:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6280:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6273:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6273:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6255:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6179:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6190:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6201:4:1",
														"type": ""
													}
												],
												"src": "6115:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6428:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6445:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6456:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6438:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6438:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6468:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6493:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6505:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6516:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6501:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6476:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6468:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6397:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6408:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6419:4:1",
														"type": ""
													}
												],
												"src": "6307:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6705:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6722:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6733:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6715:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6715:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6756:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6752:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6752:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6772:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6745:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6795:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6806:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6791:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6811:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6784:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6784:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6866:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6877:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6862:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6882:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6855:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6855:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6900:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6912:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6923:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6900:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6696:4:1",
														"type": ""
													}
												],
												"src": "6531:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7112:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7129:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7140:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7122:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7163:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7174:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7159:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7179:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7152:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7152:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7213:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7198:18:1"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e7420616d6f756e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7218:22:1",
																		"type": "",
																		"value": "Invalid mint amount!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7191:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7191:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7250:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7262:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7089:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7103:4:1",
														"type": ""
													}
												],
												"src": "6938:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7461:248:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7478:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7489:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7471:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7471:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7523:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7508:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7528:2:1",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7501:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7551:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7562:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7547:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7567:34:1",
																		"type": "",
																		"value": "Address: unable to send value, r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7540:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7540:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7633:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7618:18:1"
																	},
																	{
																		"hexValue": "6563697069656e74206d61792068617665207265766572746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7638:28:1",
																		"type": "",
																		"value": "ecipient may have reverted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7611:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7676:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7688:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7699:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7684:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7684:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7676:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7438:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7452:4:1",
														"type": ""
													}
												],
												"src": "7287:422:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7888:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7905:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7916:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7898:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7898:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7939:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7950:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7935:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7955:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7928:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7928:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7989:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7974:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7994:31:1",
																		"type": "",
																		"value": "Address: insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7967:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8035:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8047:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8058:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8043:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8043:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8035:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7865:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7879:4:1",
														"type": ""
													}
												],
												"src": "7714:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8246:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8274:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8256:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8256:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8297:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8308:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8293:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8313:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8286:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8286:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8347:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8332:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8352:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8325:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8325:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8325:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8396:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8408:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8419:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8404:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8396:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8223:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8237:4:1",
														"type": ""
													}
												],
												"src": "8072:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8607:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8624:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8635:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8617:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8617:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8654:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8674:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8647:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8647:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8708:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8693:18:1"
																	},
																	{
																		"hexValue": "53616c65206973206e6f742061637469766521",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8713:21:1",
																		"type": "",
																		"value": "Sale is not active!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8686:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8686:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8744:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8756:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8767:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8752:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8752:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8744:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8584:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8598:4:1",
														"type": ""
													}
												],
												"src": "8433:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8955:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8972:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8983:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8965:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9017:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9002:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9022:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8995:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9056:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9041:18:1"
																	},
																	{
																		"hexValue": "496e76616c6964206e6577206d617820737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9061:24:1",
																		"type": "",
																		"value": "Invalid new max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9034:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9034:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9095:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9107:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9118:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9103:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9095:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8932:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8946:4:1",
														"type": ""
													}
												],
												"src": "8781:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9306:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9323:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9316:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9316:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9357:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9368:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9353:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9373:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9396:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9407:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9392:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9392:18:1"
																	},
																	{
																		"hexValue": "4d657461646174612066726f7a656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9412:18:1",
																		"type": "",
																		"value": "Metadata frozen!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9385:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9385:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9440:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9452:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9463:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9448:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9448:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9440:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9283:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9297:4:1",
														"type": ""
													}
												],
												"src": "9132:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9651:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9668:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9679:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9661:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9713:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9698:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9718:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9691:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9691:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9741:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9752:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9737:18:1"
																	},
																	{
																		"hexValue": "4d617820737570706c7920657863656564656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9757:22:1",
																		"type": "",
																		"value": "Max supply exceeded!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9730:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9730:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9730:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9789:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9801:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9812:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9797:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9789:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9628:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9642:4:1",
														"type": ""
													}
												],
												"src": "9477:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10000:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10017:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10028:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10010:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10010:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10051:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10062:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10047:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10047:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10067:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10040:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10040:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10090:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10101:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10106:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10079:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10079:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10079:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10149:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10161:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10172:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10149:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9977:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9991:4:1",
														"type": ""
													}
												],
												"src": "9826:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10360:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10377:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10388:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10370:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10370:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10411:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10422:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10407:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10427:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10400:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10400:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10461:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10446:18:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647321",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10466:21:1",
																		"type": "",
																		"value": "Insufficient funds!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10439:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10497:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10509:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10520:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10505:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10505:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10497:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10337:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10351:4:1",
														"type": ""
													}
												],
												"src": "10186:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10635:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10645:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10657:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10668:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10653:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10653:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10645:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10698:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10604:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10615:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10626:4:1",
														"type": ""
													}
												],
												"src": "10534:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10764:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10791:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10793:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10793:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10793:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10780:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10787:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10783:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10777:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10777:13:1"
															},
															"nodeType": "YulIf",
															"src": "10774:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10822:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10833:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10836:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10829:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10829:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10822:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10747:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10750:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10756:3:1",
														"type": ""
													}
												],
												"src": "10716:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10895:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10918:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10920:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10920:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10920:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10915:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10908:9:1"
															},
															"nodeType": "YulIf",
															"src": "10905:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10949:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10958:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10961:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10954:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10954:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10949:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10880:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10883:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10889:1:1",
														"type": ""
													}
												],
												"src": "10849:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11026:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11085:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11087:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11087:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11087:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11057:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11050:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11050:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11043:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11043:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11065:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11076:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11072:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11072:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11080:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11068:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11068:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11062:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11062:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11039:45:1"
															},
															"nodeType": "YulIf",
															"src": "11036:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11116:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11131:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11134:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11127:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11116:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11005:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11008:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11014:7:1",
														"type": ""
													}
												],
												"src": "10974:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11218:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11220:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11220:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11220:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11212:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11215:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11209:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:8:1"
															},
															"nodeType": "YulIf",
															"src": "11206:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11249:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11261:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11264:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11257:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11257:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11249:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11178:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11181:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11187:4:1",
														"type": ""
													}
												],
												"src": "11147:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11330:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11340:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11349:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11344:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11409:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11434:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11439:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11430:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11430:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11453:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11458:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11449:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11449:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11443:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11443:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11423:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11423:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11370:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11373:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11367:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11381:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11383:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11392:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11395:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11388:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11388:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11383:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11363:3:1",
																"statements": []
															},
															"src": "11359:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11498:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11511:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11516:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11507:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11507:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11525:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11500:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11500:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11500:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11487:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11490:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11484:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11484:13:1"
															},
															"nodeType": "YulIf",
															"src": "11481:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11308:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11313:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11318:6:1",
														"type": ""
													}
												],
												"src": "11277:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11595:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11605:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11619:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11622:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11615:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11605:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11636:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11666:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11672:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11662:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11640:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11713:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11715:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11729:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11737:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11725:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11725:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11715:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11693:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:26:1"
															},
															"nodeType": "YulIf",
															"src": "11683:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11803:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11824:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11831:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11836:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11827:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11827:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11817:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11817:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11817:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11868:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11871:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11861:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11861:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11861:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11896:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11899:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11889:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11889:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11889:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11759:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11782:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11790:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11779:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11779:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11756:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11756:38:1"
															},
															"nodeType": "YulIf",
															"src": "11753:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11575:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11584:6:1",
														"type": ""
													}
												],
												"src": "11540:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11972:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12003:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12005:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12005:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12005:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11988:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11999:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11995:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11985:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:17:1"
															},
															"nodeType": "YulIf",
															"src": "11982:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12034:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12045:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12052:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12041:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12034:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11954:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11964:3:1",
														"type": ""
													}
												],
												"src": "11925:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12103:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12126:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12128:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12128:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12128:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12123:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:9:1"
															},
															"nodeType": "YulIf",
															"src": "12113:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12157:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12166:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12169:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12157:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12088:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12091:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12097:1:1",
														"type": ""
													}
												],
												"src": "12065:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12214:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12231:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12238:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12243:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12234:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12224:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12224:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12271:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12274:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12295:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12288:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12288:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12182:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12346:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12363:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12370:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12375:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12366:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12356:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12356:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12403:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12406:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12396:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12430:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12420:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12420:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12420:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12314:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12478:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12502:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12507:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12498:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12488:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12488:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12535:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12538:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12528:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12528:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12559:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12562:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12552:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12552:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12446:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12610:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12627:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12634:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12639:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12630:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12620:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12620:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12667:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12670:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12660:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12691:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12694:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12684:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12684:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12578:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12754:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12819:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12828:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12831:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12821:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12821:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12821:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12777:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12788:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12799:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12804:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12795:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12795:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12784:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12784:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12774:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12774:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12767:51:1"
															},
															"nodeType": "YulIf",
															"src": "12764:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12743:5:1",
														"type": ""
													}
												],
												"src": "12710:131:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        mstore(end_2, \".json\")\n        end := add(end_2, 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid mint amount!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Sale is not active!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid new max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Metadata frozen!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Max supply exceeded!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient funds!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102045760003560e01c8063841718a611610118578063c4e9374d116100a0578063e1b5a2721161006f578063e1b5a272146105a2578063e985e9c5146105b8578063eae9c95d14610601578063f2fde38b14610617578063fdb4953a1461063757600080fd5b8063c4e9374d14610537578063c87b56dd14610557578063c8eca56214610577578063d111515d1461058d57600080fd5b806395d89b41116100e757806395d89b41146104af578063a0712d68146104c4578063a22cb465146104d7578063b0551ac4146104f7578063b88d4fde1461051757600080fd5b8063841718a6146104315780638b85e43d146104515780638da5cb5b1461047157806391b7f5ed1461048f57600080fd5b8063408cbf941161019b578063616cdb1e1161016a578063616cdb1e146103a25780636352211e146103c257806370a08231146103e2578063715018a61461040257806376d02b711461041757600080fd5b8063408cbf941461032c57806342842e0e1461034c5780635381f6e21461036c57806355f804b31461038257600080fd5b806318160ddd116101d757806318160ddd146102ba57806323b872dd146102e157806328cb250f146103015780633ccfd60b1461031757600080fd5b806301ffc9a71461020957806306fdde031461023e578063081812fc14610260578063095ea7b314610298575b600080fd5b34801561021557600080fd5b50610229610224366004611cdc565b610651565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b506102536106a3565b6040516102359190611e20565b34801561026c57600080fd5b5061028061027b366004611d5f565b610735565b6040516001600160a01b039091168152602001610235565b3480156102a457600080fd5b506102b86102b3366004611c97565b610779565b005b3480156102c657600080fd5b5060015460005403600019015b604051908152602001610235565b3480156102ed57600080fd5b506102b86102fc366004611bb5565b610807565b34801561030d57600080fd5b506102d3600e5481565b34801561032357600080fd5b506102b8610812565b34801561033857600080fd5b506102b8610347366004611c97565b6108c4565b34801561035857600080fd5b506102b8610367366004611bb5565b6109a4565b34801561037857600080fd5b506102d3600d5481565b34801561038e57600080fd5b506102b861039d366004611d16565b6109bf565b3480156103ae57600080fd5b506102b86103bd366004611d5f565b610a46565b3480156103ce57600080fd5b506102806103dd366004611d5f565b610a75565b3480156103ee57600080fd5b506102d36103fd366004611b67565b610a87565b34801561040e57600080fd5b506102b8610ad6565b34801561042357600080fd5b50600f546102299060ff1681565b34801561043d57600080fd5b506102b861044c366004611cc1565b610b0c565b34801561045d57600080fd5b506102b861046c366004611d5f565b610b49565b34801561047d57600080fd5b506008546001600160a01b0316610280565b34801561049b57600080fd5b506102b86104aa366004611d5f565b610b78565b3480156104bb57600080fd5b50610253610ba7565b6102b86104d2366004611d5f565b610bb6565b3480156104e357600080fd5b506102b86104f2366004611c6d565b610d91565b34801561050357600080fd5b506102b8610512366004611d5f565b610e27565b34801561052357600080fd5b506102b8610532366004611bf1565b610e56565b34801561054357600080fd5b506102b8610552366004611d5f565b610ea7565b34801561056357600080fd5b50610253610572366004611d5f565b610f6b565b34801561058357600080fd5b506102d3600a5481565b34801561059957600080fd5b506102b8610ff0565b3480156105ae57600080fd5b506102d360105481565b3480156105c457600080fd5b506102296105d3366004611b82565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561060d57600080fd5b506102d3600b5481565b34801561062357600080fd5b506102b8610632366004611b67565b611029565b34801561064357600080fd5b506011546102299060ff1681565b60006001600160e01b031982166380ac58cd60e01b148061068257506001600160e01b03198216635b5e139f60e01b145b8061069d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546106b290611ef6565b80601f01602080910402602001604051908101604052809291908181526020018280546106de90611ef6565b801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b5050505050905090565b6000610740826110c4565b61075d576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061078482610a75565b9050806001600160a01b0316836001600160a01b031614156107b95760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906107d957506107d781336105d3565b155b156107f7576040516367d9dca160e11b815260040160405180910390fd5b6108028383836110fd565b505050565b610802838383611159565b6008546001600160a01b031633146108455760405162461bcd60e51b815260040161083c90611e33565b60405180910390fd5b600260095414156108985760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161083c565b6002600955476108bc732e45a3053639ce97f43b4761ca9332ea7b5adb8a8261136f565b506001600955565b806000811180156108d75750600e548111155b61091a5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b604482015260640161083c565b600b548160005461092b9190611e68565b11156109705760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b604482015260640161083c565b6008546001600160a01b0316331461099a5760405162461bcd60e51b815260040161083c90611e33565b6108028383611488565b61080283838360405180602001604052806000815250610e56565b6008546001600160a01b031633146109e95760405162461bcd60e51b815260040161083c90611e33565b60115460ff1615610a2f5760405162461bcd60e51b815260206004820152601060248201526f4d657461646174612066726f7a656e2160801b604482015260640161083c565b8051610a4290600c906020840190611a2c565b5050565b6008546001600160a01b03163314610a705760405162461bcd60e51b815260040161083c90611e33565b600e55565b6000610a80826114a2565b5192915050565b60006001600160a01b038216610ab0576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b03163314610b005760405162461bcd60e51b815260040161083c90611e33565b610b0a60006115cb565b565b6008546001600160a01b03163314610b365760405162461bcd60e51b815260040161083c90611e33565b600f805460ff1916911515919091179055565b6008546001600160a01b03163314610b735760405162461bcd60e51b815260040161083c90611e33565b601055565b6008546001600160a01b03163314610ba25760405162461bcd60e51b815260040161083c90611e33565b600a55565b6060600380546106b290611ef6565b80600081118015610bc95750600e548111155b610c0c5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206d696e7420616d6f756e742160601b604482015260640161083c565b600b5481600054610c1d9190611e68565b1115610c625760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b604482015260640161083c565b600f5460ff16610caa5760405162461bcd60e51b815260206004820152601360248201527253616c65206973206e6f74206163746976652160681b604482015260640161083c565b600082600a54610cba9190611e94565b90506010546000541015610d415733600090815260126020526040812054600d54610ce59190611eb3565b90508015610d3f57808410610d1c57600a54610d019082611e94565b610d0b9083611eb3565b9150610d17338261161d565b610d3f565b600a54610d299085611e94565b610d339083611eb3565b9150610d3f338561161d565b505b80341015610d875760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b604482015260640161083c565b6108023384611488565b6001600160a01b038216331415610dbb5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b03163314610e515760405162461bcd60e51b815260040161083c90611e33565b600d55565b610e61848484611159565b6001600160a01b0383163b15158015610e835750610e818484848461164e565b155b15610ea1576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6008546001600160a01b03163314610ed15760405162461bcd60e51b815260040161083c90611e33565b600b548110610f1b5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b604482015260640161083c565b600054811015610f665760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206e6577206d617820737570706c7960501b604482015260640161083c565b600b55565b6060610f76826110c4565b610f9357604051630a14c4b560e41b815260040160405180910390fd5b6000610f9d611746565b9050805160001415610fbe5760405180602001604052806000815250610fe9565b80610fc884611755565b604051602001610fd9929190611da4565b6040516020818303038152906040525b9392505050565b6008546001600160a01b0316331461101a5760405162461bcd60e51b815260040161083c90611e33565b6011805460ff19166001179055565b6008546001600160a01b031633146110535760405162461bcd60e51b815260040161083c90611e33565b6001600160a01b0381166110b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161083c565b6110c1816115cb565b50565b6000816001111580156110d8575060005482105b801561069d575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611164826114a2565b80519091506000906001600160a01b0316336001600160a01b031614806111925750815161119290336105d3565b806111ad5750336111a284610735565b6001600160a01b0316145b9050806111cd57604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b0316146112025760405162a1148160e81b815260040160405180910390fd5b6001600160a01b03841661122957604051633a954ecd60e21b815260040160405180910390fd5b61123960008484600001516110fd565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021790925590860180835291205490911661132557600054811015611325578251600082815260046020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b804710156113bf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161083c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461140c576040519150601f19603f3d011682016040523d82523d6000602084013e611411565b606091505b50509050806108025760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161083c565b610a42828260405180602001604052806000815250611853565b604080516060810182526000808252602082018190529181019190915281806001111580156114d2575060005481105b156115b257600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906115b05780516001600160a01b031615611546579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156115ab579392505050565b611546565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821660009081526012602052604081208054839290611645908490611e68565b90915550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611683903390899088908890600401611de3565b602060405180830381600087803b15801561169d57600080fd5b505af19250505080156116cd575060408051601f3d908101601f191682019092526116ca91810190611cf9565b60015b611728573d8080156116fb576040519150601f19603f3d011682016040523d82523d6000602084013e611700565b606091505b508051611720576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600c80546106b290611ef6565b6060816117795750506040805180820190915260018152600360fc1b602082015290565b8160005b81156117a3578061178d81611f31565b915061179c9050600a83611e80565b915061177d565b60008167ffffffffffffffff8111156117be576117be611fa2565b6040519080825280601f01601f1916602001820160405280156117e8576020820181803683370190505b5090505b841561173e576117fd600183611eb3565b915061180a600a86611f4c565b611815906030611e68565b60f81b81838151811061182a5761182a611f8c565b60200101906001600160f81b031916908160001a90535061184c600a86611e80565b94506117ec565b61080283838360016000546001600160a01b03851661188457604051622e076360e81b815260040160405180910390fd5b836118a25760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b42909216919091021790558080850183801561195457506001600160a01b0387163b15155b156119dd575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46119a5600088848060010195508861164e565b6119c2576040516368d2bf6b60e11b815260040160405180910390fd5b8082141561195a5782600054146119d857600080fd5b611a23565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808214156119de575b50600055611368565b828054611a3890611ef6565b90600052602060002090601f016020900481019282611a5a5760008555611aa0565b82601f10611a7357805160ff1916838001178555611aa0565b82800160010185558215611aa0579182015b82811115611aa0578251825591602001919060010190611a85565b50611aac929150611ab0565b5090565b5b80821115611aac5760008155600101611ab1565b600067ffffffffffffffff80841115611ae057611ae0611fa2565b604051601f8501601f19908116603f01168101908282118183101715611b0857611b08611fa2565b81604052809350858152868686011115611b2157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611b5257600080fd5b919050565b80358015158114611b5257600080fd5b600060208284031215611b7957600080fd5b610fe982611b3b565b60008060408385031215611b9557600080fd5b611b9e83611b3b565b9150611bac60208401611b3b565b90509250929050565b600080600060608486031215611bca57600080fd5b611bd384611b3b565b9250611be160208501611b3b565b9150604084013590509250925092565b60008060008060808587031215611c0757600080fd5b611c1085611b3b565b9350611c1e60208601611b3b565b925060408501359150606085013567ffffffffffffffff811115611c4157600080fd5b8501601f81018713611c5257600080fd5b611c6187823560208401611ac5565b91505092959194509250565b60008060408385031215611c8057600080fd5b611c8983611b3b565b9150611bac60208401611b57565b60008060408385031215611caa57600080fd5b611cb383611b3b565b946020939093013593505050565b600060208284031215611cd357600080fd5b610fe982611b57565b600060208284031215611cee57600080fd5b8135610fe981611fb8565b600060208284031215611d0b57600080fd5b8151610fe981611fb8565b600060208284031215611d2857600080fd5b813567ffffffffffffffff811115611d3f57600080fd5b8201601f81018413611d5057600080fd5b61173e84823560208401611ac5565b600060208284031215611d7157600080fd5b5035919050565b60008151808452611d90816020860160208601611eca565b601f01601f19169290920160200192915050565b60008351611db6818460208801611eca565b835190830190611dca818360208801611eca565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e1690830184611d78565b9695505050505050565b602081526000610fe96020830184611d78565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611e7b57611e7b611f60565b500190565b600082611e8f57611e8f611f76565b500490565b6000816000190483118215151615611eae57611eae611f60565b500290565b600082821015611ec557611ec5611f60565b500390565b60005b83811015611ee5578181015183820152602001611ecd565b83811115610ea15750506000910152565b600181811c90821680611f0a57607f821691505b60208210811415611f2b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611f4557611f45611f60565b5060010190565b600082611f5b57611f5b611f76565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146110c157600080fdfea2646970667358221220d057d185ec624e9aefb7cafa917db8c968109482985087f3d30848648bd9b03c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x841718A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xC4E9374D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE1B5A272 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE1B5A272 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xEAE9C95D EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0xFDB4953A EQ PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4E9374D EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xC8ECA562 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xD111515D EQ PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xB0551AC4 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x841718A6 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x8B85E43D EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x408CBF94 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x616CDB1E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x616CDB1E EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x76D02B71 EQ PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x408CBF94 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x5381F6E2 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x28CB250F EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x298 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CDC JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D16 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x3BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xA75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xAD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC1 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x46C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x512 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x532 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF1 JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xEA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xFF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0x632 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1029 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x682 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x69D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DE SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x72B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x700 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x72B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x70E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP3 PUSH2 0xA75 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x250FDEE3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7D9 JUMPI POP PUSH2 0x7D7 DUP2 CALLER PUSH2 0x5D3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH2 0x10FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x9 SLOAD EQ ISZERO PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9 SSTORE SELFBALANCE PUSH2 0x8BC PUSH20 0x2E45A3053639CE97F43B4761CA9332EA7B5ADB8A DUP3 PUSH2 0x136F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x9 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x8D7 JUMPI POP PUSH1 0xE SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x91A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST GT ISZERO PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4D657461646174612066726F7A656E21 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST DUP1 MLOAD PUSH2 0xA42 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1A2C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA80 DUP3 PUSH2 0x14A2 JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH2 0xB0A PUSH1 0x0 PUSH2 0x15CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xBC9 JUMPI POP PUSH1 0xE SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964206D696E7420616D6F756E7421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 PUSH1 0x0 SLOAD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST GT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4D617820737570706C7920657863656564656421 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x53616C65206973206E6F742061637469766521 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA SLOAD PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x10 SLOAD PUSH1 0x0 SLOAD LT ISZERO PUSH2 0xD41 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xD SLOAD PUSH2 0xCE5 SWAP2 SWAP1 PUSH2 0x1EB3 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD3F JUMPI DUP1 DUP5 LT PUSH2 0xD1C JUMPI PUSH1 0xA SLOAD PUSH2 0xD01 SWAP1 DUP3 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xD0B SWAP1 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0xD17 CALLER DUP3 PUSH2 0x161D JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xD29 SWAP1 DUP6 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xD33 SWAP1 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0xD3F CALLER DUP6 PUSH2 0x161D JUMP JUMPDEST POP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E742066756E647321 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH2 0x802 CALLER DUP5 PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0xE61 DUP5 DUP5 DUP5 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO ISZERO DUP1 ISZERO PUSH2 0xE83 JUMPI POP PUSH2 0xE81 DUP5 DUP5 DUP5 DUP5 PUSH2 0x164E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xED1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT PUSH2 0xF1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206E6577206D617820737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF76 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF9D PUSH2 0x1746 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFE9 JUMP JUMPDEST DUP1 PUSH2 0xFC8 DUP5 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFD9 SWAP3 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x83C JUMP JUMPDEST PUSH2 0x10C1 DUP2 PUSH2 0x15CB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x10D8 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x69D JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1164 DUP3 PUSH2 0x14A2 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1192 JUMPI POP DUP2 MLOAD PUSH2 0x1192 SWAP1 CALLER PUSH2 0x5D3 JUMP JUMPDEST DUP1 PUSH2 0x11AD JUMPI POP CALLER PUSH2 0x11A2 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1229 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1239 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE DUP10 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP3 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x1325 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1325 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x140C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x83C JUMP JUMPDEST PUSH2 0xA42 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP1 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x14D2 JUMPI POP PUSH1 0x0 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x15B0 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1546 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO PUSH2 0x15AB JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1645 SWAP1 DUP5 SWAP1 PUSH2 0x1E68 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1683 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x169D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16CD JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x16CA SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1728 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x16FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1779 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x17A3 JUMPI DUP1 PUSH2 0x178D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP2 POP PUSH2 0x179C SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1E80 JUMP JUMPDEST SWAP2 POP PUSH2 0x177D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BE JUMPI PUSH2 0x17BE PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x173E JUMPI PUSH2 0x17FD PUSH1 0x1 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x180A PUSH1 0xA DUP7 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x1815 SWAP1 PUSH1 0x30 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x182A JUMPI PUSH2 0x182A PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x184C PUSH1 0xA DUP7 PUSH2 0x1E80 JUMP JUMPDEST SWAP5 POP PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x802 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH2 0x18A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP13 ADD DUP2 AND SWAP2 DUP3 OR PUSH9 0x10000000000000000 PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND SWAP1 SWAP3 OR DUP4 SWAP1 DIV DUP2 AND DUP13 ADD DUP2 AND SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE DUP6 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP1 DUP1 DUP6 ADD DUP4 DUP1 ISZERO PUSH2 0x1954 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EXTCODESIZE ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x19DD JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH2 0x19A5 PUSH1 0x0 DUP9 DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP DUP9 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x19C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 EQ ISZERO PUSH2 0x195A JUMPI DUP3 PUSH1 0x0 SLOAD EQ PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A23 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP4 ADD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 DUP1 DUP3 EQ ISZERO PUSH2 0x19DE JUMPI JUMPDEST POP PUSH1 0x0 SSTORE PUSH2 0x1368 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1A38 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1A5A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1AA0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A73 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AA0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AA0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AA0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A85 JUMP JUMPDEST POP PUSH2 0x1AAC SWAP3 SWAP2 POP PUSH2 0x1AB0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AAC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1AE0 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1B08 JUMPI PUSH2 0x1B08 PUSH2 0x1FA2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE9 DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9E DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAC PUSH1 0x20 DUP5 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BD3 DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 POP PUSH2 0x1BE1 PUSH1 0x20 DUP6 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C10 DUP6 PUSH2 0x1B3B JUMP JUMPDEST SWAP4 POP PUSH2 0x1C1E PUSH1 0x20 DUP7 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1C52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C61 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1AC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C89 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAC PUSH1 0x20 DUP5 ADD PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CB3 DUP4 PUSH2 0x1B3B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE9 DUP3 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFE9 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFE9 DUP2 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D90 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1DB6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1ECA JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1DCA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1ECA JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E16 SWAP1 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7B PUSH2 0x1F60 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E8F JUMPI PUSH2 0x1E8F PUSH2 0x1F76 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1EAE JUMPI PUSH2 0x1EAE PUSH2 0x1F60 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC5 PUSH2 0x1F60 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EE5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1ECD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1F0A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1F2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F45 PUSH2 0x1F60 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F5B JUMPI PUSH2 0x1F5B PUSH2 0x1F76 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x10C1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 JUMPI 0xD1 DUP6 0xEC PUSH3 0x4E9AEF 0xB7 0xCA STATICCALL SWAP2 PUSH30 0xB8C968109482985087F3D30848648BD9B03C64736F6C6343000807003300 ",
							"sourceMap": "49335:4132:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32280:300;;;;;;;;;;-1:-1:-1;32280:300:0;;;;;:::i;:::-;;:::i;:::-;;;6280:14:1;;6273:22;6255:41;;6243:2;6228:18;32280:300:0;;;;;;;;35576:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;37041:200::-;;;;;;;;;;-1:-1:-1;37041:200:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5578:32:1;;;5560:51;;5548:2;5533:18;37041:200:0;5414:203:1;36618:362:0;;;;;;;;;;-1:-1:-1;36618:362:0;;;;;:::i;:::-;;:::i;:::-;;31551:297;;;;;;;;;;-1:-1:-1;31365:1:0;31801:12;31595:7;31785:13;:28;-1:-1:-1;;31785:46:0;31551:297;;;10680:25:1;;;10668:2;10653:18;31551:297:0;10534:177:1;37872:164:0;;;;;;;;;;-1:-1:-1;37872:164:0;;;;;:::i;:::-;;:::i;49558:29::-;;;;;;;;;;;;;;;;53298:167;;;;;;;;;;;;;:::i;53002:170::-;;;;;;;;;;-1:-1:-1;53002:170:0;;;;;:::i;:::-;;:::i;38102:179::-;;;;;;;;;;-1:-1:-1;38102:179:0;;;;;:::i;:::-;;:::i;49521:31::-;;;;;;;;;;;;;;;;50954:167;;;;;;;;;;-1:-1:-1;50954:167:0;;;;;:::i;:::-;;:::i;51282:112::-;;;;;;;;;;-1:-1:-1;51282:112:0;;;;;:::i;:::-;;:::i;35392:122::-;;;;;;;;;;-1:-1:-1;35392:122:0;;;;;:::i;:::-;;:::i;32639:203::-;;;;;;;;;;-1:-1:-1;32639:203:0;;;;;:::i;:::-;;:::i;9417:101::-;;;;;;;;;;;;;:::i;49593:26::-;;;;;;;;;;-1:-1:-1;49593:26:0;;;;;;;;51400:107;;;;;;;;;;-1:-1:-1;51400:107:0;;;;;:::i;:::-;;:::i;51513:165::-;;;;;;;;;;-1:-1:-1;51513:165:0;;;;;:::i;:::-;;:::i;8785:85::-;;;;;;;;;;-1:-1:-1;8857:6:0;;-1:-1:-1;;;;;8857:6:0;8785:85;;50600:97;;;;;;;;;;-1:-1:-1;50600:97:0;;;;;:::i;:::-;;:::i;35738:102::-;;;;;;;;;;;;;:::i;52101:895::-;;;;;;:::i;:::-;;:::i;37308:274::-;;;;;;;;;;-1:-1:-1;37308:274:0;;;;;:::i;:::-;;:::i;51127:149::-;;;;;;;;;;-1:-1:-1;51127:149:0;;;;;:::i;:::-;;:::i;38347:359::-;;;;;;;;;;-1:-1:-1;38347:359:0;;;;;:::i;:::-;;:::i;50703:245::-;;;;;;;;;;-1:-1:-1;50703:245:0;;;;;:::i;:::-;;:::i;35906:322::-;;;;;;;;;;-1:-1:-1;35906:322:0;;;;;:::i;:::-;;:::i;49434:23::-;;;;;;;;;;;;;;;;51684:84;;;;;;;;;;;;;:::i;49625:34::-;;;;;;;;;;;;;;;;37648:162;;;;;;;;;;-1:-1:-1;37648:162:0;;;;;:::i;:::-;-1:-1:-1;;;;;37768:25:0;;;37745:4;37768:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;37648:162;49463:22;;;;;;;;;;;;;;;;9667:198;;;;;;;;;;-1:-1:-1;9667:198:0;;;;;:::i;:::-;;:::i;49665:27::-;;;;;;;;;;-1:-1:-1;49665:27:0;;;;;;;;32280:300;32382:4;-1:-1:-1;;;;;;32417:40:0;;-1:-1:-1;;;32417:40:0;;:104;;-1:-1:-1;;;;;;;32473:48:0;;-1:-1:-1;;;32473:48:0;32417:104;:156;;;-1:-1:-1;;;;;;;;;;21325:40:0;;;32537:36;32398:175;32280:300;-1:-1:-1;;32280:300:0:o;35576:98::-;35630:13;35662:5;35655:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35576:98;:::o;37041:200::-;37109:7;37133:16;37141:7;37133;:16::i;:::-;37128:64;;37158:34;;-1:-1:-1;;;37158:34:0;;;;;;;;;;;37128:64;-1:-1:-1;37210:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;37210:24:0;;37041:200::o;36618:362::-;36690:13;36706:24;36722:7;36706:15;:24::i;:::-;36690:40;;36750:5;-1:-1:-1;;;;;36744:11:0;:2;-1:-1:-1;;;;;36744:11:0;;36740:48;;;36764:24;;-1:-1:-1;;;36764:24:0;;;;;;;;;;;36740:48;7632:10;-1:-1:-1;;;;;36803:21:0;;;;;;:63;;-1:-1:-1;36829:37:0;36846:5;7632:10;37648:162;:::i;36829:37::-;36828:38;36803:63;36799:136;;;36889:35;;-1:-1:-1;;;36889:35:0;;;;;;;;;;;36799:136;36945:28;36954:2;36958:7;36967:5;36945:8;:28::i;:::-;36680:300;36618:362;;:::o;37872:164::-;38001:28;38011:4;38017:2;38021:7;38001:9;:28::i;53298:167::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;;;;;;;;;3921:1:::1;4502:7;;:19;;4494:63;;;::::0;-1:-1:-1;;;4494:63:0;;10028:2:1;4494:63:0::1;::::0;::::1;10010:21:1::0;10067:2;10047:18;;;10040:30;10106:33;10086:18;;;10079:61;10157:18;;4494:63:0::1;9826:355:1::0;4494:63:0::1;3921:1;4632:7;:18:::0;53376:21:::2;53407:51;53248:42;53376:21:::0;53407:17:::2;:51::i;:::-;-1:-1:-1::0;3878:1:0::1;4805:7;:22:::0;53298:167::o;53002:170::-;53093:11;51882:1;51868:11;:15;:48;;;;;51902:14;;51887:11;:29;;51868:48;51847:115;;;;-1:-1:-1;;;51847:115:0;;7140:2:1;51847:115:0;;;7122:21:1;7179:2;7159:18;;;7152:30;-1:-1:-1;;;7198:18:1;;;7191:50;7258:18;;51847:115:0;6938:344:1;51847:115:0;52024:7;;52009:11;51993:13;;:27;;;;:::i;:::-;:38;;51972:105;;;;-1:-1:-1;;;51972:105:0;;9679:2:1;51972:105:0;;;9661:21:1;9718:2;9698:18;;;9691:30;-1:-1:-1;;;9737:18:1;;;9730:50;9797:18;;51972:105:0;9477:344:1;51972:105:0;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23:::1;8989:68;;;;-1:-1:-1::0;;;8989:68:0::1;;;;;;;:::i;:::-;53138:27:::2;53148:3;53153:11;53138:9;:27::i;38102:179::-:0;38235:39;38252:4;38258:2;38262:7;38235:39;;;;;;;;;;;;:16;:39::i;50954:167::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;51042:15:::1;::::0;::::1;;51041:16;51033:45;;;::::0;-1:-1:-1;;;51033:45:0;;9334:2:1;51033:45:0::1;::::0;::::1;9316:21:1::0;9373:2;9353:18;;;9346:30;-1:-1:-1;;;9392:18:1;;;9385:46;9448:18;;51033:45:0::1;9132:340:1::0;51033:45:0::1;51088:26:::0;;::::1;::::0;:9:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;50954:167:::0;:::o;51282:112::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;51358:14:::1;:29:::0;51282:112::o;35392:122::-;35456:7;35482:20;35494:7;35482:11;:20::i;:::-;:25;;35392:122;-1:-1:-1;;35392:122:0:o;32639:203::-;32703:7;-1:-1:-1;;;;;32726:19:0;;32722:60;;32754:28;;-1:-1:-1;;;32754:28:0;;;;;;;;;;;32722:60;-1:-1:-1;;;;;;32807:19:0;;;;;:12;:19;;;;;:27;;;;32639:203::o;9417:101::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;9481:30:::1;9508:1;9481:18;:30::i;:::-;9417:101::o:0;51400:107::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;51471:14:::1;:29:::0;;-1:-1:-1;;51471:29:0::1;::::0;::::1;;::::0;;;::::1;::::0;;51400:107::o;51513:165::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;51627:19:::1;:44:::0;51513:165::o;50600:97::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;50668:8:::1;:22:::0;50600:97::o;35738:102::-;35794:13;35826:7;35819:14;;;;;:::i;52101:895::-;52190:11;51882:1;51868:11;:15;:48;;;;;51902:14;;51887:11;:29;;51868:48;51847:115;;;;-1:-1:-1;;;51847:115:0;;7140:2:1;51847:115:0;;;7122:21:1;7179:2;7159:18;;;7152:30;-1:-1:-1;;;7198:18:1;;;7191:50;7258:18;;51847:115:0;6938:344:1;51847:115:0;52024:7;;52009:11;51993:13;;:27;;;;:::i;:::-;:38;;51972:105;;;;-1:-1:-1;;;51972:105:0;;9679:2:1;51972:105:0;;;9661:21:1;9718:2;9698:18;;;9691:30;-1:-1:-1;;;9737:18:1;;;9730:50;9797:18;;51972:105:0;9477:344:1;51972:105:0;52225:14:::1;::::0;::::1;;52217:46;;;::::0;-1:-1:-1;;;52217:46:0;;8635:2:1;52217:46:0::1;::::0;::::1;8617:21:1::0;8674:2;8654:18;;;8647:30;-1:-1:-1;;;8693:18:1;;;8686:49;8752:18;;52217:46:0::1;8433:343:1::0;52217:46:0::1;52274:13;52301:11;52290:8;;:22;;;;:::i;:::-;52274:38;;52343:19;;52327:13;;:35;52323:561;;;52458:10;52378:25;52441:28:::0;;;:16:::1;:28;::::0;;;;;52406:16:::1;::::0;:63:::1;::::0;52441:28;52406:63:::1;:::i;:::-;52378:91:::0;-1:-1:-1;52487:21:0;;52483:391:::1;;52547:17;52532:11;:32;52528:332;;52617:8;::::0;52597:28:::1;::::0;:17;:28:::1;:::i;:::-;52588:37;::::0;;::::1;:::i;:::-;;;52647:50;52667:10;52679:17;52647:19;:50::i;:::-;52528:332;;;52767:8;::::0;52753:22:::1;::::0;:11;:22:::1;:::i;:::-;52744:31;::::0;;::::1;:::i;:::-;;;52797:44;52817:10;52829:11;52797:19;:44::i;:::-;52364:520;52323:561;52915:5;52902:9;:18;;52894:50;;;::::0;-1:-1:-1;;;52894:50:0;;10388:2:1;52894:50:0::1;::::0;::::1;10370:21:1::0;10427:2;10407:18;;;10400:30;-1:-1:-1;;;10446:18:1;;;10439:49;10505:18;;52894:50:0::1;10186:343:1::0;52894:50:0::1;52955:34;52965:10;52977:11;52955:9;:34::i;37308:274::-:0;-1:-1:-1;;;;;37398:24:0;;7632:10;37398:24;37394:54;;;37431:17;;-1:-1:-1;;;37431:17:0;;;;;;;;;;;37394:54;7632:10;37459:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;37459:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;37459:53:0;;;;;;;;;;37527:48;;6255:41:1;;;37459:42:0;;7632:10;37527:48;;6228:18:1;37527:48:0;;;;;;;37308:274;;:::o;51127:149::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;51233:16:::1;:36:::0;51127:149::o;38347:359::-;38508:28;38518:4;38524:2;38528:7;38508:9;:28::i;:::-;-1:-1:-1;;;;;38550:13:0;;11696:19;:23;;38550:76;;;;;38570:56;38601:4;38607:2;38611:7;38620:5;38570:30;:56::i;:::-;38569:57;38550:76;38546:154;;;38649:40;;-1:-1:-1;;;38649:40:0;;;;;;;;;;;38546:154;38347:359;;;;:::o;50703:245::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;50801:7:::1;;50786:12;:22;50778:57;;;::::0;-1:-1:-1;;;50778:57:0;;8983:2:1;50778:57:0::1;::::0;::::1;8965:21:1::0;9022:2;9002:18;;;8995:30;-1:-1:-1;;;9041:18:1;;;9034:52;9103:18;;50778:57:0::1;8781:346:1::0;50778:57:0::1;50869:13;;50853:12;:29;;50845:64;;;::::0;-1:-1:-1;;;50845:64:0;;8983:2:1;50845:64:0::1;::::0;::::1;8965:21:1::0;9022:2;9002:18;;;8995:30;-1:-1:-1;;;9041:18:1;;;9034:52;9103:18;;50845:64:0::1;8781:346:1::0;50845:64:0::1;50919:7;:22:::0;50703:245::o;35906:322::-;35979:13;36009:16;36017:7;36009;:16::i;:::-;36004:59;;36034:29;;-1:-1:-1;;;36034:29:0;;;;;;;;;;;36004:59;36074:21;36098:10;:8;:10::i;:::-;36074:34;;36131:7;36125:21;36150:1;36125:26;;:96;;;;;;;;;;;;;;;;;36178:7;36187:18;:7;:16;:18::i;:::-;36161:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36125:96;36118:103;35906:322;-1:-1:-1;;;35906:322:0:o;51684:84::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;51739:15:::1;:22:::0;;-1:-1:-1;;51739:22:0::1;51757:4;51739:22;::::0;;51684:84::o;9667:198::-;8857:6;;-1:-1:-1;;;;;8857:6:0;7632:10;8997:23;8989:68;;;;-1:-1:-1;;;8989:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9755:22:0;::::1;9747:73;;;::::0;-1:-1:-1;;;9747:73:0;;6733:2:1;9747:73:0::1;::::0;::::1;6715:21:1::0;6772:2;6752:18;;;6745:30;6811:34;6791:18;;;6784:62;-1:-1:-1;;;6862:18:1;;;6855:36;6908:19;;9747:73:0::1;6531:402:1::0;9747:73:0::1;9830:28;9849:8;9830:18;:28::i;:::-;9667:198:::0;:::o;38952:184::-;39009:4;39051:7;31365:1;39032:26;;:53;;;;;39072:13;;39062:7;:23;39032:53;:97;;;;-1:-1:-1;;39102:20:0;;;;:11;:20;;;;;:27;-1:-1:-1;;;39102:27:0;;;;39101:28;;38952:184::o;46368:189::-;46478:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;46478:29:0;-1:-1:-1;;;;;46478:29:0;;;;;;;;;46522:28;;46478:24;;46522:28;;;;;;;46368:189;;;:::o;41974:2067::-;42084:35;42122:20;42134:7;42122:11;:20::i;:::-;42195:18;;42084:58;;-1:-1:-1;42153:22:0;;-1:-1:-1;;;;;42179:34:0;7632:10;-1:-1:-1;;;;;42179:34:0;;:100;;;-1:-1:-1;42246:18:0;;42229:50;;7632:10;37648:162;:::i;42229:50::-;42179:152;;;-1:-1:-1;7632:10:0;42295:20;42307:7;42295:11;:20::i;:::-;-1:-1:-1;;;;;42295:36:0;;42179:152;42153:179;;42348:17;42343:66;;42374:35;;-1:-1:-1;;;42374:35:0;;;;;;;;;;;42343:66;42445:4;-1:-1:-1;;;;;42423:26:0;:13;:18;;;-1:-1:-1;;;;;42423:26:0;;42419:67;;42458:28;;-1:-1:-1;;;42458:28:0;;;;;;;;;;;42419:67;-1:-1:-1;;;;;42500:16:0;;42496:52;;42525:23;;-1:-1:-1;;;42525:23:0;;;;;;;;;;;42496:52;42664:49;42681:1;42685:7;42694:13;:18;;;42664:8;:49::i;:::-;-1:-1:-1;;;;;43003:18:0;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;43003:31:0;;;;;;;-1:-1:-1;;43003:31:0;;;;;;;43048:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;43048:29:0;;;;;;;;;;;43092:20;;;:11;:20;;;;;;:30;;-1:-1:-1;;;;;;43136:61:0;;;;-1:-1:-1;;;43181:15:0;43136:61;;;;;;;;;;;43467:11;;;43496:24;;;;;:29;43467:11;;43496:29;43492:438;;43718:13;;43704:11;:27;43700:216;;;43787:18;;;43755:24;;;:11;:24;;;;;;;;:50;;43869:28;;;;43827:70;;-1:-1:-1;;;43827:70:0;-1:-1:-1;;;;;;43827:70:0;;;-1:-1:-1;;;;;43755:50:0;;;43827:70;;;;;;;43700:216;42979:961;43974:7;43970:2;-1:-1:-1;;;;;43955:27:0;43964:4;-1:-1:-1;;;;;43955:27:0;;;;;;;;;;;43992:42;42074:1967;;41974:2067;;;:::o;12643:312::-;12757:6;12732:21;:31;;12724:73;;;;-1:-1:-1;;;12724:73:0;;7916:2:1;12724:73:0;;;7898:21:1;7955:2;7935:18;;;7928:30;7994:31;7974:18;;;7967:59;8043:18;;12724:73:0;7714:353:1;12724:73:0;12809:12;12827:9;-1:-1:-1;;;;;12827:14:0;12849:6;12827:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12808:52;;;12878:7;12870:78;;;;-1:-1:-1;;;12870:78:0;;7489:2:1;12870:78:0;;;7471:21:1;7528:2;7508:18;;;7501:30;7567:34;7547:18;;;7540:62;7638:28;7618:18;;;7611:56;7684:19;;12870:78:0;7287:422:1;39142:102:0;39210:27;39220:2;39224:8;39210:27;;;;;;;;;;;;:9;:27::i;34252:1083::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;34361:7:0;;31365:1;34407:23;;:47;;;;;34441:13;;34434:4;:20;34407:47;34403:868;;;34474:31;34508:17;;;:11;:17;;;;;;;;;34474:51;;;;;;;;;-1:-1:-1;;;;;34474:51:0;;;;-1:-1:-1;;;34474:51:0;;;;;;;;;;;-1:-1:-1;;;34474:51:0;;;;;;;;;;;;;;34543:714;;34592:14;;-1:-1:-1;;;;;34592:28:0;;34588:99;;34655:9;34252:1083;-1:-1:-1;;;34252:1083:0:o;34588:99::-;-1:-1:-1;;;35023:6:0;35067:17;;;;:11;:17;;;;;;;;;35055:29;;;;;;;;;-1:-1:-1;;;;;35055:29:0;;;;;-1:-1:-1;;;35055:29:0;;;;;;;;;;;-1:-1:-1;;;35055:29:0;;;;;;;;;;;;;35114:28;35110:107;;35181:9;34252:1083;-1:-1:-1;;;34252:1083:0:o;35110:107::-;34984:255;;;34456:815;34403:868;35297:31;;-1:-1:-1;;;35297:31:0;;;;;;;;;;;10019:187;10111:6;;;-1:-1:-1;;;;;10127:17:0;;;-1:-1:-1;;;;;;10127:17:0;;;;;;;10159:40;;10111:6;;;10127:17;10111:6;;10159:40;;10092:16;;10159:40;10082:124;10019:187;:::o;50320:118::-;-1:-1:-1;;;;;50398:24:0;;;;;;:16;:24;;;;;:33;;50426:5;;50398:24;:33;;50426:5;;50398:33;:::i;:::-;;;;-1:-1:-1;;;;50320:118:0:o;47038:650::-;47216:72;;-1:-1:-1;;;47216:72:0;;47196:4;;-1:-1:-1;;;;;47216:36:0;;;;;:72;;7632:10;;47267:4;;47273:7;;47282:5;;47216:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47216:72:0;;;;;;;;-1:-1:-1;;47216:72:0;;;;;;;;;;;;:::i;:::-;;;47212:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47447:13:0;;47443:229;;47492:40;;-1:-1:-1;;;47492:40:0;;;;;;;;;;;47443:229;47632:6;47626:13;47617:6;47613:2;47609:15;47602:38;47212:470;-1:-1:-1;;;;;;47334:55:0;-1:-1:-1;;;47334:55:0;;-1:-1:-1;47212:470:0;47038:650;;;;;;:::o;50465:108::-;50525:13;50557:9;50550:16;;;;;:::i;5187:703::-;5243:13;5460:10;5456:51;;-1:-1:-1;;5486:10:0;;;;;;;;;;;;-1:-1:-1;;;5486:10:0;;;;;5187:703::o;5456:51::-;5531:5;5516:12;5570:75;5577:9;;5570:75;;5602:8;;;;:::i;:::-;;-1:-1:-1;5624:10:0;;-1:-1:-1;5632:2:0;5624:10;;:::i;:::-;;;5570:75;;;5654:19;5686:6;5676:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5676:17:0;;5654:39;;5703:150;5710:10;;5703:150;;5736:11;5746:1;5736:11;;:::i;:::-;;-1:-1:-1;5804:10:0;5812:2;5804:5;:10;:::i;:::-;5791:24;;:2;:24;:::i;:::-;5778:39;;5761:6;5768;5761:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;5761:56:0;;;;;;;;-1:-1:-1;5831:11:0;5840:2;5831:11;;:::i;:::-;;;5703:150;;39595:157;39713:32;39719:2;39723:8;39733:5;39740:4;40132:20;40155:13;-1:-1:-1;;;;;40182:16:0;;40178:48;;40207:19;;-1:-1:-1;;;40207:19:0;;;;;;;;;;;40178:48;40240:13;40236:44;;40262:18;;-1:-1:-1;;;40262:18:0;;;;;;;;;;;40236:44;-1:-1:-1;;;;;40623:16:0;;;;;;:12;:16;;;;;;;;:44;;-1:-1:-1;;40681:49:0;;40623:44;;;;;;;;40681:49;;;;-1:-1:-1;;40623:44:0;;;;;;40681:49;;;;;;;;;;;;;;;;40745:25;;;:11;:25;;;;;;:35;;-1:-1:-1;;;;;;40794:66:0;;;;-1:-1:-1;;;40844:15:0;40794:66;;;;;;;;;;40745:25;40938:23;;;40980:4;:23;;;;-1:-1:-1;;;;;;40988:13:0;;11696:19;:23;;40988:15;40976:628;;;41023:309;41053:38;;41078:12;;-1:-1:-1;;;;;41053:38:0;;;41070:1;;41053:38;;41070:1;;41053:38;41118:69;41157:1;41161:2;41165:14;;;;;;41181:5;41118:30;:69::i;:::-;41113:172;;41222:40;;-1:-1:-1;;;41222:40:0;;;;;;;;;;;41113:172;41327:3;41311:12;:19;;41023:309;;41411:12;41394:13;;:29;41390:43;;41425:8;;;41390:43;40976:628;;;41472:118;41502:40;;41527:14;;;;;-1:-1:-1;;;;;41502:40:0;;;41519:1;;41502:40;;41519:1;;41502:40;41585:3;41569:12;:19;;41472:118;;40976:628;-1:-1:-1;41617:13:0;:28;41665:60;38347:359;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:631:1;78:5;108:18;149:2;141:6;138:14;135:40;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:1;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:72;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:45;;;532:1;529;522:12;491:45;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;14:631;;;;;:::o;650:173::-;718:20;;-1:-1:-1;;;;;767:31:1;;757:42;;747:70;;813:1;810;803:12;747:70;650:173;;;:::o;828:160::-;893:20;;949:13;;942:21;932:32;;922:60;;978:1;975;968:12;993:186;1052:6;1105:2;1093:9;1084:7;1080:23;1076:32;1073:52;;;1121:1;1118;1111:12;1073:52;1144:29;1163:9;1144:29;:::i;1184:260::-;1252:6;1260;1313:2;1301:9;1292:7;1288:23;1284:32;1281:52;;;1329:1;1326;1319:12;1281:52;1352:29;1371:9;1352:29;:::i;:::-;1342:39;;1400:38;1434:2;1423:9;1419:18;1400:38;:::i;:::-;1390:48;;1184:260;;;;;:::o;1449:328::-;1526:6;1534;1542;1595:2;1583:9;1574:7;1570:23;1566:32;1563:52;;;1611:1;1608;1601:12;1563:52;1634:29;1653:9;1634:29;:::i;:::-;1624:39;;1682:38;1716:2;1705:9;1701:18;1682:38;:::i;:::-;1672:48;;1767:2;1756:9;1752:18;1739:32;1729:42;;1449:328;;;;;:::o;1782:666::-;1877:6;1885;1893;1901;1954:3;1942:9;1933:7;1929:23;1925:33;1922:53;;;1971:1;1968;1961:12;1922:53;1994:29;2013:9;1994:29;:::i;:::-;1984:39;;2042:38;2076:2;2065:9;2061:18;2042:38;:::i;:::-;2032:48;;2127:2;2116:9;2112:18;2099:32;2089:42;;2182:2;2171:9;2167:18;2154:32;2209:18;2201:6;2198:30;2195:50;;;2241:1;2238;2231:12;2195:50;2264:22;;2317:4;2309:13;;2305:27;-1:-1:-1;2295:55:1;;2346:1;2343;2336:12;2295:55;2369:73;2434:7;2429:2;2416:16;2411:2;2407;2403:11;2369:73;:::i;:::-;2359:83;;;1782:666;;;;;;;:::o;2453:254::-;2518:6;2526;2579:2;2567:9;2558:7;2554:23;2550:32;2547:52;;;2595:1;2592;2585:12;2547:52;2618:29;2637:9;2618:29;:::i;:::-;2608:39;;2666:35;2697:2;2686:9;2682:18;2666:35;:::i;2712:254::-;2780:6;2788;2841:2;2829:9;2820:7;2816:23;2812:32;2809:52;;;2857:1;2854;2847:12;2809:52;2880:29;2899:9;2880:29;:::i;:::-;2870:39;2956:2;2941:18;;;;2928:32;;-1:-1:-1;;;2712:254:1:o;2971:180::-;3027:6;3080:2;3068:9;3059:7;3055:23;3051:32;3048:52;;;3096:1;3093;3086:12;3048:52;3119:26;3135:9;3119:26;:::i;3156:245::-;3214:6;3267:2;3255:9;3246:7;3242:23;3238:32;3235:52;;;3283:1;3280;3273:12;3235:52;3322:9;3309:23;3341:30;3365:5;3341:30;:::i;3406:249::-;3475:6;3528:2;3516:9;3507:7;3503:23;3499:32;3496:52;;;3544:1;3541;3534:12;3496:52;3576:9;3570:16;3595:30;3619:5;3595:30;:::i;3660:450::-;3729:6;3782:2;3770:9;3761:7;3757:23;3753:32;3750:52;;;3798:1;3795;3788:12;3750:52;3838:9;3825:23;3871:18;3863:6;3860:30;3857:50;;;3903:1;3900;3893:12;3857:50;3926:22;;3979:4;3971:13;;3967:27;-1:-1:-1;3957:55:1;;4008:1;4005;3998:12;3957:55;4031:73;4096:7;4091:2;4078:16;4073:2;4069;4065:11;4031:73;:::i;4115:180::-;4174:6;4227:2;4215:9;4206:7;4202:23;4198:32;4195:52;;;4243:1;4240;4233:12;4195:52;-1:-1:-1;4266:23:1;;4115:180;-1:-1:-1;4115:180:1:o;4300:257::-;4341:3;4379:5;4373:12;4406:6;4401:3;4394:19;4422:63;4478:6;4471:4;4466:3;4462:14;4455:4;4448:5;4444:16;4422:63;:::i;:::-;4539:2;4518:15;-1:-1:-1;;4514:29:1;4505:39;;;;4546:4;4501:50;;4300:257;-1:-1:-1;;4300:257:1:o;4562:637::-;4842:3;4880:6;4874:13;4896:53;4942:6;4937:3;4930:4;4922:6;4918:17;4896:53;:::i;:::-;5012:13;;4971:16;;;;5034:57;5012:13;4971:16;5068:4;5056:17;;5034:57;:::i;:::-;-1:-1:-1;;;5113:20:1;;5142:22;;;5191:1;5180:13;;4562:637;-1:-1:-1;;;;4562:637:1:o;5622:488::-;-1:-1:-1;;;;;5891:15:1;;;5873:34;;5943:15;;5938:2;5923:18;;5916:43;5990:2;5975:18;;5968:34;;;6038:3;6033:2;6018:18;;6011:31;;;5816:4;;6059:45;;6084:19;;6076:6;6059:45;:::i;:::-;6051:53;5622:488;-1:-1:-1;;;;;;5622:488:1:o;6307:219::-;6456:2;6445:9;6438:21;6419:4;6476:44;6516:2;6505:9;6501:18;6493:6;6476:44;:::i;8072:356::-;8274:2;8256:21;;;8293:18;;;8286:30;8352:34;8347:2;8332:18;;8325:62;8419:2;8404:18;;8072:356::o;10716:128::-;10756:3;10787:1;10783:6;10780:1;10777:13;10774:39;;;10793:18;;:::i;:::-;-1:-1:-1;10829:9:1;;10716:128::o;10849:120::-;10889:1;10915;10905:35;;10920:18;;:::i;:::-;-1:-1:-1;10954:9:1;;10849:120::o;10974:168::-;11014:7;11080:1;11076;11072:6;11068:14;11065:1;11062:21;11057:1;11050:9;11043:17;11039:45;11036:71;;;11087:18;;:::i;:::-;-1:-1:-1;11127:9:1;;10974:168::o;11147:125::-;11187:4;11215:1;11212;11209:8;11206:34;;;11220:18;;:::i;:::-;-1:-1:-1;11257:9:1;;11147:125::o;11277:258::-;11349:1;11359:113;11373:6;11370:1;11367:13;11359:113;;;11449:11;;;11443:18;11430:11;;;11423:39;11395:2;11388:10;11359:113;;;11490:6;11487:1;11484:13;11481:48;;;-1:-1:-1;;11525:1:1;11507:16;;11500:27;11277:258::o;11540:380::-;11619:1;11615:12;;;;11662;;;11683:61;;11737:4;11729:6;11725:17;11715:27;;11683:61;11790:2;11782:6;11779:14;11759:18;11756:38;11753:161;;;11836:10;11831:3;11827:20;11824:1;11817:31;11871:4;11868:1;11861:15;11899:4;11896:1;11889:15;11753:161;;11540:380;;;:::o;11925:135::-;11964:3;-1:-1:-1;;11985:17:1;;11982:43;;;12005:18;;:::i;:::-;-1:-1:-1;12052:1:1;12041:13;;11925:135::o;12065:112::-;12097:1;12123;12113:35;;12128:18;;:::i;:::-;-1:-1:-1;12162:9:1;;12065:112::o;12182:127::-;12243:10;12238:3;12234:20;12231:1;12224:31;12274:4;12271:1;12264:15;12298:4;12295:1;12288:15;12314:127;12375:10;12370:3;12366:20;12363:1;12356:31;12406:4;12403:1;12396:15;12430:4;12427:1;12420:15;12446:127;12507:10;12502:3;12498:20;12495:1;12488:31;12538:4;12535:1;12528:15;12562:4;12559:1;12552:15;12578:127;12639:10;12634:3;12630:20;12627:1;12620:31;12670:4;12667:1;12660:15;12694:4;12691:1;12684:15;12710:131;-1:-1:-1;;;;;;12784:32:1;;12774:43;;12764:71;;12831:1;12828;12821:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1639200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"IS_SALE_ACTIVE()": "2432",
								"METADATA_FROZEN()": "2431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2684",
								"budPrice()": "2384",
								"freeBudAllowedUntil()": "2339",
								"freeBudPerWallet()": "2385",
								"freezeMetadata()": "26619",
								"getApproved(uint256)": "6993",
								"isApprovedForAll(address,address)": "infinite",
								"lowerMaxSupply(uint256)": "28758",
								"maxBudPerTrans()": "2385",
								"maxbuds()": "2383",
								"mint(uint256)": "infinite",
								"mintOwner(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2421",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "28228",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseURI(string)": "infinite",
								"setFreeMintAllowance(uint256)": "24575",
								"setFreeMintAllowedUntil(uint256)": "24532",
								"setMaxMintPerTx(uint256)": "24509",
								"setPrice(uint256)": "24576",
								"setSaleActive(bool)": "26715",
								"supportsInterface(bytes4)": "557",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4442",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28422",
								"withdraw()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite",
								"updateFreeMintCount(address,uint256)": "24404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 49758,
									"end": 50291,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29BA37B732B939AA37BBB72BBA33"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "91"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "535457"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31037,
									"end": 31191,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31108,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31103,
									"end": 31108,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 31103,
									"end": 31116,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31133,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31126,
									"end": 31133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 31126,
									"end": 31143,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 31365,
									"end": 31366,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31153,
									"end": 31166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31153,
									"end": 31184,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8670,
									"end": 8702,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7632,
									"end": 7642,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8670,
									"end": 8688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8670,
									"end": 8702,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8670,
									"end": 8702,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8670,
									"end": 8702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3878,
									"end": 3879,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3983,
									"end": 3990,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3983,
									"end": 4005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50032,
									"end": 50040,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 50032,
									"end": 50048,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 50032,
									"end": 50048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50032,
									"end": 50048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50058,
									"end": 50065,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 50058,
									"end": 50077,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 50058,
									"end": 50077,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50058,
									"end": 50077,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50096,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 50087,
									"end": 50096,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 50087,
									"end": 50106,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50116,
									"end": 50132,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 50116,
									"end": 50152,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 50116,
									"end": 50152,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50116,
									"end": 50152,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 50116,
									"end": 50152,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50162,
									"end": 50176,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 50162,
									"end": 50191,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50162,
									"end": 50191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50162,
									"end": 50191,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50162,
									"end": 50191,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50215,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50201,
									"end": 50230,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50240,
									"end": 50259,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 50240,
									"end": 50284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10019,
									"end": 10206,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 10019,
									"end": 10206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10159,
									"end": 10199,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10159,
									"end": 10199,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10127,
									"end": 10144,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10111,
									"end": 10117,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10159,
									"end": 10199,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10159,
									"end": 10199,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10092,
									"end": 10108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10092,
									"end": 10108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10159,
									"end": 10199,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10082,
									"end": 10206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10019,
									"end": 10206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10019,
									"end": 10206,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 178,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 14,
									"end": 178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 90,
									"end": 103,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 90,
									"end": 103,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 152,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 152,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 132,
									"end": 153,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 122,
									"end": 154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 122,
									"end": 154,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 112,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 168,
									"end": 169,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 166,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 158,
									"end": 170,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 112,
									"end": 172,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 178,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 178,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 314,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 322,
									"end": 328,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 330,
									"end": 336,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 344,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 346,
									"end": 352,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 403,
									"end": 412,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 394,
									"end": 401,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 390,
									"end": 413,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 386,
									"end": 419,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 383,
									"end": 436,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 383,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 383,
									"end": 436,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 432,
									"end": 433,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 430,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 434,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 383,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 383,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 455,
									"end": 471,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 455,
									"end": 471,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 490,
									"end": 492,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 517,
									"end": 535,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 517,
									"end": 535,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 517,
									"end": 535,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 511,
									"end": 536,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 580,
									"end": 582,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 565,
									"end": 583,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 559,
									"end": 584,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 455,
									"end": 471,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 455,
									"end": 471,
									"name": "SWAP10",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 511,
									"end": 536,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 490,
									"end": 492,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 633,
									"end": 647,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 633,
									"end": 647,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 633,
									"end": 647,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 630,
									"end": 664,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 630,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 630,
									"end": 664,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 660,
									"end": 661,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 658,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 650,
									"end": 662,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 630,
									"end": 664,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 630,
									"end": 664,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 698,
									"end": 704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 687,
									"end": 696,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 683,
									"end": 705,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 673,
									"end": 705,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 673,
									"end": 705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 743,
									"end": 750,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 736,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 732,
									"end": 734,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 728,
									"end": 741,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 724,
									"end": 751,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 714,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 714,
									"end": 769,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 765,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 763,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 755,
									"end": 767,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 714,
									"end": 769,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 714,
									"end": 769,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 788,
									"end": 797,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 812,
									"end": 814,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 819,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 806,
									"end": 842,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 806,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 806,
									"end": 842,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 822,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 822,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 822,
									"end": 840,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 822,
									"end": 840,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 822,
									"end": 840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 897,
									"end": 899,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 891,
									"end": 900,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 865,
									"end": 867,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 951,
									"end": 964,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 951,
									"end": 964,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 947,
									"end": 969,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 947,
									"end": 969,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 971,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 943,
									"end": 974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 939,
									"end": 979,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 927,
									"end": 980,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 927,
									"end": 980,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 927,
									"end": 980,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1013,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1037,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1038,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 989,
									"end": 1061,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 989,
									"end": 1061,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 989,
									"end": 1061,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1041,
									"end": 1059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1041,
									"end": 1059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1041,
									"end": 1059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1041,
									"end": 1059,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1041,
									"end": 1059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1081,
									"end": 1091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1077,
									"end": 1079,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1070,
									"end": 1092,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1116,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1114,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1163,
									"name": "DUP15",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1148,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1144,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1149,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1131,
									"end": 1164,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1181,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1128,
									"end": 1181,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1178,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1174,
									"end": 1175,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1179,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1181,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1128,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1200,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1190,
									"end": 1200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1223,
									"end": 1225,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1220,
									"end": 1221,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1217,
									"end": 1226,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1321,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1326,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1326,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1327,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1280,
									"end": 1294,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1280,
									"end": 1294,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1280,
									"end": 1294,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1299,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1299,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1244,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1244,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1244,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1234,
									"end": 1244,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1209,
									"end": 1338,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1354,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1359,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1427,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1347,
									"end": 1427,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1415,
									"end": 1416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1410,
									"end": 1412,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1405,
									"end": 1407,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1393,
									"end": 1408,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1389,
									"end": 1413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1417,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1427,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1347,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1452,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SWAP11",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1492,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1481,
									"end": 1490,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1495,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1496,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1496,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1525,
									"end": 1534,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1540,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1515,
									"end": 1541,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1541,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1560,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1602,
									"end": 1605,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1591,
									"end": 1600,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1587,
									"end": 1606,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1560,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1560,
									"end": 1607,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1560,
									"end": 1607,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1560,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1607,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1607,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1647,
									"end": 1650,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 1636,
									"end": 1645,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1651,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1652,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1616,
									"end": 1652,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 183,
									"end": 1658,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1663,
									"end": 2043,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1663,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1742,
									"end": 1743,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1738,
									"end": 1750,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1750,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1750,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 1750,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1797,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1797,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1797,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1806,
									"end": 1867,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1865,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1867,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1806,
									"end": 1867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1905,
									"end": 1911,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1902,
									"end": 1916,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1879,
									"end": 1917,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1876,
									"end": 2037,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1876,
									"end": 2037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1876,
									"end": 2037,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1969,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1954,
									"end": 1957,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1950,
									"end": 1970,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1940,
									"end": 1971,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 1998,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1991,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1984,
									"end": 1999,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2026,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2019,
									"end": 2020,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2012,
									"end": 2027,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1876,
									"end": 2037,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1876,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1876,
									"end": 2037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1663,
									"end": 2043,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1663,
									"end": 2043,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1663,
									"end": 2043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1663,
									"end": 2043,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2048,
									"end": 2175,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2048,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2109,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2104,
									"end": 2107,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2100,
									"end": 2120,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2121,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2140,
									"end": 2144,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2137,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2130,
									"end": 2145,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2161,
									"end": 2162,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2154,
									"end": 2169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2175,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2048,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49335,
									"end": 53467,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d057d185ec624e9aefb7cafa917db8c968109482985087f3d30848648bd9b03c64736f6c63430008070033",
									".code": [
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "841718A6"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "C4E9374D"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "E1B5A272"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "E1B5A272"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "EAE9C95D"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "FDB4953A"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "C4E9374D"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "C8ECA562"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "D111515D"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "B0551AC4"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "841718A6"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "8B85E43D"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "91B7F5ED"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "408CBF94"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "616CDB1E"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "616CDB1E"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "76D02B71"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "408CBF94"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "5381F6E2"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "55F804B3"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "28CB250F"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49335,
											"end": 53467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6280,
											"end": 6294,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6273,
											"end": 6295,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5414,
											"end": 5617,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31365,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31801,
											"end": 31813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31595,
											"end": 31602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31785,
											"end": 31798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 31813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31785,
											"end": 31831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10680,
											"end": 10705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10653,
											"end": 10671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31551,
											"end": 31848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10534,
											"end": 10711,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49558,
											"end": 49587,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49521,
											"end": 49552,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49593,
											"end": 49619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8785,
											"end": 8870,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49434,
											"end": 49457,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49625,
											"end": 49659,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37745,
											"end": 37749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37786,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37768,
											"end": 37803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49485,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49665,
											"end": 49692,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32473,
											"end": 32521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32473,
											"end": 32521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32473,
											"end": 32521,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 32417,
											"end": 32521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32417,
											"end": 32573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32417,
											"end": 32573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21325,
											"end": 21365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21325,
											"end": 21365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32573,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32537,
											"end": 32573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32398,
											"end": 32573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32280,
											"end": 32580,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35630,
											"end": 35643,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35662,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35655,
											"end": 35667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35576,
											"end": 35674,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37109,
											"end": 37116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 37141,
											"end": 37148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37133,
											"end": 37140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 37133,
											"end": 37149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37158,
											"end": 37192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 37128,
											"end": 37192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37225,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37210,
											"end": 37234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37041,
											"end": 37241,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 36722,
											"end": 36729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36706,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 36706,
											"end": 36730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36690,
											"end": 36730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36750,
											"end": 36755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36744,
											"end": 36755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36744,
											"end": 36755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36744,
											"end": 36755,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "250FDEE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36764,
											"end": 36788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 36740,
											"end": 36788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36829,
											"end": 36866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 36846,
											"end": 36851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36829,
											"end": 36866,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 36829,
											"end": 36866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36828,
											"end": 36866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 36803,
											"end": 36866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36889,
											"end": 36924,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 36799,
											"end": 36935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 36954,
											"end": 36956,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36958,
											"end": 36965,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36967,
											"end": 36972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36945,
											"end": 36953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 36945,
											"end": 36973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36680,
											"end": 36980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36618,
											"end": 36980,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 37872,
											"end": 38036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38001,
											"end": 38029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 38011,
											"end": 38015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38021,
											"end": 38028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38001,
											"end": 38010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 38001,
											"end": 38029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4502,
											"end": 4509,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4502,
											"end": 4509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4521,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10028,
											"end": 10030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10069,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10106,
											"end": 10139,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10079,
											"end": 10140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10175,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10157,
											"end": 10175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9826,
											"end": 10181,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 4494,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4632,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4632,
											"end": 4650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53376,
											"end": 53397,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 53407,
											"end": 53458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 53248,
											"end": 53290,
											"name": "PUSH",
											"source": 0,
											"value": "2E45A3053639CE97F43B4761CA9332EA7B5ADB8A"
										},
										{
											"begin": 53376,
											"end": 53397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53407,
											"end": 53424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 53407,
											"end": 53458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53407,
											"end": 53458,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 53407,
											"end": 53458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4805,
											"end": 4812,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4805,
											"end": 4827,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53298,
											"end": 53465,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53002,
											"end": 53172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53093,
											"end": 53104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51868,
											"end": 51879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51902,
											"end": 51916,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 51902,
											"end": 51916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51887,
											"end": 51898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51887,
											"end": 51916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51887,
											"end": 51916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7122,
											"end": 7143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7181,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206D696E7420616D6F756E7421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6938,
											"end": 7282,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52024,
											"end": 52031,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 52024,
											"end": 52031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52009,
											"end": 52020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51993,
											"end": 52006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 9682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9720,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D617820737570706C7920657863656564656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9477,
											"end": 9821,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53138,
											"end": 53165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 53148,
											"end": 53151,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53153,
											"end": 53164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53138,
											"end": 53147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 53138,
											"end": 53165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 38102,
											"end": 38281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 38252,
											"end": 38256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38258,
											"end": 38260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38262,
											"end": 38269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38235,
											"end": 38251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 38235,
											"end": 38274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51042,
											"end": 51057,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 51042,
											"end": 51057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51042,
											"end": 51057,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 51042,
											"end": 51057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51041,
											"end": 51057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9316,
											"end": 9337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9375,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9353,
											"end": 9371,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9353,
											"end": 9371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D657461646174612066726F7A656E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9132,
											"end": 9472,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 51033,
											"end": 51078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51097,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 51088,
											"end": 51097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51088,
											"end": 51114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50954,
											"end": 51121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51358,
											"end": 51372,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 51358,
											"end": 51387,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51282,
											"end": 51394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35456,
											"end": 35463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 35494,
											"end": 35501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 35482,
											"end": 35502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35482,
											"end": 35507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35392,
											"end": 35514,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32703,
											"end": 32710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32726,
											"end": 32745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32726,
											"end": 32745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32754,
											"end": 32782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 32722,
											"end": 32782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32819,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32807,
											"end": 32834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9481,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9508,
											"end": 9509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 9481,
											"end": 9511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9481,
											"end": 9511,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9481,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9518,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51485,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51471,
											"end": 51500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51507,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51627,
											"end": 51646,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51627,
											"end": 51671,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51513,
											"end": 51678,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50668,
											"end": 50676,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 50668,
											"end": 50690,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50600,
											"end": 50697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 35738,
											"end": 35840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35794,
											"end": 35807,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35826,
											"end": 35833,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 35819,
											"end": 35833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 52101,
											"end": 52996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52190,
											"end": 52201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51868,
											"end": 51879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51902,
											"end": 51916,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 51902,
											"end": 51916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51887,
											"end": 51898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51887,
											"end": 51916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51887,
											"end": 51916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 51868,
											"end": 51916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7122,
											"end": 7143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7181,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206D696E7420616D6F756E7421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6938,
											"end": 7282,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 51847,
											"end": 51962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52024,
											"end": 52031,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 52024,
											"end": 52031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52009,
											"end": 52020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51993,
											"end": 52006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 51993,
											"end": 52020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51993,
											"end": 52031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 9682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9720,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D617820737570706C7920657863656564656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9477,
											"end": 9821,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 51972,
											"end": 52077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52225,
											"end": 52239,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 52225,
											"end": 52239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52225,
											"end": 52239,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 52225,
											"end": 52239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8635,
											"end": 8637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8676,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 8672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8647,
											"end": 8677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C65206973206E6F742061637469766521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8770,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8752,
											"end": 8770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8433,
											"end": 8776,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 52217,
											"end": 52263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52274,
											"end": 52287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52301,
											"end": 52312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52290,
											"end": 52298,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 52290,
											"end": 52298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52290,
											"end": 52312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 52290,
											"end": 52312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52290,
											"end": 52312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52290,
											"end": 52312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 52290,
											"end": 52312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52290,
											"end": 52312,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 52290,
											"end": 52312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52274,
											"end": 52312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52274,
											"end": 52312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52343,
											"end": 52362,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 52343,
											"end": 52362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52327,
											"end": 52340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52327,
											"end": 52340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52327,
											"end": 52362,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52323,
											"end": 52884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52323,
											"end": 52884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 52323,
											"end": 52884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52458,
											"end": 52468,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52378,
											"end": 52403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52441,
											"end": 52457,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52406,
											"end": 52422,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 52406,
											"end": 52422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52406,
											"end": 52469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 52406,
											"end": 52469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52441,
											"end": 52469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52406,
											"end": 52469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 52406,
											"end": 52469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52406,
											"end": 52469,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 52406,
											"end": 52469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52378,
											"end": 52469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52487,
											"end": 52508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52487,
											"end": 52508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52483,
											"end": 52874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 52483,
											"end": 52874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52547,
											"end": 52564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52528,
											"end": 52860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 52528,
											"end": 52860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52617,
											"end": 52625,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 52617,
											"end": 52625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52597,
											"end": 52625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 52597,
											"end": 52625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52597,
											"end": 52614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52597,
											"end": 52625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 52597,
											"end": 52625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52597,
											"end": 52625,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 52597,
											"end": 52625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52588,
											"end": 52625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52647,
											"end": 52697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 52667,
											"end": 52677,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52679,
											"end": 52696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52647,
											"end": 52666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 52647,
											"end": 52697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52647,
											"end": 52697,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 52647,
											"end": 52697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52528,
											"end": 52860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 52528,
											"end": 52860,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52528,
											"end": 52860,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 52528,
											"end": 52860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52767,
											"end": 52775,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 52767,
											"end": 52775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 52753,
											"end": 52775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 52753,
											"end": 52775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52753,
											"end": 52775,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 52753,
											"end": 52775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52744,
											"end": 52775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52797,
											"end": 52841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 52817,
											"end": 52827,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52829,
											"end": 52840,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52797,
											"end": 52816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 52797,
											"end": 52841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52797,
											"end": 52841,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 52797,
											"end": 52841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52364,
											"end": 52884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52323,
											"end": 52884,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 52323,
											"end": 52884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52915,
											"end": 52920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52902,
											"end": 52911,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52902,
											"end": 52920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52902,
											"end": 52920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10388,
											"end": 10390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10370,
											"end": 10391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10427,
											"end": 10429,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 10407,
											"end": 10425,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10407,
											"end": 10425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10400,
											"end": 10430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742066756E647321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10439,
											"end": 10488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10505,
											"end": 10523,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10505,
											"end": 10523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 10186,
											"end": 10529,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 52894,
											"end": 52944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52955,
											"end": 52989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 52965,
											"end": 52975,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52977,
											"end": 52988,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52955,
											"end": 52964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 52955,
											"end": 52989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37398,
											"end": 37422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37398,
											"end": 37422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37398,
											"end": 37422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06307DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37431,
											"end": 37448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 37394,
											"end": 37448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37477,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37512,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6255,
											"end": 6296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6255,
											"end": 6296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37459,
											"end": 37501,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37527,
											"end": 37575,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37582,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51249,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 51233,
											"end": 51269,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51127,
											"end": 51276,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 38518,
											"end": 38522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38524,
											"end": 38526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38528,
											"end": 38535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38508,
											"end": 38517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 38508,
											"end": 38536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38550,
											"end": 38563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11715,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 38601,
											"end": 38605,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38607,
											"end": 38609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38611,
											"end": 38618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38620,
											"end": 38625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38570,
											"end": 38600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 38570,
											"end": 38626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38569,
											"end": 38626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 38550,
											"end": 38626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38649,
											"end": 38689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 38546,
											"end": 38700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50801,
											"end": 50808,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 50801,
											"end": 50808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50786,
											"end": 50798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50786,
											"end": 50808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8983,
											"end": 8985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8965,
											"end": 8986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9024,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206E6577206D617820737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8781,
											"end": 9127,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 50778,
											"end": 50835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50869,
											"end": 50882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50869,
											"end": 50882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50853,
											"end": 50865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50853,
											"end": 50882,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50853,
											"end": 50882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8983,
											"end": 8985,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8965,
											"end": 8986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9024,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206E6577206D617820737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8781,
											"end": 9127,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 50845,
											"end": 50909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50919,
											"end": 50926,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 50919,
											"end": 50941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50703,
											"end": 50948,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35979,
											"end": 35992,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 36017,
											"end": 36024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36009,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 36009,
											"end": 36025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36034,
											"end": 36063,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 36004,
											"end": 36063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36098,
											"end": 36108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 36098,
											"end": 36106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 36098,
											"end": 36108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36098,
											"end": 36108,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 36098,
											"end": 36108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36074,
											"end": 36108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36131,
											"end": 36138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36150,
											"end": 36151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36125,
											"end": 36151,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36178,
											"end": 36185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 36187,
											"end": 36194,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36187,
											"end": 36203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 36187,
											"end": 36205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36161,
											"end": 36215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 36125,
											"end": 36221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36118,
											"end": 36221,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35906,
											"end": 36228,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51739,
											"end": 51754,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 51739,
											"end": 51761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51739,
											"end": 51761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51739,
											"end": 51761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51757,
											"end": 51761,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51739,
											"end": 51761,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51739,
											"end": 51761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51739,
											"end": 51761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51684,
											"end": 51768,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8997,
											"end": 9020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 8989,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9755,
											"end": 9777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9755,
											"end": 9777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6715,
											"end": 6736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6774,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6752,
											"end": 6770,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6752,
											"end": 6770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6752,
											"end": 6770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6845,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6862,
											"end": 6880,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6862,
											"end": 6880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6927,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6908,
											"end": 6927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6531,
											"end": 6933,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 9747,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 9849,
											"end": 9857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 9830,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38952,
											"end": 39136,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38952,
											"end": 39136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39009,
											"end": 39013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39051,
											"end": 39058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31365,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39032,
											"end": 39058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39072,
											"end": 39085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39072,
											"end": 39085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39062,
											"end": 39085,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 39032,
											"end": 39085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 39032,
											"end": 39129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39122,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39102,
											"end": 39129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39101,
											"end": 39129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39101,
											"end": 39129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38952,
											"end": 39136,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46493,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46507,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46478,
											"end": 46502,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46522,
											"end": 46550,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46368,
											"end": 46557,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 42119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 42134,
											"end": 42141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42122,
											"end": 42133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 42122,
											"end": 42142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42195,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42195,
											"end": 42213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 42142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42084,
											"end": 42142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42153,
											"end": 42175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42153,
											"end": 42175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42179,
											"end": 42213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42179,
											"end": 42213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 42179,
											"end": 42279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42246,
											"end": 42264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42246,
											"end": 42264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37648,
											"end": 37810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 42229,
											"end": 42279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 42307,
											"end": 42314,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 42295,
											"end": 42315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42295,
											"end": 42331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42331,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 42179,
											"end": 42331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42153,
											"end": 42332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42153,
											"end": 42332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42348,
											"end": 42365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42374,
											"end": 42409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 42343,
											"end": 42409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42445,
											"end": 42449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42423,
											"end": 42449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42423,
											"end": 42441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42423,
											"end": 42449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42423,
											"end": 42449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42458,
											"end": 42486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 42419,
											"end": 42486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42500,
											"end": 42516,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42500,
											"end": 42516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42525,
											"end": 42548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 42496,
											"end": 42548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 42681,
											"end": 42682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42685,
											"end": 42692,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42694,
											"end": 42707,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42694,
											"end": 42712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42694,
											"end": 42712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42694,
											"end": 42712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42664,
											"end": 42672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 42664,
											"end": 42713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43015,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43064,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43077,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43181,
											"end": 43196,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43136,
											"end": 43197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43467,
											"end": 43478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43496,
											"end": 43525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43492,
											"end": 43930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 43492,
											"end": 43930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43718,
											"end": 43731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43718,
											"end": 43731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43704,
											"end": 43715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43704,
											"end": 43731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43787,
											"end": 43805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43787,
											"end": 43805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43787,
											"end": 43805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43869,
											"end": 43897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43755,
											"end": 43805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43827,
											"end": 43897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 43700,
											"end": 43916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42979,
											"end": 43940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43974,
											"end": 43981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43970,
											"end": 43972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43964,
											"end": 43968,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43982,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43992,
											"end": 44034,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 43992,
											"end": 44034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42074,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42074,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 44041,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12643,
											"end": 12955,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 12643,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12757,
											"end": 12763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12753,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12763,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12732,
											"end": 12763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 7918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7955,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7935,
											"end": 7953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8025,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 7974,
											"end": 7992,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7974,
											"end": 7992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 8026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8043,
											"end": 8061,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8043,
											"end": 8061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 7714,
											"end": 8067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 12724,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12809,
											"end": 12821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12827,
											"end": 12841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12808,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12808,
											"end": 12860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12808,
											"end": 12860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12878,
											"end": 12885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7489,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "3A"
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7601,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7666,
											"name": "PUSH",
											"source": 1,
											"value": "6563697069656E74206D61792068617665207265766572746564000000000000"
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7611,
											"end": 7667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7703,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7684,
											"end": 7703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 7287,
											"end": 7709,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39142,
											"end": 39244,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 39142,
											"end": 39244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 39220,
											"end": 39222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39224,
											"end": 39232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39210,
											"end": 39219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 39210,
											"end": 39237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34361,
											"end": 34368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31365,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34407,
											"end": 34430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34434,
											"end": 34438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34434,
											"end": 34454,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 34407,
											"end": 34454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34508,
											"end": 34525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34474,
											"end": 34525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34543,
											"end": 35257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 34543,
											"end": 35257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34592,
											"end": 34620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34592,
											"end": 34620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34664,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 34588,
											"end": 34687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35023,
											"end": 35029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35067,
											"end": 35084,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35055,
											"end": 35084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35114,
											"end": 35142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35181,
											"end": 35190,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34252,
											"end": 35335,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 35110,
											"end": 35217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 34984,
											"end": 35239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34456,
											"end": 35271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 34403,
											"end": 35271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35297,
											"end": 35328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10019,
											"end": 10206,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 10019,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10199,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10159,
											"end": 10199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10092,
											"end": 10108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10199,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10082,
											"end": 10206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10019,
											"end": 10206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10019,
											"end": 10206,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50320,
											"end": 50438,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 50320,
											"end": 50438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50414,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50426,
											"end": 50431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50426,
											"end": 50431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50426,
											"end": 50431,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50426,
											"end": 50431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50398,
											"end": 50431,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50320,
											"end": 50438,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47196,
											"end": 47200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47196,
											"end": 47200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 47216,
											"end": 47252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7632,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47267,
											"end": 47271,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 47267,
											"end": 47271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47273,
											"end": 47280,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47273,
											"end": 47280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47282,
											"end": 47287,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47282,
											"end": 47287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 47216,
											"end": 47288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47447,
											"end": 47460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47447,
											"end": 47460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47492,
											"end": 47532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 47443,
											"end": 47672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47632,
											"end": 47638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47626,
											"end": 47639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47613,
											"end": 47615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47609,
											"end": 47624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47602,
											"end": 47640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47334,
											"end": 47389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47334,
											"end": 47389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47334,
											"end": 47389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 47212,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47688,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50465,
											"end": 50573,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 50465,
											"end": 50573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50538,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50557,
											"end": 50566,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 50550,
											"end": 50566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50550,
											"end": 50566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50550,
											"end": 50566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 50550,
											"end": 50566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50550,
											"end": 50566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 50550,
											"end": 50566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5187,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 5187,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5256,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5460,
											"end": 5470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5187,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 5456,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5531,
											"end": 5536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5624,
											"end": 5634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 5570,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5720,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5710,
											"end": 5720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 5746,
											"end": 5747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 5812,
											"end": 5814,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5804,
											"end": 5809,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 5804,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5793,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 5791,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5817,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 5778,
											"end": 5817,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5761,
											"end": 5817,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 5840,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 5703,
											"end": 5853,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39595,
											"end": 39752,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 39595,
											"end": 39752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39713,
											"end": 39745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 39719,
											"end": 39721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39723,
											"end": 39731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39733,
											"end": 39738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39740,
											"end": 39744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40132,
											"end": 40152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40155,
											"end": 40168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40182,
											"end": 40198,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40182,
											"end": 40198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40178,
											"end": 40226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 40178,
											"end": 40226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E0763"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40207,
											"end": 40226,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40178,
											"end": 40226,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 40178,
											"end": 40226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40240,
											"end": 40253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40236,
											"end": 40280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 40236,
											"end": 40280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B562E8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40262,
											"end": 40280,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40236,
											"end": 40280,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 40236,
											"end": 40280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "PUSH",
											"source": 0,
											"value": "10000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40623,
											"end": 40667,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40681,
											"end": 40730,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40844,
											"end": 40859,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40794,
											"end": 40860,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40745,
											"end": 40770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40938,
											"end": 40961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40938,
											"end": 40961,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40938,
											"end": 40961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 40984,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 40980,
											"end": 41003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40988,
											"end": 41001,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40988,
											"end": 41001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11715,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11696,
											"end": 11719,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40988,
											"end": 41003,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 40988,
											"end": 41003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41332,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 41023,
											"end": 41332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41070,
											"end": 41071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41053,
											"end": 41091,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41118,
											"end": 41187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 41157,
											"end": 41158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41161,
											"end": 41163,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41165,
											"end": 41179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41179,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 41165,
											"end": 41179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41181,
											"end": 41186,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41118,
											"end": 41148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 41118,
											"end": 41187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41118,
											"end": 41187,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 41118,
											"end": 41187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41113,
											"end": 41285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 41113,
											"end": 41285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41113,
											"end": 41285,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 41113,
											"end": 41285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41327,
											"end": 41330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41311,
											"end": 41323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41311,
											"end": 41330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41311,
											"end": 41330,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41023,
											"end": 41332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 41023,
											"end": 41332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41411,
											"end": 41423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41394,
											"end": 41407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41394,
											"end": 41407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41394,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41390,
											"end": 41433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 41390,
											"end": 41433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41425,
											"end": 41433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41425,
											"end": 41433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41425,
											"end": 41433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41390,
											"end": 41433,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 41390,
											"end": 41433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41472,
											"end": 41590,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 41472,
											"end": 41590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41541,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41527,
											"end": 41541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41527,
											"end": 41541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41519,
											"end": 41520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41519,
											"end": 41520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41519,
											"end": 41520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41519,
											"end": 41520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41502,
											"end": 41542,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41585,
											"end": 41588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41569,
											"end": 41581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41569,
											"end": 41588,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41569,
											"end": 41588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41472,
											"end": 41590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 41472,
											"end": 41590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 40976,
											"end": 41604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41617,
											"end": 41630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41617,
											"end": 41645,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41665,
											"end": 41725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 38347,
											"end": 38706,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "276"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "535"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "207"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "535"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "542"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "542"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "543"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "543"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 149,
											"end": 151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 138,
											"end": 152,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 135,
											"end": 175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 135,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 135,
											"end": 175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 200,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 284,
											"end": 299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 276,
											"end": 309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 272,
											"end": 314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 260,
											"end": 315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 260,
											"end": 315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 260,
											"end": 315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 350,
											"end": 372,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 327,
											"end": 373,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 324,
											"end": 396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 324,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 324,
											"end": 396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 436,
											"end": 451,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 436,
											"end": 451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 515,
											"end": 518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 501,
											"end": 504,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 497,
											"end": 513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 519,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 491,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 491,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 491,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 588,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 545,
											"end": 589,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 609,
											"end": 628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 718,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 718,
											"end": 738,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 767,
											"end": 798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 757,
											"end": 799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 757,
											"end": 799,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 747,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 803,
											"end": 815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 747,
											"end": 817,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 988,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 828,
											"end": 988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 913,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 962,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 942,
											"end": 963,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 932,
											"end": 964,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 922,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 922,
											"end": 982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 978,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 968,
											"end": 980,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1179,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 993,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1091,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1316,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1331,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 1281,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1432,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1583,
											"end": 1592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1598,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1613,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 1653,
											"end": 1662,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 1634,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 1716,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1705,
											"end": 1714,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1765,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1777,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1942,
											"end": 1951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1940,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1952,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1958,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1973,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 1922,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1994,
											"end": 2023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1994,
											"end": 2023,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 1994,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2074,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 2042,
											"end": 2080,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 2042,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2080,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2125,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2171,
											"end": 2180,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2186,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2228,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 2195,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 2195,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2332,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 2434,
											"end": 2441,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2432,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2409,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 2369,
											"end": 2442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2442,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 2369,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 2707,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2453,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2582,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 2666,
											"end": 2701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2712,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2712,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 2809,
											"end": 2861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2859,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2861,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 2809,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 2880,
											"end": 2909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 2909,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 2880,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2909,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2960,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2960,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2966,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2971,
											"end": 3151,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2971,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3083,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 3048,
											"end": 3100,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3098,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3100,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 3048,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 3135,
											"end": 3144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3156,
											"end": 3401,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3156,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3285,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 3235,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3332,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 3365,
											"end": 3370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 3341,
											"end": 3371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3655,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 3406,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3516,
											"end": 3525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3548,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 3496,
											"end": 3548,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3548,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 3496,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 3619,
											"end": 3624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 3595,
											"end": 3625,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3660,
											"end": 4110,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3660,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3800,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 3750,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3848,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 3857,
											"end": 3907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 3857,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3971,
											"end": 3984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3957,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 3957,
											"end": 4012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4010,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4012,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 3957,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4094,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4071,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 4031,
											"end": 4104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4295,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4115,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4225,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4266,
											"end": 4289,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4115,
											"end": 4295,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4300,
											"end": 4557,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 4300,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4373,
											"end": 4385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4404,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 4422,
											"end": 4485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4422,
											"end": 4485,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 4422,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4518,
											"end": 4533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4551,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4300,
											"end": 4557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 5199,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4562,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 4942,
											"end": 4948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 4940,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 4928,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5025,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 5012,
											"end": 5025,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5056,
											"end": 5073,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 5034,
											"end": 5091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5034,
											"end": 5091,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 5034,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "173539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5191,
											"end": 5192,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5193,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 5199,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4562,
											"end": 5199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5622,
											"end": 6110,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 5622,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5891,
											"end": 5906,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 5940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 5992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5975,
											"end": 5993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 5993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6033,
											"end": 6035,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 6059,
											"end": 6104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 6059,
											"end": 6104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6059,
											"end": 6104,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 6059,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6104,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5622,
											"end": 6110,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5622,
											"end": 6110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6307,
											"end": 6526,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6307,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6438,
											"end": 6459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 6516,
											"end": 6518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6505,
											"end": 6514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 6476,
											"end": 6520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8072,
											"end": 8428,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8072,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8274,
											"end": 8276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8256,
											"end": 8277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8286,
											"end": 8316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8386,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8347,
											"end": 8349,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8325,
											"end": 8387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8421,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8404,
											"end": 8422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8404,
											"end": 8422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10716,
											"end": 10844,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 10716,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10756,
											"end": 10759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10787,
											"end": 10788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10790,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10813,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 10774,
											"end": 10813,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10793,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 10793,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 10793,
											"end": 10811,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10793,
											"end": 10811,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 10793,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10829,
											"end": 10838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10844,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10849,
											"end": 10969,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 10849,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 10905,
											"end": 10940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 10920,
											"end": 10938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10954,
											"end": 10963,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 10963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10969,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10974,
											"end": 11142,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 10974,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11014,
											"end": 11021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11082,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11065,
											"end": 11066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11083,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11050,
											"end": 11059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11036,
											"end": 11107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11036,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 11036,
											"end": 11107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 11087,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11127,
											"end": 11136,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11127,
											"end": 11136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10974,
											"end": 11142,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11147,
											"end": 11272,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11147,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11217,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11206,
											"end": 11240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11206,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 11206,
											"end": 11240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11257,
											"end": 11266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 11266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11272,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11277,
											"end": 11535,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 11277,
											"end": 11535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11370,
											"end": 11371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11380,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11443,
											"end": 11461,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11441,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11395,
											"end": 11397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11388,
											"end": 11398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 11359,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11490,
											"end": 11496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11487,
											"end": 11488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11484,
											"end": 11497,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11481,
											"end": 11529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11481,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 11481,
											"end": 11529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11525,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11500,
											"end": 11527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11277,
											"end": 11535,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11540,
											"end": 11920,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 11540,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11620,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 11683,
											"end": 11744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11737,
											"end": 11741,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11729,
											"end": 11735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11725,
											"end": 11742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11715,
											"end": 11742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11715,
											"end": 11742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11744,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 11683,
											"end": 11744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11782,
											"end": 11788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11779,
											"end": 11793,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 11794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11753,
											"end": 11914,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11753,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 11753,
											"end": 11914,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11836,
											"end": 11846,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11831,
											"end": 11834,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11827,
											"end": 11847,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11824,
											"end": 11825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11817,
											"end": 11848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11868,
											"end": 11869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11899,
											"end": 11903,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11896,
											"end": 11897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11904,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11753,
											"end": 11914,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 11753,
											"end": 11914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11753,
											"end": 11914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11925,
											"end": 12060,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 11925,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11964,
											"end": 11967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11985,
											"end": 12002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11985,
											"end": 12002,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12025,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 11982,
											"end": 12025,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12052,
											"end": 12053,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12041,
											"end": 12054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12041,
											"end": 12054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12065,
											"end": 12177,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 12065,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12123,
											"end": 12124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 12113,
											"end": 12148,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 12128,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12065,
											"end": 12177,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12182,
											"end": 12309,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 12182,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12253,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12238,
											"end": 12241,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12234,
											"end": 12254,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12231,
											"end": 12232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12224,
											"end": 12255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12274,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12271,
											"end": 12272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12264,
											"end": 12279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12302,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12441,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 12314,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12385,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12370,
											"end": 12373,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12366,
											"end": 12386,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12363,
											"end": 12364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12356,
											"end": 12387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12410,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12396,
											"end": 12411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12434,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12427,
											"end": 12428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12420,
											"end": 12435,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12573,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 12446,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12507,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12502,
											"end": 12505,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12498,
											"end": 12518,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12488,
											"end": 12519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12538,
											"end": 12542,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12535,
											"end": 12536,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12528,
											"end": 12543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12562,
											"end": 12566,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12559,
											"end": 12560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12567,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12705,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 12578,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12649,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12634,
											"end": 12637,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12630,
											"end": 12650,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12620,
											"end": 12651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12670,
											"end": 12674,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12667,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12660,
											"end": 12675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12694,
											"end": 12698,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12691,
											"end": 12692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12684,
											"end": 12699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12710,
											"end": 12841,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 12710,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12784,
											"end": 12816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 12816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12774,
											"end": 12817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12774,
											"end": 12817,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12764,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 12764,
											"end": 12835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12831,
											"end": 12832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12828,
											"end": 12829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12833,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"IS_SALE_ACTIVE()": "76d02b71",
							"METADATA_FROZEN()": "fdb4953a",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"budPrice()": "c8eca562",
							"freeBudAllowedUntil()": "e1b5a272",
							"freeBudPerWallet()": "5381f6e2",
							"freezeMetadata()": "d111515d",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"lowerMaxSupply(uint256)": "c4e9374d",
							"maxBudPerTrans()": "28cb250f",
							"maxbuds()": "eae9c95d",
							"mint(uint256)": "a0712d68",
							"mintOwner(address,uint256)": "408cbf94",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseURI(string)": "55f804b3",
							"setFreeMintAllowance(uint256)": "b0551ac4",
							"setFreeMintAllowedUntil(uint256)": "8b85e43d",
							"setMaxMintPerTx(uint256)": "616cdb1e",
							"setPrice(uint256)": "91b7f5ed",
							"setSaleActive(bool)": "841718a6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"freeMintAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMintPerTx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSaleActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"freeMintIsAllowedUntil\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SALE_ACTIVE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATA_FROZEN\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"budPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeBudAllowedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeBudPerWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezeMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"lowerMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBudPerTrans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxbuds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"}],\"name\":\"mintOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"customBaseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"freeMintAllowance\",\"type\":\"uint256\"}],\"name\":\"setFreeMintAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"freeMintIsAllowedUntil\",\"type\":\"uint256\"}],\"name\":\"setFreeMintAllowedUntil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxMintPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxMintPerTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"customPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"saleIsActive\",\"type\":\"bool\"}],\"name\":\"setSaleActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPrice(uint256)\":{\"notice\":\"SETTERS *\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"StonersTownWtf\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 947,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 949,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 953,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 958,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_ownerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)936_storage)"
							},
							{
								"astId": 963,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_addressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(AddressData)945_storage)"
							},
							{
								"astId": 967,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 973,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 268,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 10,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "_status",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2196,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "budPrice",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 2198,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "maxbuds",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 2200,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "weedStore",
								"offset": 0,
								"slot": "12",
								"type": "t_string_storage"
							},
							{
								"astId": 2202,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "freeBudPerWallet",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 2204,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "maxBudPerTrans",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 2206,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "IS_SALE_ACTIVE",
								"offset": 0,
								"slot": "15",
								"type": "t_bool"
							},
							{
								"astId": 2208,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "freeBudAllowedUntil",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 2210,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "METADATA_FROZEN",
								"offset": 0,
								"slot": "17",
								"type": "t_bool"
							},
							{
								"astId": 2214,
								"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
								"label": "freeMintCountMap",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(AddressData)945_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)945_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)936_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)936_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)945_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.AddressData",
								"members": [
									{
										"astId": 938,
										"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 940,
										"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 942,
										"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 944,
										"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)936_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenOwnership",
								"members": [
									{
										"astId": 931,
										"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 933,
										"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 935,
										"contract": "StonersTown Contract/STW.sol:StonersTownWtf",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setPrice(uint256)": {
								"notice": "SETTERS *"
							}
						},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StonersTown Contract/STW.sol\":5005:6890  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"StonersTown Contract/STW.sol\":5005:6890  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202edbbde717c70c1344b216aab914dd356826c6a5d219f4fae4d3a4f45e221f3b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202edbbde717c70c1344b216aab914dd356826c6a5d219f4fae4d3a4f45e221f3b64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xDB 0xBD 0xE7 OR 0xC7 0xC SGT DIFFICULTY 0xB2 AND 0xAA 0xB9 EQ 0xDD CALLDATALOAD PUSH9 0x26C6A5D219F4FAE4D3 LOG4 DELEGATECALL 0x5E 0x22 0x1F EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "5005:1885:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;5005:1885:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202edbbde717c70c1344b216aab914dd356826c6a5d219f4fae4d3a4f45e221f3b64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xDB 0xBD 0xE7 OR 0xC7 0xC SGT DIFFICULTY 0xB2 AND 0xAA 0xB9 EQ 0xDD CALLDATALOAD PUSH9 0x26C6A5D219F4FAE4D3 LOG4 DELEGATECALL 0x5E 0x22 0x1F EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "5005:1885:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5005,
									"end": 6890,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202edbbde717c70c1344b216aab914dd356826c6a5d219f4fae4d3a4f45e221f3b64736f6c63430008070033",
									".code": [
										{
											"begin": 5005,
											"end": 6890,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 6890,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StonersTown Contract/STW.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StonersTown Contract/STW.sol\":{\"keccak256\":\"0x56dabd5c0c3990d0d96fba6626d40880154d013073616cb7b5809386cb217030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124dc8369efa3df1c74fa218caa2368656adce8a97613d6fb12c787fd6279136\",\"dweb:/ipfs/QmcB4hESuz3WLC7fP8TVgWonao4mskwDQN5zMXwgqWLfky\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"StonersTown Contract/STW.sol": {
				"ast": {
					"absolutePath": "StonersTown Contract/STW.sol",
					"exportedSymbols": {
						"Address": [
							659
						],
						"ApprovalCallerNotOwnerNorApproved": [
							880
						],
						"ApprovalQueryForNonexistentToken": [
							882
						],
						"ApprovalToCurrentOwner": [
							886
						],
						"ApproveToCaller": [
							884
						],
						"AuxQueryForZeroAddress": [
							894
						],
						"BalanceQueryForZeroAddress": [
							888
						],
						"BurnedQueryForZeroAddress": [
							892
						],
						"Context": [
							262
						],
						"ERC165": [
							709
						],
						"ERC721A": [
							2184
						],
						"IERC165": [
							687
						],
						"IERC721": [
							823
						],
						"IERC721Enumerable": [
							852
						],
						"IERC721Metadata": [
							877
						],
						"IERC721Receiver": [
							676
						],
						"MintToZeroAddress": [
							896
						],
						"MintZeroQuantity": [
							898
						],
						"MintedQueryForZeroAddress": [
							890
						],
						"Ownable": [
							365
						],
						"OwnerIndexOutOfBounds": [
							900
						],
						"OwnerQueryForNonexistentToken": [
							902
						],
						"ReentrancyGuard": [
							39
						],
						"StonersTownWtf": [
							2563
						],
						"Strings": [
							241
						],
						"TokenIndexOutOfBounds": [
							904
						],
						"TransferCallerNotOwnerNorApproved": [
							906
						],
						"TransferFromIncorrectOwner": [
							908
						],
						"TransferToNonERC721ReceiverImplementer": [
							910
						],
						"TransferToZeroAddress": [
							912
						],
						"URIQueryForNonexistentToken": [
							914
						]
					},
					"id": 2564,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2274:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "2299:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "3068:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "3863:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "3838:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3838:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3878:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "3910:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "3885:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3885:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3921:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "3945:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "3929:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3929:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "3973:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "3993:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3983:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "3983:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3970:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3973:0:0"
									},
									"scope": 39,
									"src": "3959:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "4413:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4502:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "4513:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4502:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4523:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4494:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "4494:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "4632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "4642:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4632:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "4632:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "4661:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "4805:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "4815:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4805:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "4805:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "4018:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "4398:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4410:2:0"
									},
									"src": "4389:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "3050:1786:0",
							"usedErrors": []
						},
						{
							"id": 40,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4945:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 41,
								"nodeType": "StructuredDocumentation",
								"src": "4970:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241
							],
							"name": "Strings",
							"nameLocation": "5013:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 44,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "5052:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "5027:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 42,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "5027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5067:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "5258:632:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 52,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "5460:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5460:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 58,
												"nodeType": "IfStatement",
												"src": "5456:51:0",
												"trueBody": {
													"id": 57,
													"nodeType": "Block",
													"src": "5472:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5493:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 51,
															"id": 56,
															"nodeType": "Return",
															"src": "5486:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "5524:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "5516:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 59,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"id": 61,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "5531:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5516:20:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "5554:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "5546:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 65,
												"nodeType": "VariableDeclarationStatement",
												"src": "5546:14:0"
											},
											{
												"body": {
													"id": 76,
													"nodeType": "Block",
													"src": "5588:57:0",
													"statements": [
														{
															"expression": {
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5602:8:0",
																"subExpression": {
																	"id": 69,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "5602:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "5602:8:0"
														},
														{
															"expression": {
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 72,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "5624:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5632:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "5624:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 75,
															"nodeType": "ExpressionStatement",
															"src": "5624:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "5577:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5585:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5577:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 77,
												"nodeType": "WhileStatement",
												"src": "5570:75:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "5667:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "5654:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 78,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 84,
												"initialValue": {
													"arguments": [
														{
															"id": 82,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "5686:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5676:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 80,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5680:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5676:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5654:39:0"
											},
											{
												"body": {
													"id": 115,
													"nodeType": "Block",
													"src": "5722:131:0",
													"statements": [
														{
															"expression": {
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 88,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "5736:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5736:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 91,
															"nodeType": "ExpressionStatement",
															"src": "5736:11:0"
														},
														{
															"expression": {
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 92,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "5761:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 94,
																	"indexExpression": {
																		"id": 93,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "5768:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5761:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 99,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5791:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 104,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 102,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 47,
																									"src": "5804:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 103,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5812:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "5804:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5796:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 100,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "5796:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 105,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5796:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5791:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5785:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 97,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5785:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5785:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 96,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5778:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 95,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "5778:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5778:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "5761:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 110,
															"nodeType": "ExpressionStatement",
															"src": "5761:56:0"
														},
														{
															"expression": {
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 111,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "5831:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5840:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "5831:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "5831:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 85,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "5710:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5719:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5710:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 116,
												"nodeType": "WhileStatement",
												"src": "5703:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "5876:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5869:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 117,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "5869:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5869:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 51,
												"id": 121,
												"nodeType": "Return",
												"src": "5862:21:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "5092:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "5196:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5213:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5205:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:15:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5243:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5243:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5242:15:0"
									},
									"scope": 241,
									"src": "5187:703:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "6069:255:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 131,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "6083:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6092:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6083:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "6079:54:0",
												"trueBody": {
													"id": 136,
													"nodeType": "Block",
													"src": "6095:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6116:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 130,
															"id": 135,
															"nodeType": "Return",
															"src": "6109:13:0"
														}
													]
												}
											},
											{
												"assignments": [
													139
												],
												"declarations": [
													{
														"constant": false,
														"id": 139,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "6150:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "6142:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"id": 140,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 126,
													"src": "6157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6142:20:0"
											},
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6180:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "6172:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"hexValue": "30",
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6189:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6172:18:0"
											},
											{
												"body": {
													"id": 156,
													"nodeType": "Block",
													"src": "6218:57:0",
													"statements": [
														{
															"expression": {
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6232:8:0",
																"subExpression": {
																	"id": 149,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "6232:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "6232:8:0"
														},
														{
															"expression": {
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 152,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "6254:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6263:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "6254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "6254:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "6207:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6215:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6207:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 157,
												"nodeType": "WhileStatement",
												"src": "6200:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 159,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "6303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 160,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "6310:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 158,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164,
															240
														],
														"referencedDeclaration": 240,
														"src": "6291:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6291:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 130,
												"id": 162,
												"nodeType": "Return",
												"src": "6284:33:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5896:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "6004:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6024:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6015:15:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6054:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6054:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6053:15:0"
									},
									"scope": 241,
									"src": "5995:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "6537:351:0",
										"statements": [
											{
												"assignments": [
													175
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "6560:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 239,
														"src": "6547:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 174,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6547:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6579:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 179,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "6583:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6579:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6592:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6579:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6569:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 176,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6573:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6569:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6547:47:0"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 185,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 187,
														"indexExpression": {
															"hexValue": "30",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6611:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6604:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6616:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "6604:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "6604:15:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 191,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 193,
														"indexExpression": {
															"hexValue": "31",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6636:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6629:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6641:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "6629:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "6629:15:0"
											},
											{
												"body": {
													"id": 225,
													"nodeType": "Block",
													"src": "6699:87:0",
													"statements": [
														{
															"expression": {
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 211,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 175,
																		"src": "6713:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 213,
																	"indexExpression": {
																		"id": 212,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "6720:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6713:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 214,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "6725:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 218,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 215,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6738:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6746:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "6738:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6725:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "6713:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 220,
															"nodeType": "ExpressionStatement",
															"src": "6713:37:0"
														},
														{
															"expression": {
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 221,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6764:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "6764:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 224,
															"nodeType": "ExpressionStatement",
															"src": "6764:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 205,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "6687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6691:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6687:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"initializationExpression": {
													"assignments": [
														198
													],
													"declarations": [
														{
															"constant": false,
															"id": 198,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6667:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 226,
															"src": "6659:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 197,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6659:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 204,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 200,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "6675:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6671:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6684:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6671:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6659:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "6694:3:0",
														"subExpression": {
															"id": 208,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "6696:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 210,
													"nodeType": "ExpressionStatement",
													"src": "6694:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6654:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 228,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6803:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6812:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6803:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6815:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "6795:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6867:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 234,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6867:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6867:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 238,
												"nodeType": "Return",
												"src": "6860:21:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6330:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "6456:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "6468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "6491:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "6483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6467:31:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "6522:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:0"
									},
									"scope": 241,
									"src": "6447:441:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "5005:1885:0",
							"usedErrors": []
						},
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6999:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "7024:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 262,
							"linearizedBaseContracts": [
								262
							],
							"name": "Context",
							"nameLocation": "7539:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "7615:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 248,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7632:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7632:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 250,
												"nodeType": "Return",
												"src": "7625:17:0"
											}
										]
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7562:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7572:2:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "7606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:9:0"
									},
									"scope": 262,
									"src": "7553:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7722:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 257,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7739:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7739:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 256,
												"id": 259,
												"nodeType": "Return",
												"src": "7732:15:0"
											}
										]
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7664:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7672:2:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7706:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7705:16:0"
									},
									"scope": 262,
									"src": "7655:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "7521:235:0",
							"usedErrors": []
						},
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7867:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 265,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 262,
										"src": "8417:7:0"
									},
									"id": 266,
									"nodeType": "InheritanceSpecifier",
									"src": "8417:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 264,
								"nodeType": "StructuredDocumentation",
								"src": "7893:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 365,
							"linearizedBaseContracts": [
								365,
								262
							],
							"name": "Ownable",
							"nameLocation": "8406:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 268,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "8447:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 365,
									"src": "8431:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 267,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8431:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 274,
									"name": "OwnershipTransferred",
									"nameLocation": "8466:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "8503:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8487:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8518:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8486:57:0"
									},
									"src": "8460:84:0"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "8660:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 279,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "8689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8689:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 278,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "8670:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8670:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "8670:32:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "8550:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 284,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8657:2:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8660:0:0"
									},
									"scope": 365,
									"src": "8646:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "8840:30:0",
										"statements": [
											{
												"expression": {
													"id": 290,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "8857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 289,
												"id": 291,
												"nodeType": "Return",
												"src": "8850:13:0"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8715:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "8794:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8799:2:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "8831:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8830:9:0"
									},
									"scope": 365,
									"src": "8785:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "8979:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 297,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "8997:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8997:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 299,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "9008:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9008:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8997:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9022:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8989:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "8989:68:0"
											},
											{
												"id": 305,
												"nodeType": "PlaceholderStatement",
												"src": "9067:1:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8876:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 307,
									"name": "onlyOwner",
									"nameLocation": "8967:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8976:2:0"
									},
									"src": "8958:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "9471:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9508:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9500:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 314,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9500:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9500:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "9481:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9481:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9481:30:0"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "9081:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 310,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "9461:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9461:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "9426:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9443:2:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9471:0:0"
									},
									"scope": 365,
									"src": "9417:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "9737:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 330,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "9755:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9775:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9767:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 331,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9767:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9767:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9755:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9779:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9747:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "9747:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "9849:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 339,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "9830:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9830:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "9830:28:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "9524:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 326,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "9727:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9727:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "9676:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "9694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9693:18:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9737:0:0"
									},
									"scope": 365,
									"src": "9667:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "10082:124:0",
										"statements": [
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "10100:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "10092:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 350,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10092:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"id": 352,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "10111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10092:25:0"
											},
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 354,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "10127:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 355,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "10136:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10127:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "10127:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 359,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "10180:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10190:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "10159:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10159:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "EmitStatement",
												"src": "10154:45:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "9871:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "10028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10055:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10047:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10046:18:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10082:0:0"
									},
									"scope": 365,
									"src": "10019:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "8388:1820:0",
							"usedErrors": []
						},
						{
							"id": 366,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "10332:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 367,
								"nodeType": "StructuredDocumentation",
								"src": "10357:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 659,
							"linearizedBaseContracts": [
								659
							],
							"name": "Address",
							"nameLocation": "10433:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "11472:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 375,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "11696:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "11696:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11696:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11718:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11696:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 374,
												"id": 380,
												"nodeType": "Return",
												"src": "11689:30:0"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "10447:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "11415:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11425:17:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "11466:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11465:6:0"
									},
									"scope": 659,
									"src": "11406:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "12714:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12740:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12732:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12732:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12732:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12732:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 396,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "12757:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12732:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12765:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12724:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12724:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "12724:73:0"
											},
											{
												"assignments": [
													402,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12814:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "12809:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 401,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12857:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 403,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "12827:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12827:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 405,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "12849:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12827:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12827:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12808:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "12878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12887:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12870:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "12870:78:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "11732:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "12652:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12678:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "12662:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12662:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12697:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "12689:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12661:43:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12714:0:0"
									},
									"scope": 659,
									"src": "12643:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "13786:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 427,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "13816:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "13824:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13830:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 426,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															433,
															453
														],
														"referencedDeclaration": 453,
														"src": "13803:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13803:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 425,
												"id": 431,
												"nodeType": "Return",
												"src": "13796:67:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "12961:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "13706:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "13719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13748:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "13735:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13735:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13718:35:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "13772:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13772:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13771:14:0"
									},
									"scope": 659,
									"src": "13697:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "14239:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "14278:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "14286:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14292:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 449,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "14295:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 445,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															473,
															523
														],
														"referencedDeclaration": 523,
														"src": "14256:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14256:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 444,
												"id": 451,
												"nodeType": "Return",
												"src": "14249:59:0"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "13876:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "14101:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14131:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14160:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14147:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14188:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14174:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 439,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14113:93:0"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14225:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14225:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14224:14:0"
									},
									"scope": 659,
									"src": "14092:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "14820:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "14859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "14867:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "14873:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14880:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 465,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															473,
															523
														],
														"referencedDeclaration": 523,
														"src": "14837:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14837:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 464,
												"id": 471,
												"nodeType": "Return",
												"src": "14830:94:0"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "14321:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "14686:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14725:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14754:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14741:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14741:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14707:80:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14806:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14806:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14805:14:0"
									},
									"scope": 659,
									"src": "14677:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "15358:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "15384:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$659",
																				"typeString": "library Address"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15376:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15376:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15376:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "15376:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 493,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "15401:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15376:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15408:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15368:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15368:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "15368:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 500,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "15478:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 499,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "15467:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15467:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15487:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15459:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "15459:60:0"
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15536:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "15531:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15531:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15558:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "15545:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15545:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "15598:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "15572:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "15572:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "15591:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "15572:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15572:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15530:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "15637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 518,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "15646:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 519,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "15658:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 516,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "15620:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15620:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 486,
												"id": 521,
												"nodeType": "Return",
												"src": "15613:58:0"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "14937:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "15188:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15227:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "15219:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "15243:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15243:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "15270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15307:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "15293:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15293:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15209:116:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "15344:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15343:14:0"
									},
									"scope": 659,
									"src": "15179:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "15955:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "15991:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "15999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16005:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 533,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															540,
															575
														],
														"referencedDeclaration": 575,
														"src": "15972:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15972:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 538,
												"nodeType": "Return",
												"src": "15965:80:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "15684:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "15864:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15891:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "15883:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "15899:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15899:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15882:35:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "15941:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15941:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15940:14:0"
									},
									"scope": 659,
									"src": "15855:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "16394:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 554,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "16423:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 553,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "16412:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16412:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16432:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16404:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "16404:67:0"
											},
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16488:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "16483:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16483:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "16510:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "16497:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "16542:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "16524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "16524:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16524:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16482:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "16581:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 570,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "16590:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 571,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "16602:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 568,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16564:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16564:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 551,
												"id": 573,
												"nodeType": "Return",
												"src": "16557:58:0"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "16058:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "16245:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16281:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "16273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16310:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "16297:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16297:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "16338:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "16324:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16324:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16263:93:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "16380:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16379:14:0"
									},
									"scope": 659,
									"src": "16236:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "16898:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "16936:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "16944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16950:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 585,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															592,
															627
														],
														"referencedDeclaration": 627,
														"src": "16915:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16915:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 584,
												"id": 590,
												"nodeType": "Return",
												"src": "16908:84:0"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "16628:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "16810:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16839:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "16831:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16860:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "16847:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16830:35:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "16884:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16884:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16883:14:0"
									},
									"scope": 659,
									"src": "16801:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "17340:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 606,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "17369:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 605,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "17358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17358:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17378:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17350:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "17350:69:0"
											},
											{
												"assignments": [
													612,
													614
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17436:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "17431:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 611,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 614,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17458:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "17445:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 613,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17445:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "17492:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 615,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "17472:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "17472:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17472:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17430:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "17531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 622,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "17540:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 623,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "17552:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 620,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "17514:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17514:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 603,
												"id": 625,
												"nodeType": "Return",
												"src": "17507:58:0"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "17005:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "17194:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17232:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17261:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17248:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17248:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17289:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17275:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17214:93:0"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "17326:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17326:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17325:14:0"
									},
									"scope": 659,
									"src": "17185:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "17952:532:0",
										"statements": [
											{
												"condition": {
													"id": 639,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 630,
													"src": "17966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 655,
													"nodeType": "Block",
													"src": "18023:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 643,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "18107:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "18107:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18127:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18107:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 653,
																"nodeType": "Block",
																"src": "18415:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 650,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "18440:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 649,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "18433:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18433:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 652,
																		"nodeType": "ExpressionStatement",
																		"src": "18433:20:0"
																	}
																]
															},
															"id": 654,
															"nodeType": "IfStatement",
															"src": "18103:365:0",
															"trueBody": {
																"id": 648,
																"nodeType": "Block",
																"src": "18130:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "18250:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18272:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18301:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18295:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18295:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18276:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18344:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18348:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18340:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18340:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18361:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18333:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18333:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18333:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 632,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18301:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 632,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18348:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 647,
																		"nodeType": "InlineAssembly",
																		"src": "18241:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 656,
												"nodeType": "IfStatement",
												"src": "17962:516:0",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "17975:42:0",
													"statements": [
														{
															"expression": {
																"id": 640,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "17996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 638,
															"id": 641,
															"nodeType": "Return",
															"src": "17989:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "17578:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "17801:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17832:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "17827:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17827:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "17862:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "17849:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17849:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17896:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "17882:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17882:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17817:97:0"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "17938:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17938:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17937:14:0"
									},
									"scope": 659,
									"src": "17792:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "10425:8061:0",
							"usedErrors": []
						},
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18625:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "18650:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 676,
							"linearizedBaseContracts": [
								676
							],
							"name": "IERC721Receiver",
							"nameLocation": "18813:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "18835:485:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "19334:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19368:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19360:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19394:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19386:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19416:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19408:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19433:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19350:108:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19477:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 672,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "19477:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19476:8:0"
									},
									"scope": 676,
									"src": "19325:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2564,
							"src": "18803:684:0",
							"usedErrors": []
						},
						{
							"id": 677,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19624:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 678,
								"nodeType": "StructuredDocumentation",
								"src": "19649:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 687,
							"linearizedBaseContracts": [
								687
							],
							"name": "IERC165",
							"nameLocation": "19939:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "19953:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "20307:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "20332:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "20325:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 680,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "20325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20324:20:0"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "20368:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20368:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20367:6:0"
									},
									"scope": 687,
									"src": "20298:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2564,
							"src": "19929:447:0",
							"usedErrors": []
						},
						{
							"id": 688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20511:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 690,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 687,
										"src": "21142:7:0"
									},
									"id": 691,
									"nodeType": "InheritanceSpecifier",
									"src": "21142:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 689,
								"nodeType": "StructuredDocumentation",
								"src": "20537:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 709,
							"linearizedBaseContracts": [
								709,
								687
							],
							"name": "ERC165",
							"nameLocation": "21132:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "21308:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "21325:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 702,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "21345:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$687_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$687_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 701,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21340:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21340:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$687",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "21340:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "21325:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 699,
												"id": 706,
												"nodeType": "Return",
												"src": "21318:47:0"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "21156:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "21226:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 696,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21284:8:0"
									},
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "21251:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "21244:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 693,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "21244:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21243:20:0"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "21302:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21301:6:0"
									},
									"scope": 709,
									"src": "21217:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2564,
							"src": "21114:260:0",
							"usedErrors": []
						},
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21497:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 687,
										"src": "21612:7:0"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "21612:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 711,
								"nodeType": "StructuredDocumentation",
								"src": "21523:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 823,
							"linearizedBaseContracts": [
								823,
								687
							],
							"name": "IERC721",
							"nameLocation": "21601:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "21626:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 722,
									"name": "Transfer",
									"nameLocation": "21725:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21734:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21772:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21756:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "21776:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21733:67:0"
									},
									"src": "21719:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21807:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 731,
									"name": "Approval",
									"nameLocation": "21912:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21937:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "21921:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "21960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "21944:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21986:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "21970:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21920:74:0"
									},
									"src": "21906:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "22001:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 740,
									"name": "ApprovalForAll",
									"nameLocation": "22129:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22160:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "22144:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22183:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "22167:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22198:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "22193:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22143:64:0"
									},
									"src": "22123:85:0"
								},
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "22214:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "22304:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22322:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "22314:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22313:15:0"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "22360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "22352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22351:17:0"
									},
									"scope": 823,
									"src": "22295:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "22375:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "22520:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22536:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "22528:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22527:17:0"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22576:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "22568:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22567:15:0"
									},
									"scope": 823,
									"src": "22511:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "22589:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23293:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23327:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "23319:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23349:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "23341:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "23361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23309:73:0"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23391:0:0"
									},
									"scope": 823,
									"src": "23284:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "23398:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "23916:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23946:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "23938:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23968:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "23960:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23988:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "23980:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23928:73:0"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24010:0:0"
									},
									"scope": 823,
									"src": "23907:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "24017:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "24483:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24499:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "24491:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24511:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "24503:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24490:29:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24528:0:0"
									},
									"scope": 823,
									"src": "24474:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "24535:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "24688:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "24700:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24699:17:0"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "24748:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "24740:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24739:18:0"
									},
									"scope": 823,
									"src": "24679:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "24764:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "25087:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25113:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "25105:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "25128:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "25123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25123:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25104:34:0"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25147:0:0"
									},
									"scope": 823,
									"src": "25078:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "25154:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "25306:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25331:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "25323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25346:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "25338:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25322:33:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "25379:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25378:6:0"
									},
									"scope": 823,
									"src": "25297:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "25391:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "25961:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25995:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "25987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26017:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "26009:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26037:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "26029:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26069:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "26054:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26054:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25977:102:0"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26088:0:0"
									},
									"scope": 823,
									"src": "25952:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2564,
							"src": "21591:4500:0",
							"usedErrors": []
						},
						{
							"id": 824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26271:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 826,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "26465:7:0"
									},
									"id": 827,
									"nodeType": "InheritanceSpecifier",
									"src": "26465:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 825,
								"nodeType": "StructuredDocumentation",
								"src": "26297:136:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 852,
							"linearizedBaseContracts": [
								852,
								823,
								687
							],
							"name": "IERC721Enumerable",
							"nameLocation": "26444:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "26479:82:0",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "26575:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26586:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "26612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26611:9:0"
									},
									"scope": 852,
									"src": "26566:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "26627:171:0",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "26812:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26840:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "26832:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "26855:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "26847:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26831:30:0"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "26885:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26884:9:0"
									},
									"scope": 852,
									"src": "26803:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "26900:164:0",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "27078:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "27099:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "27091:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27090:15:0"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "27129:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27128:9:0"
									},
									"scope": 852,
									"src": "27069:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2564,
							"src": "26434:706:0",
							"usedErrors": []
						},
						{
							"id": 853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27301:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 855,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "27490:7:0"
									},
									"id": 856,
									"nodeType": "InheritanceSpecifier",
									"src": "27490:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 854,
								"nodeType": "StructuredDocumentation",
								"src": "27327:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877,
								823,
								687
							],
							"name": "IERC721Metadata",
							"nameLocation": "27471:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "27504:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "27576:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27580:2:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "27606:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27606:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27605:15:0"
									},
									"scope": 877,
									"src": "27567:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "27627:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "27701:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27707:2:0"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "27733:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27732:15:0"
									},
									"scope": 877,
									"src": "27692:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "27754:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "27858:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "27867:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27866:17:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "27907:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27907:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27906:15:0"
									},
									"scope": 877,
									"src": "27849:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2564,
							"src": "27461:463:0",
							"usedErrors": []
						},
						{
							"id": 878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "27991:23:0"
						},
						{
							"id": 880,
							"name": "ApprovalCallerNotOwnerNorApproved",
							"nameLocation": "28030:33:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 879,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28063:2:0"
							},
							"src": "28024:42:0"
						},
						{
							"id": 882,
							"name": "ApprovalQueryForNonexistentToken",
							"nameLocation": "28073:32:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 881,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28105:2:0"
							},
							"src": "28067:41:0"
						},
						{
							"id": 884,
							"name": "ApproveToCaller",
							"nameLocation": "28115:15:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 883,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28130:2:0"
							},
							"src": "28109:24:0"
						},
						{
							"id": 886,
							"name": "ApprovalToCurrentOwner",
							"nameLocation": "28140:22:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 885,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28162:2:0"
							},
							"src": "28134:31:0"
						},
						{
							"id": 888,
							"name": "BalanceQueryForZeroAddress",
							"nameLocation": "28172:26:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 887,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28198:2:0"
							},
							"src": "28166:35:0"
						},
						{
							"id": 890,
							"name": "MintedQueryForZeroAddress",
							"nameLocation": "28208:25:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 889,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28233:2:0"
							},
							"src": "28202:34:0"
						},
						{
							"id": 892,
							"name": "BurnedQueryForZeroAddress",
							"nameLocation": "28243:25:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 891,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28268:2:0"
							},
							"src": "28237:34:0"
						},
						{
							"id": 894,
							"name": "AuxQueryForZeroAddress",
							"nameLocation": "28278:22:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 893,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28300:2:0"
							},
							"src": "28272:31:0"
						},
						{
							"id": 896,
							"name": "MintToZeroAddress",
							"nameLocation": "28310:17:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 895,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28327:2:0"
							},
							"src": "28304:26:0"
						},
						{
							"id": 898,
							"name": "MintZeroQuantity",
							"nameLocation": "28337:16:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 897,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28353:2:0"
							},
							"src": "28331:25:0"
						},
						{
							"id": 900,
							"name": "OwnerIndexOutOfBounds",
							"nameLocation": "28363:21:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 899,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28384:2:0"
							},
							"src": "28357:30:0"
						},
						{
							"id": 902,
							"name": "OwnerQueryForNonexistentToken",
							"nameLocation": "28394:29:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 901,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28423:2:0"
							},
							"src": "28388:38:0"
						},
						{
							"id": 904,
							"name": "TokenIndexOutOfBounds",
							"nameLocation": "28433:21:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 903,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28454:2:0"
							},
							"src": "28427:30:0"
						},
						{
							"id": 906,
							"name": "TransferCallerNotOwnerNorApproved",
							"nameLocation": "28464:33:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 905,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28497:2:0"
							},
							"src": "28458:42:0"
						},
						{
							"id": 908,
							"name": "TransferFromIncorrectOwner",
							"nameLocation": "28507:26:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 907,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28533:2:0"
							},
							"src": "28501:35:0"
						},
						{
							"id": 910,
							"name": "TransferToNonERC721ReceiverImplementer",
							"nameLocation": "28543:38:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 909,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28581:2:0"
							},
							"src": "28537:47:0"
						},
						{
							"id": 912,
							"name": "TransferToZeroAddress",
							"nameLocation": "28591:21:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 911,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28612:2:0"
							},
							"src": "28585:30:0"
						},
						{
							"id": 914,
							"name": "URIQueryForNonexistentToken",
							"nameLocation": "28622:27:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 913,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "28649:2:0"
							},
							"src": "28616:36:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 916,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 262,
										"src": "29165:7:0"
									},
									"id": 917,
									"nodeType": "InheritanceSpecifier",
									"src": "29165:7:0"
								},
								{
									"baseName": {
										"id": 918,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 709,
										"src": "29174:6:0"
									},
									"id": 919,
									"nodeType": "InheritanceSpecifier",
									"src": "29174:6:0"
								},
								{
									"baseName": {
										"id": 920,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 823,
										"src": "29182:7:0"
									},
									"id": 921,
									"nodeType": "InheritanceSpecifier",
									"src": "29182:7:0"
								},
								{
									"baseName": {
										"id": 922,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "29191:15:0"
									},
									"id": 923,
									"nodeType": "InheritanceSpecifier",
									"src": "29191:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 915,
								"nodeType": "StructuredDocumentation",
								"src": "28654:490:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2184,
							"linearizedBaseContracts": [
								2184,
								877,
								823,
								709,
								687,
								262
							],
							"name": "ERC721A",
							"nameLocation": "29154:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 926,
									"libraryName": {
										"id": 924,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 659,
										"src": "29219:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "29213:26:0",
									"typeName": {
										"id": 925,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "29231:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 929,
									"libraryName": {
										"id": 927,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 241,
										"src": "29250:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "29244:26:0",
									"typeName": {
										"id": 928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29262:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "ERC721A.TokenOwnership",
									"id": 936,
									"members": [
										{
											"constant": false,
											"id": 931,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "29411:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 936,
											"src": "29403:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 930,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29403:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 933,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "29524:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 936,
											"src": "29517:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 932,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "29517:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 935,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "29599:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 936,
											"src": "29594:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 934,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "29594:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "29341:14:0",
									"nodeType": "StructDefinition",
									"scope": 2184,
									"src": "29334:278:0",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721A.AddressData",
									"id": 945,
									"members": [
										{
											"constant": false,
											"id": 938,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "29767:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "29760:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 937,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "29760:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 940,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "29866:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "29859:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 939,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "29859:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 942,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "29970:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "29963:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 941,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "29963:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "30197:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "30190:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 943,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "30190:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "29683:11:0",
									"nodeType": "StructDefinition",
									"scope": 2184,
									"src": "29676:531:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 947,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "30281:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30264:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30264:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 949,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "30354:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30337:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30337:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 951,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "30406:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30391:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 950,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30391:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 953,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "30453:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30438:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 952,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30438:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 958,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "30682:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30638:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 957,
										"keyType": {
											"id": 954,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30646:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "30638:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 956,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 955,
												"name": "TokenOwnership",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 936,
												"src": "30657:14:0"
											},
											"referencedDeclaration": 936,
											"src": "30657:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$936_storage_ptr",
												"typeString": "struct ERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 963,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "30785:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30745:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
										"typeString": "mapping(address => struct ERC721A.AddressData)"
									},
									"typeName": {
										"id": 962,
										"keyType": {
											"id": 959,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30753:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30745:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
											"typeString": "mapping(address => struct ERC721A.AddressData)"
										},
										"valueType": {
											"id": 961,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 960,
												"name": "AddressData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 945,
												"src": "30764:11:0"
											},
											"referencedDeclaration": 945,
											"src": "30764:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$945_storage_ptr",
												"typeString": "struct ERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 967,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "30889:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30853:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 966,
										"keyType": {
											"id": 964,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30861:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "30853:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 965,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30872:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 973,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "31012:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2184,
									"src": "30959:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 972,
										"keyType": {
											"id": 968,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30967:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30959:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 971,
											"keyType": {
												"id": 969,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "30986:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "30978:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 970,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "30997:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "31093:98:0",
										"statements": [
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 980,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "31103:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 981,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "31111:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "31103:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "31103:13:0"
											},
											{
												"expression": {
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 984,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "31126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 985,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "31136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "31126:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "31126:17:0"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "31153:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 989,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "31169:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31169:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31153:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "31153:31:0"
											}
										]
									},
									"id": 994,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "31063:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "31049:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "31084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "31070:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31070:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31048:44:0"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31093:0:0"
									},
									"scope": 2184,
									"src": "31037:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "31348:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31365:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 999,
												"id": 1001,
												"nodeType": "Return",
												"src": "31358:8:0"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "31197:81:0",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "31292:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31305:2:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "31339:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31338:9:0"
									},
									"scope": 2184,
									"src": "31283:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "31604:244:0",
										"statements": [
											{
												"id": 1016,
												"nodeType": "UncheckedBlock",
												"src": "31754:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "31785:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1010,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "31801:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31785:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1012,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "31816:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31816:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31785:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1015,
														"nodeType": "Return",
														"src": "31778:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "31379:167:0",
										"text": " @dev See {IERC721Enumerable-totalSupply}.\n @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "31560:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31571:2:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "31595:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31594:9:0"
									},
									"scope": 2184,
									"src": "31551:297:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "31992:221:0",
										"statements": [
											{
												"id": 1029,
												"nodeType": "UncheckedBlock",
												"src": "32134:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "32165:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1025,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "32181:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32181:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32165:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1023,
														"id": 1028,
														"nodeType": "Return",
														"src": "32158:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "31854:77:0",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "31945:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31957:2:0"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "31983:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31982:9:0"
									},
									"scope": 2184,
									"src": "31936:277:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										686,
										708
									],
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "32388:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1042,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "32417:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1044,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "32437:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$823_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$823_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1043,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "32432:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32432:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$823",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "32432:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "32417:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1048,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "32473:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1050,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "32493:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$877_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$877_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1049,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "32488:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32488:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$877",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "32488:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "32473:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "32417:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1057,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "32561:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1055,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "32537:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$2184_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 708,
															"src": "32537:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32537:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "32417:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1060,
												"nodeType": "Return",
												"src": "32398:175:0"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "32219:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "32289:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1038,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1036,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 709,
												"src": "32356:6:0"
											},
											{
												"id": 1037,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 687,
												"src": "32364:7:0"
											}
										],
										"src": "32347:25:0"
									},
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "32314:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "32307:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1033,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "32307:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32306:20:0"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "32382:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32381:6:0"
									},
									"scope": 2184,
									"src": "32280:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "32712:130:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "32726:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32743:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1072,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32735:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32735:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32726:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "IfStatement",
												"src": "32722:60:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1077,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "32754:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32754:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1079,
													"nodeType": "RevertStatement",
													"src": "32747:35:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1083,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "32807:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1085,
																"indexExpression": {
																	"id": 1084,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "32820:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32807:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$945_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 938,
															"src": "32807:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "32799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32799:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32799:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1070,
												"id": 1088,
												"nodeType": "Return",
												"src": "32792:43:0"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "32586:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "32648:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1067,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32685:8:0"
									},
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "32658:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32657:15:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "32703:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32702:9:0"
									},
									"scope": 2184,
									"src": "32639:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "32989:134:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "33003:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33020:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1099,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33012:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33003:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1107,
												"nodeType": "IfStatement",
												"src": "32999:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1104,
															"name": "MintedQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "33031:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33031:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1106,
													"nodeType": "RevertStatement",
													"src": "33024:34:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1110,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "33083:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1112,
																"indexExpression": {
																	"id": 1111,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "33096:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33083:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$945_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 940,
															"src": "33083:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "33075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33075:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33075:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1115,
												"nodeType": "Return",
												"src": "33068:48:0"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "32848:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "32928:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32950:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "32942:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32941:15:0"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "32980:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32979:9:0"
									},
									"scope": 2184,
									"src": "32919:204:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "33286:134:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1125,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "33300:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33317:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1126,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33309:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33309:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33300:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "33296:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1131,
															"name": "BurnedQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "33328:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33328:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1133,
													"nodeType": "RevertStatement",
													"src": "33321:34:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1137,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "33380:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 1139,
																"indexExpression": {
																	"id": 1138,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "33393:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33380:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$945_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 942,
															"src": "33380:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "33372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33372:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33372:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1142,
												"nodeType": "Return",
												"src": "33365:48:0"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "33129:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "33225:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33247:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "33239:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33238:15:0"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "33277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33276:9:0"
									},
									"scope": 2184,
									"src": "33216:204:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "33596:113:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "33610:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33627:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33619:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33619:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33610:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1161,
												"nodeType": "IfStatement",
												"src": "33606:56:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1158,
															"name": "AuxQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "33638:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33638:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1160,
													"nodeType": "RevertStatement",
													"src": "33631:31:0"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1162,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "33679:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
															}
														},
														"id": 1164,
														"indexExpression": {
															"id": 1163,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "33692:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33679:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$945_storage",
															"typeString": "struct ERC721A.AddressData storage ref"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 944,
													"src": "33679:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1166,
												"nodeType": "Return",
												"src": "33672:30:0"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "33426:102:0",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "33542:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "33550:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33549:15:0"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "33588:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1149,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "33588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33587:8:0"
									},
									"scope": 2184,
									"src": "33533:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "33944:112:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1176,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "33958:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33975:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1177,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33967:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33967:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33958:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "33954:56:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1182,
															"name": "AuxQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "33986:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33986:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1184,
													"nodeType": "RevertStatement",
													"src": "33979:31:0"
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1186,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "34020:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																	"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																}
															},
															"id": 1188,
															"indexExpression": {
																"id": 1187,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "34033:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34020:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$945_storage",
																"typeString": "struct ERC721A.AddressData storage ref"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "34020:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "34046:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "34020:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "34020:29:0"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "33715:171:0",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "33900:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33916:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "33908:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "33930:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "33923:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1172,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "33923:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33907:27:0"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33944:0:0"
									},
									"scope": 2184,
									"src": "33891:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "34336:999:0",
										"statements": [
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "34354:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "34346:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1203,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34346:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"id": 1205,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1197,
													"src": "34361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34346:22:0"
											},
											{
												"id": 1263,
												"nodeType": "UncheckedBlock",
												"src": "34379:902:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1207,
																		"name": "_startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "34407:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34407:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1209,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "34426:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34407:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1211,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "34434:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1212,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "34441:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34434:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "34407:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1262,
														"nodeType": "IfStatement",
														"src": "34403:868:0",
														"trueBody": {
															"id": 1261,
															"nodeType": "Block",
															"src": "34456:815:0",
															"statements": [
																{
																	"assignments": [
																		1217
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1217,
																			"mutability": "mutable",
																			"name": "ownership",
																			"nameLocation": "34496:9:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1261,
																			"src": "34474:31:0",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership"
																			},
																			"typeName": {
																				"id": 1216,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 1215,
																					"name": "TokenOwnership",
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 936,
																					"src": "34474:14:0"
																				},
																				"referencedDeclaration": 936,
																				"src": "34474:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$936_storage_ptr",
																					"typeString": "struct ERC721A.TokenOwnership"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1221,
																	"initialValue": {
																		"baseExpression": {
																			"id": 1218,
																			"name": "_ownerships",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "34508:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																				"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																			}
																		},
																		"id": 1220,
																		"indexExpression": {
																			"id": 1219,
																			"name": "curr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1204,
																			"src": "34520:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34508:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																			"typeString": "struct ERC721A.TokenOwnership storage ref"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "34474:51:0"
																},
																{
																	"condition": {
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "34547:17:0",
																		"subExpression": {
																			"expression": {
																				"id": 1222,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1217,
																				"src": "34548:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "burned",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 935,
																			"src": "34548:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1260,
																	"nodeType": "IfStatement",
																	"src": "34543:714:0",
																	"trueBody": {
																		"id": 1259,
																		"nodeType": "Block",
																		"src": "34566:691:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 1231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1225,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1217,
																							"src": "34592:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1226,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 931,
																						"src": "34592:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 1229,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "34618:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "34610:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1227,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "34610:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1230,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "34610:10:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "34592:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1235,
																				"nodeType": "IfStatement",
																				"src": "34588:99:0",
																				"trueBody": {
																					"id": 1234,
																					"nodeType": "Block",
																					"src": "34622:65:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1232,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1217,
																								"src": "34655:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																									"typeString": "struct ERC721A.TokenOwnership memory"
																								}
																							},
																							"functionReturnParameters": 1202,
																							"id": 1233,
																							"nodeType": "Return",
																							"src": "34648:16:0"
																						}
																					]
																				}
																			},
																			{
																				"body": {
																					"id": 1257,
																					"nodeType": "Block",
																					"src": "34997:242:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1238,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "--",
																								"prefix": false,
																								"src": "35023:6:0",
																								"subExpression": {
																									"id": 1237,
																									"name": "curr",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1204,
																									"src": "35023:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1239,
																							"nodeType": "ExpressionStatement",
																							"src": "35023:6:0"
																						},
																						{
																							"expression": {
																								"id": 1244,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1240,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1217,
																									"src": "35055:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																										"typeString": "struct ERC721A.TokenOwnership memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 1241,
																										"name": "_ownerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 958,
																										"src": "35067:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																										}
																									},
																									"id": 1243,
																									"indexExpression": {
																										"id": 1242,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1204,
																										"src": "35079:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "35067:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																										"typeString": "struct ERC721A.TokenOwnership storage ref"
																									}
																								},
																								"src": "35055:29:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																									"typeString": "struct ERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 1245,
																							"nodeType": "ExpressionStatement",
																							"src": "35055:29:0"
																						},
																						{
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								"id": 1252,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1246,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1217,
																										"src": "35114:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																											"typeString": "struct ERC721A.TokenOwnership memory"
																										}
																									},
																									"id": 1247,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "addr",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 931,
																									"src": "35114:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "!=",
																								"rightExpression": {
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 1250,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "35140:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 1249,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "35132:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 1248,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "35132:7:0",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 1251,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "35132:10:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"src": "35114:28:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 1256,
																							"nodeType": "IfStatement",
																							"src": "35110:107:0",
																							"trueBody": {
																								"id": 1255,
																								"nodeType": "Block",
																								"src": "35144:73:0",
																								"statements": [
																									{
																										"expression": {
																											"id": 1253,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1217,
																											"src": "35181:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																												"typeString": "struct ERC721A.TokenOwnership memory"
																											}
																										},
																										"functionReturnParameters": 1202,
																										"id": 1254,
																										"nodeType": "Return",
																										"src": "35174:16:0"
																									}
																								]
																							}
																						}
																					]
																				},
																				"condition": {
																					"hexValue": "74727565",
																					"id": 1236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "34991:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"id": 1258,
																				"nodeType": "WhileStatement",
																				"src": "34984:255:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1264,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "35297:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35297:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "RevertStatement",
												"src": "35290:38:0"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "34062:185:0",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownershipOf",
									"nameLocation": "34261:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34281:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "34273:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34272:17:0"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "34313:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
													"typeString": "struct ERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1199,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 936,
														"src": "34313:14:0"
													},
													"referencedDeclaration": 936,
													"src": "34313:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$936_storage_ptr",
														"typeString": "struct ERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34312:23:0"
									},
									"scope": 2184,
									"src": "34252:1083:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										756
									],
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "35465:49:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1278,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "35494:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1277,
															"name": "ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "35482:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$936_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35482:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 931,
													"src": "35482:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1276,
												"id": 1281,
												"nodeType": "Return",
												"src": "35475:32:0"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "35341:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "35401:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1273,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35438:8:0"
									},
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35417:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "35409:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35408:17:0"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "35456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35455:9:0"
									},
									"scope": 2184,
									"src": "35392:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "35645:29:0",
										"statements": [
											{
												"expression": {
													"id": 1290,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 951,
													"src": "35662:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1291,
												"nodeType": "Return",
												"src": "35655:12:0"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "35520:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "35585:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1286,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35612:8:0"
									},
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35589:2:0"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "35630:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35629:15:0"
									},
									"scope": 2184,
									"src": "35576:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										868
									],
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "35809:31:0",
										"statements": [
											{
												"expression": {
													"id": 1300,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 953,
													"src": "35826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1301,
												"nodeType": "Return",
												"src": "35819:14:0"
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "35680:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "35747:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1296,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35776:8:0"
									},
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35753:2:0"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "35794:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35794:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35793:15:0"
									},
									"scope": 2184,
									"src": "35738:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "35994:234:0",
										"statements": [
											{
												"condition": {
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "36008:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1313,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "36017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1312,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "36009:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36009:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "36004:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1316,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "36034:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36034:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1318,
													"nodeType": "RevertStatement",
													"src": "36027:36:0"
												}
											},
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "36088:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "36074:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1320,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "36074:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1322,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "36098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36098:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36074:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1327,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1321,
																		"src": "36131:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36125:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1325,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "36125:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36125:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "36125:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36150:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "36125:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36219:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "36125:96:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1336,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1321,
																		"src": "36178:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1337,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "36187:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 123,
																			"src": "36187:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36187:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "2e6a736f6e",
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36207:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																			"typeString": "literal_string \".json\""
																		},
																		"value": ".json"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																			"typeString": "literal_string \".json\""
																		}
																	],
																	"expression": {
																		"id": 1334,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "36161:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "36161:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36161:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36154:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1332,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "36154:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36154:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1345,
												"nodeType": "Return",
												"src": "36118:103:0"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "35846:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "35915:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35961:8:0"
									},
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "35924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35923:17:0"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "35979:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1309,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35978:15:0"
									},
									"scope": 2184,
									"src": "35906:322:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "36535:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36552:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1352,
												"id": 1354,
												"nodeType": "Return",
												"src": "36545:9:0"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "36234:230:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "36478:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36486:2:0"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "36520:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36519:15:0"
									},
									"scope": 2184,
									"src": "36469:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										784
									],
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "36680:300:0",
										"statements": [
											{
												"assignments": [
													1366
												],
												"declarations": [
													{
														"constant": false,
														"id": 1366,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "36698:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "36690:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1365,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36690:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"arguments": [
														{
															"id": 1369,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "36722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1367,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "36706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$2184_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1283,
														"src": "36706:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36706:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36690:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "36744:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1373,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "36750:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36744:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "36740:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1375,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "36764:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36764:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1377,
													"nodeType": "RevertStatement",
													"src": "36757:31:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1379,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "36803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36803:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1381,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "36819:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36803:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "36828:38:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1384,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "36846:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1385,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "36853:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36853:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1383,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "36829:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36829:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36803:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "36799:136:0",
												"trueBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "36868:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1390,
																	"name": "ApprovalCallerNotOwnerNorApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "36889:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36889:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1392,
															"nodeType": "RevertStatement",
															"src": "36882:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "36954:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "36958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1398,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "36967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1395,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "36945:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36945:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "36945:28:0"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "36567:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "36627:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1363,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36671:8:0"
									},
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36643:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "36635:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36655:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "36647:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36634:29:0"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36680:0:0"
									},
									"scope": 2184,
									"src": "36618:362:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "37118:123:0",
										"statements": [
											{
												"condition": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "37132:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1412,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "37141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1411,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "37133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37133:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1418,
												"nodeType": "IfStatement",
												"src": "37128:64:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1415,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "37158:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37158:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1417,
													"nodeType": "RevertStatement",
													"src": "37151:41:0"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1419,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "37210:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1421,
													"indexExpression": {
														"id": 1420,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "37226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37210:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1422,
												"nodeType": "Return",
												"src": "37203:31:0"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "36986:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "37050:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1407,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37091:8:0"
									},
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "37062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37061:17:0"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "37109:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37108:9:0"
									},
									"scope": 2184,
									"src": "37041:200:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "37384:198:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1433,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "37398:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1434,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "37410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37410:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37398:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1440,
												"nodeType": "IfStatement",
												"src": "37394:54:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1437,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "37431:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37431:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1439,
													"nodeType": "RevertStatement",
													"src": "37424:24:0"
												}
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1441,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "37459:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1445,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1442,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "37478:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37478:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "37459:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1446,
														"indexExpression": {
															"id": 1444,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "37492:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37459:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1447,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "37504:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "37459:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "37459:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1451,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "37542:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37542:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1453,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "37556:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "37566:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1450,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "37527:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37527:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "EmitStatement",
												"src": "37522:53:0"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "37247:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "37317:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1431,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37375:8:0"
									},
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37343:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "37335:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "37358:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "37353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37334:33:0"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37384:0:0"
									},
									"scope": 2184,
									"src": "37308:274:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										810
									],
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "37751:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1469,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "37768:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1471,
														"indexExpression": {
															"id": 1470,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "37787:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "37768:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1473,
													"indexExpression": {
														"id": 1472,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "37794:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37768:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1468,
												"id": 1474,
												"nodeType": "Return",
												"src": "37761:42:0"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "37588:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "37657:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1465,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37727:8:0"
									},
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "37674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "37689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37673:33:0"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "37745:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37745:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37744:6:0"
									},
									"scope": 2184,
									"src": "37648:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "37991:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1488,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "38011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "38017:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "38021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1487,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "38001:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38001:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "38001:28:0"
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "37816:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "37881:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1485,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37982:8:0"
									},
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37911:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "37903:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37933:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "37925:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37953:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "37945:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37893:73:0"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37991:0:0"
									},
									"scope": 2184,
									"src": "37872:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										766
									],
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "38225:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1506,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "38252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1507,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "38258:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "38262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38271:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1505,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1513,
															1549
														],
														"referencedDeclaration": 1549,
														"src": "38235:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38235:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "38235:39:0"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "38042:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "38111:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38216:8:0"
									},
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38145:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "38137:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38167:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "38159:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "38179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38127:73:0"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38225:0:0"
									},
									"scope": 2184,
									"src": "38102:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										822
									],
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "38498:208:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "38518:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "38524:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "38528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1526,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "38508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38508:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "38508:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1532,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "38550:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 382,
															"src": "38550:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38550:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "38569:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1536,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "38601:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1537,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "38607:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1538,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "38611:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1539,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "38620:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1535,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2157,
																"src": "38570:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38570:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "38550:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "38546:154:0",
												"trueBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "38628:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1543,
																	"name": "TransferToNonERC721ReceiverImplementer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "38649:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38649:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1545,
															"nodeType": "RevertStatement",
															"src": "38642:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "38287:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "38356:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38489:8:0"
									},
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38390:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "38382:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38412:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "38404:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "38424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "38462:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "38449:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38449:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38372:101:0"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38498:0:0"
									},
									"scope": 2184,
									"src": "38347:359:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "39015:121:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1557,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "39032:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39032:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1559,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "39051:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39032:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1561,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "39062:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1562,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "39072:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39062:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "39032:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "39101:28:0",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1565,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "39102:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																		"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1567,
																"indexExpression": {
																	"id": 1566,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "39114:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "39102:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																	"typeString": "struct ERC721A.TokenOwnership storage ref"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 935,
															"src": "39102:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39032:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1571,
												"nodeType": "Return",
												"src": "39025:104:0"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "38712:235:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "38961:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38977:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "38969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38968:17:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "39009:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39008:6:0"
									},
									"scope": 2184,
									"src": "38952:184:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "39200:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1581,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "39220:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1582,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "39224:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39234:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1580,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1587,
															1605
														],
														"referencedDeclaration": 1605,
														"src": "39210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39210:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "39210:27:0"
											}
										]
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "39151:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39169:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "39161:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "39181:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "39173:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39160:30:0"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39200:0:0"
									},
									"scope": 2184,
									"src": "39142:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "39703:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "39719:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "39723:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1600,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "39733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39740:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1597,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "39713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bool)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39713:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "39713:32:0"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "39250:340:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "39604:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39631:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "39623:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "39651:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "39643:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "39682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "39669:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39669:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39613:80:0"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39703:0:0"
									},
									"scope": 2184,
									"src": "39595:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "40122:1610:0",
										"statements": [
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "40140:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "40132:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40132:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1620,
												"initialValue": {
													"id": 1619,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "40155:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40132:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1621,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "40182:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1622,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40188:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40188:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40182:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"nodeType": "IfStatement",
												"src": "40178:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1627,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "40207:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40207:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1629,
													"nodeType": "RevertStatement",
													"src": "40200:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1631,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "40240:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40252:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40240:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "40236:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1634,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "40262:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40262:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1636,
													"nodeType": "RevertStatement",
													"src": "40255:25:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40321:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40313:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40313:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40313:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "40325:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1644,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "40329:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1645,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "40343:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1638,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "40291:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40291:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "40291:61:0"
											},
											{
												"id": 1760,
												"nodeType": "UncheckedBlock",
												"src": "40599:1057:0",
												"statements": [
													{
														"expression": {
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1648,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "40623:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1650,
																	"indexExpression": {
																		"id": 1649,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "40636:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40623:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$945_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "40623:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1654,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "40658:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40651:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1652,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "40651:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40651:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "40623:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1657,
														"nodeType": "ExpressionStatement",
														"src": "40623:44:0"
													},
													{
														"expression": {
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1658,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "40681:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1660,
																	"indexExpression": {
																		"id": 1659,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "40694:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40681:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$945_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "40681:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1664,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "40721:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40714:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1662,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "40714:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40714:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "40681:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1667,
														"nodeType": "ExpressionStatement",
														"src": "40681:49:0"
													},
													{
														"expression": {
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1668,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "40745:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1670,
																	"indexExpression": {
																		"id": 1669,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "40757:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40745:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "40745:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1672,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1608,
																"src": "40778:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "40745:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1674,
														"nodeType": "ExpressionStatement",
														"src": "40745:35:0"
													},
													{
														"expression": {
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1675,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "40794:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1677,
																	"indexExpression": {
																		"id": 1676,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "40806:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40794:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 933,
																"src": "40794:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1681,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "40844:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "40844:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40837:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1679,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "40837:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40837:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "40794:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "40794:66:0"
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "40883:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1760,
																"src": "40875:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "40875:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1689,
														"initialValue": {
															"id": 1688,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "40898:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "40875:35:0"
													},
													{
														"assignments": [
															1691
														],
														"declarations": [
															{
																"constant": false,
																"id": 1691,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "40932:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1760,
																"src": "40924:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1690,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "40924:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1695,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1692,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "40938:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1693,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "40953:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40938:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "40924:37:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1696,
																"name": "safe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "40980:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1697,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "40988:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 382,
																	"src": "40988:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40988:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "40980:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1754,
															"nodeType": "Block",
															"src": "41454:150:0",
															"statements": [
																{
																	"body": {
																		"id": 1749,
																		"nodeType": "Block",
																		"src": "41475:86:0",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1742,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "41519:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1741,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "41511:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1740,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "41511:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1743,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "41511:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1744,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1608,
																							"src": "41523:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1746,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "41527:14:0",
																							"subExpression": {
																								"id": 1745,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1687,
																								"src": "41527:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1739,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 722,
																						"src": "41502:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "41502:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1748,
																				"nodeType": "EmitStatement",
																				"src": "41497:45:0"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1750,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1687,
																			"src": "41569:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1751,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "41585:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41569:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1753,
																	"nodeType": "DoWhileStatement",
																	"src": "41472:118:0"
																}
															]
														},
														"id": 1755,
														"nodeType": "IfStatement",
														"src": "40976:628:0",
														"trueBody": {
															"id": 1738,
															"nodeType": "Block",
															"src": "41005:443:0",
															"statements": [
																{
																	"body": {
																		"id": 1726,
																		"nodeType": "Block",
																		"src": "41026:277:0",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1704,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "41070:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1703,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "41062:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1702,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "41062:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1705,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "41062:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1706,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1608,
																							"src": "41074:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1707,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1687,
																							"src": "41078:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1701,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 722,
																						"src": "41053:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "41053:38:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1709,
																				"nodeType": "EmitStatement",
																				"src": "41048:43:0"
																			},
																			{
																				"condition": {
																					"id": 1720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "41117:70:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1713,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "41157:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1712,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "41149:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1711,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "41149:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1714,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "41149:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1715,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1608,
																								"src": "41161:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1717,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "41165:14:0",
																								"subExpression": {
																									"id": 1716,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1687,
																									"src": "41165:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1718,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1612,
																								"src": "41181:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1710,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2157,
																							"src": "41118:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1719,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "41118:69:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1725,
																				"nodeType": "IfStatement",
																				"src": "41113:172:0",
																				"trueBody": {
																					"id": 1724,
																					"nodeType": "Block",
																					"src": "41189:96:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1721,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 910,
																									"src": "41222:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1722,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "41222:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1723,
																							"nodeType": "RevertStatement",
																							"src": "41215:47:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1727,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1687,
																			"src": "41311:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1728,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "41327:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41311:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1730,
																	"nodeType": "DoWhileStatement",
																	"src": "41023:309:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1731,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "41394:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1732,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "41411:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41394:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1737,
																	"nodeType": "IfStatement",
																	"src": "41390:43:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1734,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "41425:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "41425:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1736,
																		"nodeType": "ExpressionStatement",
																		"src": "41425:8:0"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1756,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "41617:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1757,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "41633:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41617:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1759,
														"nodeType": "ExpressionStatement",
														"src": "41617:28:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "41694:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41686:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41686:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41686:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1766,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "41698:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1767,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "41702:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1768,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "41716:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "41665:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41665:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "41665:60:0"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "39758:236:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "40008:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40031:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "40023:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "40051:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "40043:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "40082:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "40069:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40069:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "40102:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "40097:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40097:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40013:99:0"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40122:0:0"
									},
									"scope": 2184,
									"src": "39999:1733:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "42074:1967:0",
										"statements": [
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "42106:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "42084:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1783,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1782,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 936,
																"src": "42084:14:0"
															},
															"referencedDeclaration": 936,
															"src": "42084:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$936_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"arguments": [
														{
															"id": 1786,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "42134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"name": "ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "42122:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$936_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42122:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42084:58:0"
											},
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "42158:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "42153:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1789,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42153:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1791,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 252,
																			"src": "42179:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42179:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1793,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "42195:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 931,
																		"src": "42195:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "42179:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1797,
																				"name": "prevOwnership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "42246:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 1798,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "addr",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 931,
																			"src": "42246:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1799,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "42266:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42266:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1796,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "42229:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42229:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "42179:100:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1804,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "42307:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1803,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "42295:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42295:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1806,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "42319:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42319:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "42295:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42179:152:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1810,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "42178:154:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42153:179:0"
											},
											{
												"condition": {
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "42347:18:0",
													"subExpression": {
														"id": 1812,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "42348:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1817,
												"nodeType": "IfStatement",
												"src": "42343:66:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1814,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "42374:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42374:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1816,
													"nodeType": "RevertStatement",
													"src": "42367:42:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1818,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "42423:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																"typeString": "struct ERC721A.TokenOwnership memory"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 931,
														"src": "42423:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1820,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "42445:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42423:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1825,
												"nodeType": "IfStatement",
												"src": "42419:67:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1822,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "42458:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42458:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1824,
													"nodeType": "RevertStatement",
													"src": "42451:35:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "42500:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42514:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1827,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42506:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42506:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42500:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1835,
												"nodeType": "IfStatement",
												"src": "42496:52:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1832,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "42525:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42525:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1834,
													"nodeType": "RevertStatement",
													"src": "42518:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1837,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "42581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1838,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "42587:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1839,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "42591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42600:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1836,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "42559:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42559:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "42559:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42681:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42673:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "42673:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42673:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1848,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "42685:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1849,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "42694:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 931,
															"src": "42694:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1843,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "42664:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42664:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "42664:49:0"
											},
											{
												"id": 1923,
												"nodeType": "UncheckedBlock",
												"src": "42979:961:0",
												"statements": [
													{
														"expression": {
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1853,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "43003:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1855,
																	"indexExpression": {
																		"id": 1854,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "43016:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43003:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$945_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "43003:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43033:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "43003:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1859,
														"nodeType": "ExpressionStatement",
														"src": "43003:31:0"
													},
													{
														"expression": {
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1860,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "43048:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1862,
																	"indexExpression": {
																		"id": 1861,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "43061:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43048:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$945_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "43048:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "43048:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1866,
														"nodeType": "ExpressionStatement",
														"src": "43048:29:0"
													},
													{
														"expression": {
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1867,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "43092:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1869,
																	"indexExpression": {
																		"id": 1868,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "43104:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43092:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "43092:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1871,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "43120:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43092:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1873,
														"nodeType": "ExpressionStatement",
														"src": "43092:30:0"
													},
													{
														"expression": {
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1874,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "43136:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1876,
																	"indexExpression": {
																		"id": 1875,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "43148:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43136:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 933,
																"src": "43136:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1880,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "43181:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "43181:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "43174:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1878,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "43174:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43174:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "43136:61:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1884,
														"nodeType": "ExpressionStatement",
														"src": "43136:61:0"
													},
													{
														"assignments": [
															1886
														],
														"declarations": [
															{
																"constant": false,
																"id": 1886,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "43453:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "43445:19:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1885,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "43445:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1890,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1887,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "43467:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43477:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "43467:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43445:33:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1891,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "43496:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1893,
																	"indexExpression": {
																		"id": 1892,
																		"name": "nextTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1886,
																		"src": "43508:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43496:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "43496:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43537:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "43529:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1895,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "43529:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43529:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43496:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1922,
														"nodeType": "IfStatement",
														"src": "43492:438:0",
														"trueBody": {
															"id": 1921,
															"nodeType": "Block",
															"src": "43541:389:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1900,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "43704:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1901,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "43718:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "43704:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1920,
																	"nodeType": "IfStatement",
																	"src": "43700:216:0",
																	"trueBody": {
																		"id": 1919,
																		"nodeType": "Block",
																		"src": "43733:183:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 1909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1903,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 958,
																								"src": "43755:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 1905,
																							"indexExpression": {
																								"id": 1904,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1886,
																								"src": "43767:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "43755:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 1906,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 931,
																						"src": "43755:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1907,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1784,
																							"src": "43787:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1908,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 931,
																						"src": "43787:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "43755:50:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1910,
																				"nodeType": "ExpressionStatement",
																				"src": "43755:50:0"
																			},
																			{
																				"expression": {
																					"id": 1917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1911,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 958,
																								"src": "43827:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 1913,
																							"indexExpression": {
																								"id": 1912,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1886,
																								"src": "43839:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "43827:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 1914,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 933,
																						"src": "43827:39:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1915,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1784,
																							"src": "43869:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1916,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 933,
																						"src": "43869:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "43827:70:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 1918,
																				"nodeType": "ExpressionStatement",
																				"src": "43827:70:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1925,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "43964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "43970:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "43974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1924,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "43955:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43955:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "EmitStatement",
												"src": "43950:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1931,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "44013:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1932,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "44019:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1933,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "44023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44032:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1930,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "43992:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43992:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "43992:42:0"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "41738:231:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "41983:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "42002:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42032:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "42024:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42052:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "42044:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41992:73:0"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42074:0:0"
									},
									"scope": 2184,
									"src": "41974:2067:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "44307:1950:0",
										"statements": [
											{
												"assignments": [
													1946
												],
												"declarations": [
													{
														"constant": false,
														"id": 1946,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "44339:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "44317:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1945,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1944,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 936,
																"src": "44317:14:0"
															},
															"referencedDeclaration": 936,
															"src": "44317:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$936_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1950,
												"initialValue": {
													"arguments": [
														{
															"id": 1948,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "44367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1947,
														"name": "ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "44355:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$936_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44355:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44317:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1952,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "44408:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 931,
															"src": "44408:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1954,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44428:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44428:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1958,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "44440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1951,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "44386:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44386:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "44386:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44530:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44522:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44522:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1967,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "44534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1968,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "44543:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 931,
															"src": "44543:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1962,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "44513:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44513:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "44513:49:0"
											},
											{
												"id": 2052,
												"nodeType": "UncheckedBlock",
												"src": "44828:1137:0",
												"statements": [
													{
														"expression": {
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1972,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "44852:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1975,
																	"indexExpression": {
																		"expression": {
																			"id": 1973,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "44865:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 931,
																		"src": "44865:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "44852:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$945_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1976,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "44852:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44896:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "44852:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1979,
														"nodeType": "ExpressionStatement",
														"src": "44852:45:0"
													},
													{
														"expression": {
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1980,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "44911:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$945_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1983,
																	"indexExpression": {
																		"expression": {
																			"id": 1981,
																			"name": "prevOwnership",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "44924:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership memory"
																			}
																		},
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addr",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 931,
																		"src": "44924:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "44911:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$945_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 942,
																"src": "44911:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44960:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "44911:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1987,
														"nodeType": "ExpressionStatement",
														"src": "44911:50:0"
													},
													{
														"expression": {
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1988,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "45057:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1990,
																	"indexExpression": {
																		"id": 1989,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "45069:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "45057:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "45057:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"expression": {
																	"id": 1992,
																	"name": "prevOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "45085:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																		"typeString": "struct ERC721A.TokenOwnership memory"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "45085:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "45057:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1995,
														"nodeType": "ExpressionStatement",
														"src": "45057:46:0"
													},
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1996,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "45117:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1998,
																	"indexExpression": {
																		"id": 1997,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "45129:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "45117:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 933,
																"src": "45117:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2002,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "45162:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "45162:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "45155:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2000,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "45155:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45155:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "45117:61:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "45117:61:0"
													},
													{
														"expression": {
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2007,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "45192:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2009,
																	"indexExpression": {
																		"id": 2008,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "45204:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "45192:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 935,
																"src": "45192:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45222:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "45192:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2013,
														"nodeType": "ExpressionStatement",
														"src": "45192:34:0"
													},
													{
														"assignments": [
															2015
														],
														"declarations": [
															{
																"constant": false,
																"id": 2015,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "45478:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 2052,
																"src": "45470:19:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2014,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "45470:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2019,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2016,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "45492:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45502:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "45492:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "45470:33:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2020,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "45521:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2022,
																	"indexExpression": {
																		"id": 2021,
																		"name": "nextTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "45533:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "45521:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "45521:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "45562:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "45554:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2024,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "45554:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45554:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "45521:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2051,
														"nodeType": "IfStatement",
														"src": "45517:438:0",
														"trueBody": {
															"id": 2050,
															"nodeType": "Block",
															"src": "45566:389:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2029,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "45729:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2030,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "45743:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "45729:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2049,
																	"nodeType": "IfStatement",
																	"src": "45725:216:0",
																	"trueBody": {
																		"id": 2048,
																		"nodeType": "Block",
																		"src": "45758:183:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2038,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 2032,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 958,
																								"src": "45780:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 2034,
																							"indexExpression": {
																								"id": 2033,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2015,
																								"src": "45792:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "45780:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 2035,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 931,
																						"src": "45780:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2036,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1946,
																							"src": "45812:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2037,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 931,
																						"src": "45812:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "45780:50:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2039,
																				"nodeType": "ExpressionStatement",
																				"src": "45780:50:0"
																			},
																			{
																				"expression": {
																					"id": 2046,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 2040,
																								"name": "_ownerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 958,
																								"src": "45852:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$936_storage_$",
																									"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																								}
																							},
																							"id": 2042,
																							"indexExpression": {
																								"id": 2041,
																								"name": "nextTokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2015,
																								"src": "45864:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "45852:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_storage",
																								"typeString": "struct ERC721A.TokenOwnership storage ref"
																							}
																						},
																						"id": 2043,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 933,
																						"src": "45852:39:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2044,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1946,
																							"src": "45894:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2045,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 933,
																						"src": "45894:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "45852:70:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2047,
																				"nodeType": "ExpressionStatement",
																				"src": "45852:70:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2054,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "45989:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 931,
															"src": "45989:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46017:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46009:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46009:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46009:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2060,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "46021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2053,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "45980:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45980:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "EmitStatement",
												"src": "45975:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2064,
																"name": "prevOwnership",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "46060:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$936_memory_ptr",
																	"typeString": "struct ERC721A.TokenOwnership memory"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 931,
															"src": "46060:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46088:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46080:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2066,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46080:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46080:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2070,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "46092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46101:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2063,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "46039:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46039:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "46039:64:0"
											},
											{
												"id": 2077,
												"nodeType": "UncheckedBlock",
												"src": "46202:49:0",
												"statements": [
													{
														"expression": {
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "46226:14:0",
															"subExpression": {
																"id": 2074,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "46226:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2076,
														"nodeType": "ExpressionStatement",
														"src": "46226:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "44047:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "44267:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44281:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "44273:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44272:17:0"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44307:0:0"
									},
									"scope": 2184,
									"src": "44258:1999:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2101,
										"nodeType": "Block",
										"src": "46468:89:0",
										"statements": [
											{
												"expression": {
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2089,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "46478:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2091,
														"indexExpression": {
															"id": 2090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "46494:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46478:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2092,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "46505:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46478:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "46478:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2096,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "46531:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2097,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "46538:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2098,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "46542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2095,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "46522:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46522:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2100,
												"nodeType": "EmitStatement",
												"src": "46517:33:0"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "46263:100:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 2102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "46377:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46403:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "46395:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46395:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "46415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "46448:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "46440:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46385:74:0"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46468:0:0"
									},
									"scope": 2184,
									"src": "46368:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "47202:486:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2137,
															"nodeType": "Block",
															"src": "47313:87:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2129,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2127,
																			"src": "47334:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2131,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2107,
																							"src": "47360:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2130,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 676,
																						"src": "47344:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$676_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 2132,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "47344:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$676",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 2133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 675,
																				"src": "47344:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "47344:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "47334:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2115,
																	"id": 2136,
																	"nodeType": "Return",
																	"src": "47327:62:0"
																}
															]
														},
														"errorName": "",
														"id": 2138,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2128,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2127,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "47305:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2138,
																	"src": "47298:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2126,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "47298:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "47297:15:0"
														},
														"src": "47289:111:0"
													},
													{
														"block": {
															"id": 2153,
															"nodeType": "Block",
															"src": "47429:253:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2142,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2140,
																				"src": "47447:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "47447:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47464:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "47447:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2151,
																		"nodeType": "Block",
																		"src": "47553:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "47580:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "47613:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "47617:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "47609:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "47609:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "47632:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "47626:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "47626:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "47602:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "47602:38:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "47602:38:0"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2140,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "47617:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2140,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "47632:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 2150,
																				"nodeType": "InlineAssembly",
																				"src": "47571:87:0"
																			}
																		]
																	},
																	"id": 2152,
																	"nodeType": "IfStatement",
																	"src": "47443:229:0",
																	"trueBody": {
																		"id": 2149,
																		"nodeType": "Block",
																		"src": "47467:80:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2146,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 910,
																						"src": "47492:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "47492:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2148,
																				"nodeType": "RevertStatement",
																				"src": "47485:47:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2154,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2141,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2140,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "47421:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2154,
																	"src": "47408:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2139,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "47408:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "47407:21:0"
														},
														"src": "47401:281:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2120,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "47253:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47253:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2122,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "47267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "47273:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2124,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "47282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2117,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "47232:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2116,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "47216:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$676_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47216:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$676",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "47216:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47216:72:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2155,
												"nodeType": "TryStatement",
												"src": "47212:470:0"
											}
										]
									},
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "46563:470:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "47047:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "47087:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47117:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "47109:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47137:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "47129:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "47167:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "47154:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47154:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47077:101:0"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "47196:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47196:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47195:6:0"
									},
									"scope": 2184,
									"src": "47038:650:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "48471:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "47694:620:0",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "48328:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "48367:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "48359:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48389:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "48381:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "48409:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "48401:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "48439:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "48431:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48349:104:0"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48471:0:0"
									},
									"scope": 2184,
									"src": "48319:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "49265:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "48479:630:0",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "49123:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49161:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "49153:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49183:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "49175:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "49203:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "49195:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "49233:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "49225:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49143:104:0"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49265:0:0"
									},
									"scope": 2184,
									"src": "49114:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2564,
							"src": "29145:20124:0",
							"usedErrors": [
								880,
								882,
								884,
								886,
								888,
								902,
								906,
								908,
								910,
								912,
								914
							]
						},
						{
							"id": 2185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "49307:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2186,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2184,
										"src": "49362:7:0"
									},
									"id": 2187,
									"nodeType": "InheritanceSpecifier",
									"src": "49362:7:0"
								},
								{
									"baseName": {
										"id": 2188,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 365,
										"src": "49371:7:0"
									},
									"id": 2189,
									"nodeType": "InheritanceSpecifier",
									"src": "49371:7:0"
								},
								{
									"baseName": {
										"id": 2190,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "49380:15:0"
									},
									"id": 2191,
									"nodeType": "InheritanceSpecifier",
									"src": "49380:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2563,
							"linearizedBaseContracts": [
								2563,
								39,
								365,
								2184,
								877,
								823,
								709,
								687,
								262
							],
							"name": "StonersTownWtf",
							"nameLocation": "49344:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2194,
									"libraryName": {
										"id": 2192,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 241,
										"src": "49408:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "49402:26:0",
									"typeName": {
										"id": 2193,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49420:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c8eca562",
									"id": 2196,
									"mutability": "mutable",
									"name": "budPrice",
									"nameLocation": "49449:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49434:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49434:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eae9c95d",
									"id": 2198,
									"mutability": "mutable",
									"name": "maxbuds",
									"nameLocation": "49478:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49463:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49463:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2200,
									"mutability": "mutable",
									"name": "weedStore",
									"nameLocation": "49506:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49491:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2199,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "49491:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5381f6e2",
									"id": 2202,
									"mutability": "mutable",
									"name": "freeBudPerWallet",
									"nameLocation": "49536:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49521:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2201,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49521:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "28cb250f",
									"id": 2204,
									"mutability": "mutable",
									"name": "maxBudPerTrans",
									"nameLocation": "49573:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49558:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49558:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "76d02b71",
									"id": 2206,
									"mutability": "mutable",
									"name": "IS_SALE_ACTIVE",
									"nameLocation": "49605:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49593:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2205,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "49593:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1b5a272",
									"id": 2208,
									"mutability": "mutable",
									"name": "freeBudAllowedUntil",
									"nameLocation": "49640:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49625:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49625:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fdb4953a",
									"id": 2210,
									"mutability": "mutable",
									"name": "METADATA_FROZEN",
									"nameLocation": "49677:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49665:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2209,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "49665:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2214,
									"mutability": "mutable",
									"name": "freeMintCountMap",
									"nameLocation": "49735:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "49699:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2213,
										"keyType": {
											"id": 2211,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49707:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49699:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "49718:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "50022:269:0",
										"statements": [
											{
												"expression": {
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2235,
														"name": "budPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "50032:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2236,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "50043:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50032:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "50032:16:0"
											},
											{
												"expression": {
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2239,
														"name": "maxbuds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "50058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2240,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "50068:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50058:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "50058:19:0"
											},
											{
												"expression": {
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2243,
														"name": "weedStore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "50087:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2244,
														"name": "baseUri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "50099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "50087:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "50087:19:0"
											},
											{
												"expression": {
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2247,
														"name": "freeBudPerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "50116:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2248,
														"name": "freeMintAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "50135:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50116:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "50116:36:0"
											},
											{
												"expression": {
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2251,
														"name": "maxBudPerTrans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "50162:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2252,
														"name": "maxMintPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "50179:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50162:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "50162:29:0"
											},
											{
												"expression": {
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2255,
														"name": "IS_SALE_ACTIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "50201:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2256,
														"name": "isSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "50218:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "50201:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2258,
												"nodeType": "ExpressionStatement",
												"src": "50201:29:0"
											},
											{
												"expression": {
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2259,
														"name": "freeBudAllowedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "50240:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2260,
														"name": "freeMintIsAllowedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "50262:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50240:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "50240:44:0"
											}
										]
									},
									"id": 2264,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53746f6e657273546f776e577466",
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "49997:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_07dbe00beaf1d2b7fdeb88f0d6e8ab4048bb95ea2e787c4106515db183b4df92",
														"typeString": "literal_string \"StonersTownWtf\""
													},
													"value": "StonersTownWtf"
												},
												{
													"hexValue": "535457",
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50015:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_095ad361f417dbe4bab687881521609e8e001d32910858034eac8a0f159638ad",
														"typeString": "literal_string \"STW\""
													},
													"value": "STW"
												}
											],
											"id": 2233,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2230,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2184,
												"src": "49989:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "49989:32:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "49787:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "49779:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "maxSupply",
												"nameLocation": "49810:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "49802:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "baseUri",
												"nameLocation": "49843:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "49829:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "49829:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "freeMintAllowance",
												"nameLocation": "49868:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "49860:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "maxMintPerTx",
												"nameLocation": "49903:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "49895:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "isSaleActive",
												"nameLocation": "49930:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "49925:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "49925:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "freeMintIsAllowedUntil",
												"nameLocation": "49960:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "49952:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49769:219:0"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50022:0:0"
									},
									"scope": 2563,
									"src": "49758:533:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2278,
										"nodeType": "Block",
										"src": "50388:50:0",
										"statements": [
											{
												"expression": {
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2272,
															"name": "freeMintCountMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "50398:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2274,
														"indexExpression": {
															"id": 2273,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "50415:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50398:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2275,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "50426:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50398:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "50398:33:0"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "50297:17:0",
										"text": "FREE MINT *"
									},
									"id": 2279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateFreeMintCount",
									"nameLocation": "50329:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "50357:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "50349:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "50373:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "50365:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50348:31:0"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50388:0:0"
									},
									"scope": 2563,
									"src": "50320:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1356
									],
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "50540:33:0",
										"statements": [
											{
												"expression": {
													"id": 2286,
													"name": "weedStore",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2200,
													"src": "50557:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2285,
												"id": 2287,
												"nodeType": "Return",
												"src": "50550:16:0"
											}
										]
									},
									"documentation": {
										"id": 2280,
										"nodeType": "StructuredDocumentation",
										"src": "50444:15:0",
										"text": "GETTERS *"
									},
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "50474:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2282,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "50507:8:0"
									},
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50482:2:0"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "50525:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "50525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50524:15:0"
									},
									"scope": 2563,
									"src": "50465:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "50658:39:0",
										"statements": [
											{
												"expression": {
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2297,
														"name": "budPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "50668:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2298,
														"name": "customPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2292,
														"src": "50679:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50668:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2300,
												"nodeType": "ExpressionStatement",
												"src": "50668:22:0"
											}
										]
									},
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "50579:15:0",
										"text": "SETTERS *"
									},
									"functionSelector": "91b7f5ed",
									"id": 2302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2294,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "50648:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50648:9:0"
										}
									],
									"name": "setPrice",
									"nameLocation": "50609:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "customPrice",
												"nameLocation": "50626:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "50618:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50617:21:0"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50658:0:0"
									},
									"scope": 2563,
									"src": "50600:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2327,
										"nodeType": "Block",
										"src": "50768:180:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "newMaxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "50786:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2311,
																"name": "maxbuds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "50801:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "50786:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6577206d617820737570706c79",
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50810:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															},
															"value": "Invalid new max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															}
														],
														"id": 2309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50778:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "50778:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2317,
																"name": "newMaxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "50853:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2318,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "50869:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "50853:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6577206d617820737570706c79",
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50884:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															},
															"value": "Invalid new max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b72e8ae0edd5a513ad336746f164deb3f6e417f35e767bb8deba9958034035ed",
																"typeString": "literal_string \"Invalid new max supply\""
															}
														],
														"id": 2316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50845:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50845:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2322,
												"nodeType": "ExpressionStatement",
												"src": "50845:64:0"
											},
											{
												"expression": {
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2323,
														"name": "maxbuds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "50919:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2324,
														"name": "newMaxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "50929:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50919:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2326,
												"nodeType": "ExpressionStatement",
												"src": "50919:22:0"
											}
										]
									},
									"functionSelector": "c4e9374d",
									"id": 2328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2306,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "50758:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50758:9:0"
										}
									],
									"name": "lowerMaxSupply",
									"nameLocation": "50712:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "newMaxSupply",
												"nameLocation": "50735:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "50727:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50726:22:0"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50768:0:0"
									},
									"scope": 2563,
									"src": "50703:245:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "51023:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "51041:16:0",
															"subExpression": {
																"id": 2336,
																"name": "METADATA_FROZEN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "51042:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d657461646174612066726f7a656e21",
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51059:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7",
																"typeString": "literal_string \"Metadata frozen!\""
															},
															"value": "Metadata frozen!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c155652365f31b560217ab6dcf4c24f3e9bd67eb9c1aab565a9269af9210eeb7",
																"typeString": "literal_string \"Metadata frozen!\""
															}
														],
														"id": 2335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51033:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2340,
												"nodeType": "ExpressionStatement",
												"src": "51033:45:0"
											},
											{
												"expression": {
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2341,
														"name": "weedStore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "51088:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2342,
														"name": "customBaseURI_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "51100:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "51088:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2344,
												"nodeType": "ExpressionStatement",
												"src": "51088:26:0"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2333,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2332,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "51013:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51013:9:0"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "50963:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "customBaseURI_",
												"nameLocation": "50988:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "50974:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "50974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50973:30:0"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51023:0:0"
									},
									"scope": 2563,
									"src": "50954:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "51223:53:0",
										"statements": [
											{
												"expression": {
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2353,
														"name": "freeBudPerWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "51233:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2354,
														"name": "freeMintAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "51252:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51233:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2356,
												"nodeType": "ExpressionStatement",
												"src": "51233:36:0"
											}
										]
									},
									"functionSelector": "b0551ac4",
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2351,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2350,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "51209:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51209:9:0"
										}
									],
									"name": "setFreeMintAllowance",
									"nameLocation": "51136:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "freeMintAllowance",
												"nameLocation": "51165:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "51157:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51156:27:0"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51223:0:0"
									},
									"scope": 2563,
									"src": "51127:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "51348:46:0",
										"statements": [
											{
												"expression": {
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2365,
														"name": "maxBudPerTrans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "51358:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2366,
														"name": "maxMintPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "51375:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51358:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2368,
												"nodeType": "ExpressionStatement",
												"src": "51358:29:0"
											}
										]
									},
									"functionSelector": "616cdb1e",
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2362,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "51338:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51338:9:0"
										}
									],
									"name": "setMaxMintPerTx",
									"nameLocation": "51291:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "maxMintPerTx",
												"nameLocation": "51315:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "51307:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51306:22:0"
									},
									"returnParameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51348:0:0"
									},
									"scope": 2563,
									"src": "51282:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "51461:46:0",
										"statements": [
											{
												"expression": {
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2377,
														"name": "IS_SALE_ACTIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "51471:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2378,
														"name": "saleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "51488:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "51471:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "51471:29:0"
											}
										]
									},
									"functionSelector": "841718a6",
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2375,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2374,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "51451:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51451:9:0"
										}
									],
									"name": "setSaleActive",
									"nameLocation": "51409:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "saleIsActive",
												"nameLocation": "51428:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "51423:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51422:19:0"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51461:0:0"
									},
									"scope": 2563,
									"src": "51400:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "51617:61:0",
										"statements": [
											{
												"expression": {
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2389,
														"name": "freeBudAllowedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "51627:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2390,
														"name": "freeMintIsAllowedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "51649:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51627:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2392,
												"nodeType": "ExpressionStatement",
												"src": "51627:44:0"
											}
										]
									},
									"functionSelector": "8b85e43d",
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2387,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2386,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "51603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51603:9:0"
										}
									],
									"name": "setFreeMintAllowedUntil",
									"nameLocation": "51522:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "freeMintIsAllowedUntil",
												"nameLocation": "51554:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "51546:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51545:32:0"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51617:0:0"
									},
									"scope": 2563,
									"src": "51513:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "51729:39:0",
										"statements": [
											{
												"expression": {
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2399,
														"name": "METADATA_FROZEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "51739:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51757:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "51739:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "51739:22:0"
											}
										]
									},
									"functionSelector": "d111515d",
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2397,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2396,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "51719:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "51719:9:0"
										}
									],
									"name": "freezeMetadata",
									"nameLocation": "51693:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51707:2:0"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51729:0:0"
									},
									"scope": 2563,
									"src": "51684:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "51837:258:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2410,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "51868:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51882:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "51868:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2413,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "51887:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2414,
																	"name": "maxBudPerTrans",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "51902:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51887:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "51868:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e7420616d6f756e7421",
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51930:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda",
																"typeString": "literal_string \"Invalid mint amount!\""
															},
															"value": "Invalid mint amount!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2afc881382e53668af85e40886889fd546013099ff9b53bdd0e598bbbfa87bda",
																"typeString": "literal_string \"Invalid mint amount!\""
															}
														],
														"id": 2409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51847:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51847:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2419,
												"nodeType": "ExpressionStatement",
												"src": "51847:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2421,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "51993:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2422,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "52009:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "51993:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2424,
																"name": "maxbuds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "52024:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "51993:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c7920657863656564656421",
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52045:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3",
																"typeString": "literal_string \"Max supply exceeded!\""
															},
															"value": "Max supply exceeded!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c61dd4df19bfedc67e9e65903122dd2df745b4c85f6abbd7f899090fbd4396a3",
																"typeString": "literal_string \"Max supply exceeded!\""
															}
														],
														"id": 2420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51972:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "ExpressionStatement",
												"src": "51972:105:0"
											},
											{
												"id": 2429,
												"nodeType": "PlaceholderStatement",
												"src": "52087:1:0"
											}
										]
									},
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "51774:12:0",
										"text": "MINT *"
									},
									"id": 2431,
									"name": "mintCompliance",
									"nameLocation": "51801:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "51824:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "51816:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51815:21:0"
									},
									"src": "51792:303:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "52207:789:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2440,
															"name": "IS_SALE_ACTIVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "52225:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206973206e6f742061637469766521",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52241:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259",
																"typeString": "literal_string \"Sale is not active!\""
															},
															"value": "Sale is not active!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2e2dcfc27254beaa6bfe8a568c90788b9920eb389c662813e1427b0b2225259",
																"typeString": "literal_string \"Sale is not active!\""
															}
														],
														"id": 2439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52217:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2443,
												"nodeType": "ExpressionStatement",
												"src": "52217:46:0"
											},
											{
												"assignments": [
													2445
												],
												"declarations": [
													{
														"constant": false,
														"id": 2445,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "52282:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "52274:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2449,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2446,
														"name": "budPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "52290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2447,
														"name": "_mintAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2433,
														"src": "52301:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52290:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52274:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2450,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "52327:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2451,
														"name": "freeBudAllowedUntil",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "52343:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52327:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2498,
												"nodeType": "IfStatement",
												"src": "52323:561:0",
												"trueBody": {
													"id": 2497,
													"nodeType": "Block",
													"src": "52364:520:0",
													"statements": [
														{
															"assignments": [
																2454
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2454,
																	"mutability": "mutable",
																	"name": "remainingFreeMint",
																	"nameLocation": "52386:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2497,
																	"src": "52378:25:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2453,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "52378:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2461,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2455,
																	"name": "freeBudPerWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "52406:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2456,
																		"name": "freeMintCountMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2214,
																		"src": "52441:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2459,
																	"indexExpression": {
																		"expression": {
																			"id": 2457,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "52458:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "52458:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "52441:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "52406:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "52378:91:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2462,
																	"name": "remainingFreeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "52487:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52507:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "52487:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2496,
															"nodeType": "IfStatement",
															"src": "52483:391:0",
															"trueBody": {
																"id": 2495,
																"nodeType": "Block",
																"src": "52510:364:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2465,
																				"name": "_mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "52532:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 2466,
																				"name": "remainingFreeMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2454,
																				"src": "52547:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "52532:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2493,
																			"nodeType": "Block",
																			"src": "52722:138:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 2485,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2481,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2445,
																							"src": "52744:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2484,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2482,
																								"name": "_mintAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2433,
																								"src": "52753:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 2483,
																								"name": "budPrice",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2196,
																								"src": "52767:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "52753:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "52744:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2486,
																					"nodeType": "ExpressionStatement",
																					"src": "52744:31:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 2488,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "52817:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2489,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "52817:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2490,
																								"name": "_mintAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2433,
																								"src": "52829:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2487,
																							"name": "updateFreeMintCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2279,
																							"src": "52797:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 2491,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "52797:44:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2492,
																					"nodeType": "ExpressionStatement",
																					"src": "52797:44:0"
																				}
																			]
																		},
																		"id": 2494,
																		"nodeType": "IfStatement",
																		"src": "52528:332:0",
																		"trueBody": {
																			"id": 2480,
																			"nodeType": "Block",
																			"src": "52566:150:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 2472,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2468,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2445,
																							"src": "52588:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2471,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2469,
																								"name": "remainingFreeMint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2454,
																								"src": "52597:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 2470,
																								"name": "budPrice",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2196,
																								"src": "52617:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "52597:28:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "52588:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2473,
																					"nodeType": "ExpressionStatement",
																					"src": "52588:37:0"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 2475,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "52667:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2476,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "52667:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2477,
																								"name": "remainingFreeMint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2454,
																								"src": "52679:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2474,
																							"name": "updateFreeMintCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2279,
																							"src": "52647:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 2478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "52647:50:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2479,
																					"nodeType": "ExpressionStatement",
																					"src": "52647:50:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2500,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "52902:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "52902:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2502,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "52915:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "52902:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647321",
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52922:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
																"typeString": "literal_string \"Insufficient funds!\""
															},
															"value": "Insufficient funds!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f996caab982251e084504d5fd2ef64388ceaab43bf427eb5c8324e92803cd686",
																"typeString": "literal_string \"Insufficient funds!\""
															}
														],
														"id": 2499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52894:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52894:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2506,
												"nodeType": "ExpressionStatement",
												"src": "52894:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2508,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52965:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52965:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2510,
															"name": "_mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "52977:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2507,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1587,
															1605
														],
														"referencedDeclaration": 1587,
														"src": "52955:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52955:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2512,
												"nodeType": "ExpressionStatement",
												"src": "52955:34:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2436,
													"name": "_mintAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2433,
													"src": "52190:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2437,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2435,
												"name": "mintCompliance",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2431,
												"src": "52175:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52175:27:0"
										}
									],
									"name": "mint",
									"nameLocation": "52110:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "52123:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "52115:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52114:21:0"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52207:0:0"
									},
									"scope": 2563,
									"src": "52101:895:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2531,
										"nodeType": "Block",
										"src": "53128:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2527,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2516,
															"src": "53148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2528,
															"name": "_mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2518,
															"src": "53153:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2526,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1587,
															1605
														],
														"referencedDeclaration": 1587,
														"src": "53138:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53138:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2530,
												"nodeType": "ExpressionStatement",
												"src": "53138:27:0"
											}
										]
									},
									"functionSelector": "408cbf94",
									"id": 2532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2521,
													"name": "_mintAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2518,
													"src": "53093:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2520,
												"name": "mintCompliance",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2431,
												"src": "53078:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53078:27:0"
										},
										{
											"id": 2524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2523,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "53114:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53114:9:0"
										}
									],
									"name": "mintOwner",
									"nameLocation": "53011:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "53029:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "53021:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "53042:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "53034:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53020:34:0"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53128:0:0"
									},
									"scope": 2563,
									"src": "53002:170:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "53178:14:0",
										"text": "PAYOUT *"
									},
									"id": 2536,
									"mutability": "constant",
									"name": "payoutAddress1",
									"nameLocation": "53223:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2563,
									"src": "53198:92:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2534,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "53198:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832653435413330353336333943453937663433623437363143413933333245613742356144423861",
										"id": 2535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "53248:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2e45A3053639CE97f43b4761CA9332Ea7B5aDB8a"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "53348:117:0",
										"statements": [
											{
												"assignments": [
													2544
												],
												"declarations": [
													{
														"constant": false,
														"id": 2544,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "53366:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2561,
														"src": "53358:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "53358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2550,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2547,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "53384:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_StonersTownWtf_$2563",
																	"typeString": "contract StonersTownWtf"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_StonersTownWtf_$2563",
																	"typeString": "contract StonersTownWtf"
																}
															],
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53376:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2545,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53376:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53376:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "53376:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53358:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2556,
																	"name": "payoutAddress1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "53433:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53425:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53425:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53425:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2558,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "53450:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2551,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "53407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$659_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 2553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 416,
														"src": "53407:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53407:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2560,
												"nodeType": "ExpressionStatement",
												"src": "53407:51:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2539,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2538,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 307,
												"src": "53325:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53325:9:0"
										},
										{
											"id": 2541,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2540,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "53335:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53335:12:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "53307:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53315:2:0"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53348:0:0"
									},
									"scope": 2563,
									"src": "53298:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2564,
							"src": "49335:4132:0",
							"usedErrors": [
								880,
								882,
								884,
								886,
								888,
								896,
								898,
								902,
								906,
								908,
								910,
								912,
								914
							]
						}
					],
					"src": "2274:51193:0"
				},
				"id": 0
			}
		}
	}
}